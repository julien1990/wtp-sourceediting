<project default="run" name="org.eclipse.wst.xml.xpath2.releng/build.xml - Run a PsychoPath build using the Athena CBI">
	<!-- load properties and set timestamp for the build -->

	<property environment="env" />
	<property name="WORKSPACE" location="${env.WORKSPACE}" />

	<ant antfile="bootstrap.xml" target="init">
		<property name="basebuilderTag" value="R36_M4" />
		<property name="commonrelengTag" value="HEAD" />
		<property name="ANTCONTRIB_VERSION" value="1.0b2" />
		<property name="ANT4ECLIPSE_VERSION" value="1.0.0.M3" />
		<property name="build.properties" value="build.properties" />
	</ant>

	<!-- FIXME if required: Set a valid path to JAVA_HOME, if Eclipse's ${java.home}/../bin/javac cannot be found -->
	<condition property="JAVA_HOME" value="${java.home}" else="${java.home}/..">
		<available file="${java.home}/bin/javac" type="file" />
	</condition>

	<!-- FIXME if required: if not using this type of qualifier, comment next 4 lines -->
	<tstamp>
		<format property="buildTimestamp" pattern="yyyyMMddHHmm" />
	</tstamp>

	<property name="build.properties" value="build.properties" />
	<property file="${build.properties}" />

	<property name="forceContextQualifier" value="v${buildTimestamp}" />
	<property name="fetchTag" value="HEAD" />

	<import file="findbugs.xml" />
	<import file="pmd.xml" />
	<dirname file="${relengBuilderDir}" property="workspaceDir" />

	<property name="writableBuildRoot" value="/tmp/build" />
	<property name="sdkzipUrl" value="https://build.eclipse.org/hudson/job/cbi-wtp-wst.xsl.psychopath/ws/build/athena/"/>

	<property name="buildDir" value="${writableBuildRoot}/athena" />

	<target name="init">
		<delete dir="${buildDir}" failonerror="false" />
	</target>

	<target name="run" depends="init">
		<echo message="Workspace: ${WORKSPACE}" />
		<echo message="Writable Build Root: ${writableBuildRoot}" />
		<mkdir dir="${writableBuildRoot}" />

		<condition property="JAVA_HOME" value="${java.home}" else="${java.home}/..">
			<available file="${java.home}/bin/javac" type="file" />
		</condition>

		<ant antfile="${relengCommonBuilderDir}/build.xml" />

		<antcall target="findbugs" inheritall="true" />
		<cleanUpBuild />
		<antcall target="duplicateCode" inheritall="true" />
	</target>

    <macrodef name="cleanUpBuild">
        <sequential>
    		<delete dir="${buildDir}/eclipse" failonerror="false" />
    		<delete dir="${buildDir}/testing" failonerror="false" />
    		<delete dir="${buildDir}/compilelogs" failonerror="false"/>
    		<delete dir="${buildDir}/testResults/consolelogs" failonerror="false"/>
    		<delete dir="${buildDir}/testResults/html" failonerror="false"/>
    		<delete dir="${writableBuildRoot}/athena/findbugs"/>		
    		<delete dir="${writableBuildRoot}/athena/findbugsclasses"/>		
    		<delete>
    			<fileset dir="${buildDir}">
    				<include name="*AllFeatures*.zip*"/>
    				<include name="*Master*.zip*"/>
    			</fileset>
    		</delete>
        </sequential>
    </macrodef>
	

    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="findbugs" description="Run a find bugs analysis based on a ZIP file contents.">
		<patternset id="xpathjars">
			<include name="eclipse/plugins/org.eclipse.wst.xml.xpath2.processor*.jar"/>
		</patternset>
		<getFindBugs downloadDir="${writableBuildRoot}/downloads" destDir="${writableBuildRoot}/3rdPartyJars/findbugs"/>
		<extractJarsForAnalysis src="${sdkzipUrl}${zipPrefix}-SDK-${buildType}${buildTimestamp}.zip" refid="xpathjars"/>
		<findBugs outputfile="${writableBuildRoot}/athena/fb-xpath20processor.xml"/>
    </target>
	
	<target name="duplicateCode" description="Run PMD duplicate code analysis">
		<getPMD downloadDir="${writableBuildRoot}/downloads" destDir="${writableBuildRoot}/3rdPartyJars/pmd"/>
		<cpd outputfile="${writableBuildRoot}/athena/cpd-xpath20processor.xml" srcdir="${WORKSPACE}"/>
	</target>
</project>
