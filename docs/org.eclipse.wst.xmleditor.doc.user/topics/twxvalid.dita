<?xml version="1.0" encoding="utf-8"?>
<!--Arbortext, Inc., 1988-2006, v.4002-->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<task id="twxvalid" xml:lang="en-us">
<title>Validating XML files</title>
<titlealts>
<searchtitle>Validating XML files</searchtitle>
</titlealts>
<shortdesc>When you validate your XML file, the XML validator will check to
see that your file is valid and well-formed.</shortdesc>
<prolog><metadata>
<keywords><indexterm>XML files<indexterm>validating</indexterm></indexterm>
</keywords>
</metadata></prolog>
<taskbody>
<context><p>The XML editor will process XML files that are invalid or not
well-formed. The editor uses heuristics to open a file using the best interpretation
of the tagging that it can. For example, an element with a missing end tag
is simply assumed to end at the end of the document. As you make updates to
a file, the editor incrementally reinterprets your document, changing the
highlighting, tree view, and so on. Many formation errors are easy to spot
in the syntax highlighting, so you can easily correct obvious errors on-the-fly.
However, there will be other cases when it will be beneficial to perform formal
validation on your documents.</p></context>
<steps>
<step><cmd>You can validate your file by selecting it in the Navigator view,
right-clicking it, and clicking <uicontrol>Validate</uicontrol>.</cmd>
</step>
</steps>
<result><p>Any validation problems are indicated in the Problems view. </p></result>
<postreq><p>In the Problems view, you can double-click on individual errors,
and you will be taken to the invalid tag in the file, so that you can make
corrections. </p><p><b>Note</b>: If you receive an error message indicating
that the Problems view is full, you can increase the number of error messages
allowed by selecting <menucascade><uicontrol>Properties</uicontrol><uicontrol>Validation</uicontrol>
</menucascade> from the project's pop-up menu and specifying the maximum number
of error messages allowed. You must select the <uicontrol>Override validation
preferences</uicontrol> check box in order to be able to do this.</p><p>As
well, you can set up a project's properties so that different types of project
resources are automatically validated when you save them. From a project's
pop-up menu select <uicontrol>Properties</uicontrol>, then select <uicontrol>Validation</uicontrol>.
Any validators you can run against your project will be listed in the Validation
page.</p></postreq>
</taskbody>
<related-links>
<link href="../../org.eclipse.jst.j2ee.doc.user/topics/tjval.dita" scope="peer">
<linktext>Validating code in enterprise applications</linktext></link>
</related-links>
</task>
<?Pub *0000002727?>
