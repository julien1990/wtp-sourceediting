<?xml version="1.0" encoding="UTF-8"?>
<jel>
	<admin creation="Thu Aug 27 01:16:13 GMT 2009" xsdversion="1.0.0" version="1.0.0" />
	<jelclass superclass="Object" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath2.processor.DOMBuilder" type="DOMBuilder">
		<implements>
			<interface fulltype="org.eclipse.wst.xml.xpath2.processor.DOMLoader" type="DOMLoader" />
		</implements>
		<comment>
			<description>The DOM builder loads an DOM from an InputStream. The loading is always namespace aware.</description>
		</comment>
		<fields>
			<field visibility="package-private" name="_validating" fulltype="boolean" type="boolean" />
			<field visibility="package-private" name="_namespace_aware" fulltype="boolean" type="boolean" />
		</fields>
		<methods>
			<constructor visibility="public" name="DOMBuilder">
				<comment>
					<description>Constructor for DOM builder.</description>
				</comment>
			</constructor>
			<method visibility="public" name="load" returncomment="The loaded document." fulltype="org.w3c.dom.Document" type="Document">
				<comment>
					<description>Loads The XML document.</description>
					<attribute name="@param">
						<description>in
            is the input stream.</description>
					</attribute>
					<attribute name="@throws">
						<description>DOMLoaderException
             DOM loader exception.</description>
					</attribute>
					<attribute name="@return">
						<description>The loaded document.</description>
					</attribute>
				</comment>
				<params>
					<param name="in" comment="is the input stream." fulltype="java.io.InputStream" type="InputStream" />
				</params>
				<exceptions>
					<exception comment="DOM loader exception." fulltype="org.eclipse.wst.xml.xpath2.processor.DOMLoaderException" type="DOMLoaderException" />
				</exceptions>
			</method>
			<method visibility="public" name="set_validating" fulltype="void" type="void">
				<comment>
					<description>Set validating boolean.</description>
					<attribute name="@param">
						<description>x
            is the value to set the validating boolean to.</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="is the value to set the validating boolean to." fulltype="boolean" type="boolean" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" interface="true" fulltype="org.eclipse.wst.xml.xpath2.processor.DOMLoader" type="DOMLoader">
		<comment>
			<description>The DOM loader loads the XML document.</description>
		</comment>
		<methods>
			<method visibility="public" name="load" returncomment="The loaded document. The document is always loaded as namespace-aware" fulltype="org.w3c.dom.Document" type="Document">
				<comment>
					<description>The DOM loader loads the XML docuemnt</description>
					<attribute name="@param">
						<description>in
            is the input stream.</description>
					</attribute>
					<attribute name="@throws">
						<description>DOMLoaderException
             DOM loader exception.</description>
					</attribute>
					<attribute name="@return">
						<description>The loaded document. The document is always loaded as namespace-aware</description>
					</attribute>
				</comment>
				<params>
					<param name="in" comment="is the input stream." fulltype="java.io.InputStream" type="InputStream" />
				</params>
				<exceptions>
					<exception comment="DOM loader exception." fulltype="org.eclipse.wst.xml.xpath2.processor.DOMLoaderException" type="DOMLoaderException" />
				</exceptions>
			</method>
			<method visibility="public" name="set_validating" fulltype="void" type="void">
				<comment>
					<description>Set validating boolean.</description>
					<attribute name="@param">
						<description>val
            is the validating boolean.</description>
					</attribute>
				</comment>
				<params>
					<param name="val" comment="is the validating boolean." fulltype="boolean" type="boolean" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XPathException" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" serializable="true" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.XPathException" fulltype="org.eclipse.wst.xml.xpath2.processor.DOMLoaderException" type="DOMLoaderException">
		<comment>
			<description>Exception caused by DOM loader.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="DOMLoaderException">
				<comment>
					<description>Constructor for DOM loader exception.</description>
					<attribute name="@param">
						<description>reason
            is the reason for the exception.</description>
					</attribute>
				</comment>
				<params>
					<param name="reason" comment="is the reason for the exception." fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
		</methods>
	</jelclass>
	<jelclass superclass="DefaultStaticContext" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" superclassfulltype="DefaultStaticContext" fulltype="org.eclipse.wst.xml.xpath2.processor.DefaultDynamicContext" type="DefaultDynamicContext">
		<implements>
			<interface fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicContext" type="DynamicContext" />
		</implements>
		<comment>
			<description>The default implementation of a Dynamic Context.
 
 Initializes and provides functionality of a dynamic context according to the
 XPath 2.0 specification.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="DefaultDynamicContext">
				<comment>
					<description>Constructor.</description>
					<attribute name="@param">
						<description>schema
            Schema information of document. May be null</description>
					</attribute>
					<attribute name="@param">
						<description>doc
            Document [root] node of XML source.</description>
					</attribute>
				</comment>
				<params>
					<param name="schema" comment="Schema information of document. May be null" fulltype="XSModel" type="XSModel" />
					<param name="doc" comment="Document [root] node of XML source." fulltype="org.w3c.dom.Document" type="Document" />
				</params>
			</constructor>
			<method visibility="public" name="tz" returncomment="an xs:integer _tz" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Reads the day from a TimeDuration type</description>
					<attribute name="@return">
						<description>an xs:integer _tz</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="current_date_time" fulltype="java.util.GregorianCalendar" type="GregorianCalendar">
				<comment>
					<description>Gets the Current stable date time from the dynamic context.</description>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
					<attribute name="@see">
						<description>org.eclipse.wst.xml.xpath2.processor.DynamicContext#get_current_time()</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="set_focus" fulltype="void" type="void">
				<comment>
					<description>Changes the current focus.</description>
					<attribute name="@param">
						<description>f
            focus to set</description>
					</attribute>
				</comment>
				<params>
					<param name="f" comment="focus to set" fulltype="Focus" type="Focus" />
				</params>
			</method>
			<method visibility="public" name="focus" returncomment="_focus" fulltype="Focus" type="Focus">
				<comment>
					<description>Return the focus</description>
					<attribute name="@return">
						<description>_focus</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="context_item" returncomment="an AnyType result from _focus.context_item()" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<comment>
					<description>Retrieve context item that is in focus</description>
					<attribute name="@return">
						<description>an AnyType result from _focus.context_item()</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="context_position" returncomment="an integer result from _focus.position()" fulltype="int" type="int">
				<comment>
					<description>Retrieve the position of the focus</description>
					<attribute name="@return">
						<description>an integer result from _focus.position()</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="last" returncomment="an integer result from _focus.last()" fulltype="int" type="int">
				<comment>
					<description>Retrieve the position of the last focus</description>
					<attribute name="@return">
						<description>an integer result from _focus.last()</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="get_variable" returncomment="an AnyType result from get_var(name) or return NULL" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<comment>
					<description>Retrieve the variable name</description>
					<attribute name="@return">
						<description>an AnyType result from get_var(name) or return NULL</description>
					</attribute>
				</comment>
				<params>
					<param name="name" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="evaluate_function" returncomment="a ResultSequence from funct.evaluate(args)" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<attribute name="@return">
						<description>a ResultSequence from funct.evaluate(args)</description>
					</attribute>
				</comment>
				<params>
					<param name="name" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
					<param name="args" fulltype="java.util.Collection" type="Collection" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="add_function_library" fulltype="void" type="void">
				<comment>
					<description>Adds function definitions.</description>
					<attribute name="@param">
						<description>fl
            Function library to add.</description>
					</attribute>
				</comment>
				<params>
					<param name="fl" comment="Function library to add." fulltype="FunctionLibrary" type="FunctionLibrary" />
				</params>
			</method>
			<method visibility="public" name="get_doc" returncomment="a ResultSequence from ResultSequenceFactory.create_new()" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>get document</description>
					<attribute name="@return">
						<description>a ResultSequence from ResultSequenceFactory.create_new()</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="resolved" fulltype="java.net.URI" type="URI" />
				</params>
			</method>
			<method visibility="public" name="resolve_uri" fulltype="java.net.URI" type="URI">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="uri" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="set_variable" fulltype="void" type="void">
				<comment>
					<description>Sets the value of a variable.</description>
					<attribute name="@param">
						<description>var
            Variable name.</description>
					</attribute>
					<attribute name="@param">
						<description>val
            Variable value.</description>
					</attribute>
				</comment>
				<params>
					<param name="var" comment="Variable name." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
					<param name="val" comment="Variable value." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath2.processor.DefaultEvaluator" type="DefaultEvaluator">
		<implements>
			<interface fulltype="org.eclipse.wst.xml.xpath2.processor.Evaluator" type="Evaluator" />
		</implements>
		<comment>
			<description>Default evaluator interface</description>
		</comment>
		<methods>
			<constructor visibility="public" name="DefaultEvaluator">
				<comment>
					<description>set parameters</description>
					<attribute name="@param">
						<description>dc
            is the dynamic context.</description>
					</attribute>
					<attribute name="@param">
						<description>doc
            is the document.</description>
					</attribute>
				</comment>
				<params>
					<param name="dc" comment="is the dynamic context." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicContext" type="DynamicContext" />
					<param name="doc" comment="is the document." fulltype="org.w3c.dom.Document" type="Document" />
				</params>
			</constructor>
			<method visibility="public" name="evaluate" returncomment="result sequence." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>evaluate the xpath node</description>
					<attribute name="@param">
						<description>node
            is the xpath node.</description>
					</attribute>
					<attribute name="@throws">
						<description>dynamic
             error.</description>
					</attribute>
					<attribute name="@return">
						<description>result sequence.</description>
					</attribute>
				</comment>
				<params>
					<param name="node" comment="is the xpath node." fulltype="XPathNode" type="XPathNode" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="visit" returncomment="result sequence." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>iterate through xpath expression</description>
					<attribute name="@param">
						<description>xp
            is the xpath.</description>
					</attribute>
					<attribute name="@return">
						<description>result sequence.</description>
					</attribute>
				</comment>
				<params>
					<param name="xp" comment="is the xpath." fulltype="org.eclipse.wst.xml.xpath2.processor.ast.XPath" type="XPath" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit for expression</description>
					<attribute name="@param">
						<description>fex
            is the for expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function.</description>
					</attribute>
				</comment>
				<params>
					<param name="fex" comment="is the for expression." fulltype="ForExpr" type="ForExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function or null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit quantified expression</description>
					<attribute name="@param">
						<description>qex
            is the quantified expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function or null.</description>
					</attribute>
				</comment>
				<params>
					<param name="qex" comment="is the quantified expression." fulltype="QuantifiedExpr" type="QuantifiedExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a ifex.then_clause().accept(this)." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit if expression</description>
					<attribute name="@param">
						<description>ifex
            is the if expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a ifex.then_clause().accept(this).</description>
					</attribute>
				</comment>
				<params>
					<param name="ifex" comment="is the if expression." fulltype="IfExpr" type="IfExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit or expression</description>
					<attribute name="@param">
						<description>orex
            is the or expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="orex" comment="is the or expression." fulltype="OrExpr" type="OrExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit and expression</description>
					<attribute name="@param">
						<description>andex
            is the and expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="andex" comment="is the and expression." fulltype="AndExpr" type="AndExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function or null" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit compare expression</description>
					<attribute name="@param">
						<description>cmpex
            is the compare expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function or null</description>
					</attribute>
				</comment>
				<params>
					<param name="cmpex" comment="is the compare expression." fulltype="CmpExpr" type="CmpExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit range expression</description>
					<attribute name="@param">
						<description>rex
            is the range expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="rex" comment="is the range expression." fulltype="RangeExpr" type="RangeExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit and expression</description>
					<attribute name="@param">
						<description>addex
            is the and expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="addex" comment="is the and expression." fulltype="AddExpr" type="AddExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit sub expression</description>
					<attribute name="@param">
						<description>subex
            is the sub expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="subex" comment="is the sub expression." fulltype="SubExpr" type="SubExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit multiply expression</description>
					<attribute name="@param">
						<description>mulex
            is the mul expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="mulex" comment="is the mul expression." fulltype="MulExpr" type="MulExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit division expression</description>
					<attribute name="@param">
						<description>mulex
            is the division expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="mulex" comment="is the division expression." fulltype="DivExpr" type="DivExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit integer division expression</description>
					<attribute name="@param">
						<description>mulex
            is the integer division expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="mulex" comment="is the integer division expression." fulltype="IDivExpr" type="IDivExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit modular expression</description>
					<attribute name="@param">
						<description>mulex
            is the modular expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="mulex" comment="is the modular expression." fulltype="ModExpr" type="ModExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit union expression</description>
					<attribute name="@param">
						<description>unex
            is the union expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="unex" comment="is the union expression." fulltype="UnionExpr" type="UnionExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit pipe expression</description>
					<attribute name="@param">
						<description>pipex
            is the pipe expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="pipex" comment="is the pipe expression." fulltype="PipeExpr" type="PipeExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit intersect expression</description>
					<attribute name="@param">
						<description>iexpr
            is the intersect expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="iexpr" comment="is the intersect expression." fulltype="IntersectExpr" type="IntersectExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit except expression</description>
					<attribute name="@param">
						<description>eexpr
            is the except expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="eexpr" comment="is the except expression." fulltype="ExceptExpr" type="ExceptExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit instance of expression</description>
					<attribute name="@param">
						<description>ioexp
            is the instance of expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="ioexp" comment="is the instance of expression." fulltype="InstOfExpr" type="InstOfExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit treat-as expression</description>
					<attribute name="@param">
						<description>taexp
            is the treat-as expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="taexp" comment="is the treat-as expression." fulltype="TreatAsExpr" type="TreatAsExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit castable expression</description>
					<attribute name="@param">
						<description>cexp
            is the castable expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="cexp" comment="is the castable expression." fulltype="CastableExpr" type="CastableExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit cast expression</description>
					<attribute name="@param">
						<description>cexp
            is the cast expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="cexp" comment="is the cast expression." fulltype="CastExpr" type="CastExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit minus expression</description>
					<attribute name="@param">
						<description>e
            is the minus expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the minus expression." fulltype="MinusExpr" type="MinusExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit plus expression</description>
					<attribute name="@param">
						<description>e
            is the plus expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the plus expression." fulltype="PlusExpr" type="PlusExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit XPath expression</description>
					<attribute name="@param">
						<description>e
            is the XPath expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the XPath expression." fulltype="XPathExpr" type="XPathExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit a forward step expression</description>
					<attribute name="@param">
						<description>e
            is the forward step.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the forward step." fulltype="ForwardStep" type="ForwardStep" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit a reverse step expression</description>
					<attribute name="@param">
						<description>e
            is the reverse step.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the reverse step." fulltype="ReverseStep" type="ReverseStep" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit a name test expression</description>
					<attribute name="@param">
						<description>e
            is thename test.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is thename test." fulltype="NameTest" type="NameTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit variable reference</description>
					<attribute name="@param">
						<description>e
            is the variable reference.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the variable reference." fulltype="VarRef" type="VarRef" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit string literal.</description>
					<attribute name="@param">
						<description>e
            is the string literal.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the string literal." fulltype="StringLiteral" type="StringLiteral" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit integer literal.</description>
					<attribute name="@param">
						<description>e
            is the integer literal.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the integer literal." fulltype="IntegerLiteral" type="IntegerLiteral" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit double literal.</description>
					<attribute name="@param">
						<description>e
            is the double literal.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the double literal." fulltype="DoubleLiteral" type="DoubleLiteral" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit decimal literal.</description>
					<attribute name="@param">
						<description>e
            is the decimal literal.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the decimal literal." fulltype="DecimalLiteral" type="DecimalLiteral" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit parent expression.</description>
					<attribute name="@param">
						<description>e
            is the parent expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the parent expression." fulltype="ParExpr" type="ParExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit context item expression.</description>
					<attribute name="@param">
						<description>e
            is the context item expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the context item expression." fulltype="CntxItemExpr" type="CntxItemExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function or null" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit function call.</description>
					<attribute name="@param">
						<description>e
            is the function call.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function or null</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the function call." fulltype="FunctionCall" type="FunctionCall" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit single type.</description>
					<attribute name="@param">
						<description>e
            is the single type.</description>
					</attribute>
					<attribute name="@return">
						<description>null</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the single type." fulltype="SingleType" type="SingleType" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit sequence type.</description>
					<attribute name="@param">
						<description>e
            is the sequence type.</description>
					</attribute>
					<attribute name="@return">
						<description>null</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the sequence type." fulltype="SequenceType" type="SequenceType" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit item type.</description>
					<attribute name="@param">
						<description>e
            is the item type.</description>
					</attribute>
					<attribute name="@return">
						<description>null</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the item type." fulltype="ItemType" type="ItemType" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit any kind test.</description>
					<attribute name="@param">
						<description>e
            is the any kind test.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the any kind test." fulltype="AnyKindTest" type="AnyKindTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit document test.</description>
					<attribute name="@param">
						<description>e
            is the document test.</description>
					</attribute>
					<attribute name="@return">
						<description>result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the document test." fulltype="DocumentTest" type="DocumentTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit text test.</description>
					<attribute name="@param">
						<description>e
            is the text test.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the text test." fulltype="TextTest" type="TextTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a new function" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit comment test.</description>
					<attribute name="@param">
						<description>e
            is the text test.</description>
					</attribute>
					<attribute name="@return">
						<description>a new function</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the text test." fulltype="CommentTest" type="CommentTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a argument" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit PI test.</description>
					<attribute name="@param">
						<description>e
            is the PI test.</description>
					</attribute>
					<attribute name="@return">
						<description>a argument</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the PI test." fulltype="PITest" type="PITest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit attribute test.</description>
					<attribute name="@param">
						<description>e
            is the attribute test.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the attribute test." fulltype="AttributeTest" type="AttributeTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit schema attribute test.</description>
					<attribute name="@param">
						<description>e
            is the schema attribute test.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the schema attribute test." fulltype="SchemaAttrTest" type="SchemaAttrTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit element test.</description>
					<attribute name="@param">
						<description>e
            is the element test.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the element test." fulltype="ElementTest" type="ElementTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit schema element test.</description>
					<attribute name="@param">
						<description>e
            is the schema element test.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the schema element test." fulltype="SchemaElemTest" type="SchemaElemTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit axis step.</description>
					<attribute name="@param">
						<description>e
            is the axis step.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the axis step." fulltype="AxisStep" type="AxisStep" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="a result sequence" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>visit filter expression</description>
					<attribute name="@param">
						<description>e
            is the filter expression.</description>
					</attribute>
					<attribute name="@return">
						<description>a result sequence</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the filter expression." fulltype="FilterExpr" type="FilterExpr" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" interface="true" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicContext" type="DynamicContext">
		<implements>
			<interface fulltype="org.eclipse.wst.xml.xpath2.processor.StaticContext" type="StaticContext" />
		</implements>
		<comment>
			<description>Interface for dynamic context.</description>
		</comment>
		<methods>
			<method visibility="public" name="context_item" returncomment="the context item." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<comment>
					<description>Get context item.</description>
					<attribute name="@return">
						<description>the context item.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="context_position" returncomment="position of context node." fulltype="int" type="int">
				<comment>
					<description>Get context node position.</description>
					<attribute name="@return">
						<description>position of context node.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="last" returncomment="last item position." fulltype="int" type="int">
				<comment>
					<description>Get position of last item.</description>
					<attribute name="@return">
						<description>last item position.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="get_variable" returncomment="variable." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<comment>
					<description>Get variable.</description>
					<attribute name="@param">
						<description>name
            is the name of the variable.</description>
					</attribute>
					<attribute name="@return">
						<description>variable.</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the name of the variable." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="set_variable" fulltype="void" type="void">
				<comment>
					<description>Set variable.</description>
					<attribute name="@param">
						<description>var
            is name of the variable.</description>
					</attribute>
					<attribute name="@param">
						<description>val
            is the value to be set for the variable.</description>
					</attribute>
				</comment>
				<params>
					<param name="var" comment="is name of the variable." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
					<param name="val" comment="is the value to be set for the variable." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
			</method>
			<method visibility="public" name="evaluate_function" returncomment="result of the function evaluation." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Evaluate the function of the arguments.</description>
					<attribute name="@param">
						<description>name
            is the name.</description>
					</attribute>
					<attribute name="@param">
						<description>args
            are the arguments.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError
             dynamic error.</description>
					</attribute>
					<attribute name="@return">
						<description>result of the function evaluation.</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the name." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
					<param name="args" comment="are the arguments." fulltype="java.util.Collection" type="Collection" />
				</params>
				<exceptions>
					<exception comment="dynamic error." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="tz" returncomment="current date time and implicit timezone." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Reads the day from a TimeDuration type</description>
					<attribute name="@return">
						<description>current date time and implicit timezone.</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="get_doc" returncomment="document." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Get document.</description>
					<attribute name="@param">
						<description>uri
            is the URI of the document.</description>
					</attribute>
					<attribute name="@return">
						<description>document.</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="uri" comment="is the URI of the document." fulltype="java.net.URI" type="URI" />
				</params>
			</method>
			<method visibility="public" name="resolve_uri" returncomment="the absolutized, resolved URI." fulltype="java.net.URI" type="URI">
				<comment>
					<description>Resolve an URI</description>
					<attribute name="@param">
						<description>uri
            is the possibly relative URI to resolve</description>
					</attribute>
					<attribute name="@return">
						<description>the absolutized, resolved URI.</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="uri" comment="is the possibly relative URI to resolve" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="current_date_time" returncomment="The current date and time, which will always be same for the dynamic context." fulltype="java.util.GregorianCalendar" type="GregorianCalendar">
				<comment>
					<description>Returns the current date time using the GregorianCalendar.</description>
					<attribute name="@return">
						<description>The current date and time, which will always be same for the dynamic context.</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="set_focus" fulltype="void" type="void">
				<comment>
					<description>Set focus.</description>
					<attribute name="@param">
						<description>focus
            is focus to be set.</description>
					</attribute>
				</comment>
				<params>
					<param name="focus" comment="is focus to be set." fulltype="Focus" type="Focus" />
				</params>
			</method>
			<method visibility="public" name="focus" returncomment="Focus" fulltype="Focus" type="Focus">
				<comment>
					<description>Return focus.</description>
					<attribute name="@return">
						<description>Focus</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XPathException" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" serializable="true" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.XPathException" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
		<comment>
			<description>Dynamic Error like division by 0 or type errors.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="DynamicError">
				<comment>
					<description>Constructor for Dynamic Error.</description>
					<attribute name="@param">
						<description>code
            is the code that is set.</description>
					</attribute>
					<attribute name="@param">
						<description>err
            is the reason for the error.</description>
					</attribute>
				</comment>
				<params>
					<param name="code" comment="is the code that is set." fulltype="java.lang.String" type="String" />
					<param name="err" comment="is the reason for the error." fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="DynamicError">
				<comment>
					<description>Constructor for Dynamic Error.</description>
					<attribute name="@param">
						<description>te
            is the error type.</description>
					</attribute>
				</comment>
				<params>
					<param name="te" comment="is the error type." fulltype="TypeError" type="TypeError" />
				</params>
			</constructor>
			<method visibility="public" name="code" returncomment="the code." fulltype="java.lang.String" type="String">
				<comment>
					<description>Returns the string of the code.</description>
					<attribute name="@return">
						<description>the code.</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="cant_cast" returncomment="the DynamicError." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the dynamic error.</description>
					<attribute name="@param">
						<description>err
            is the error</description>
					</attribute>
					<attribute name="@return">
						<description>the DynamicError.</description>
					</attribute>
				</comment>
				<params>
					<param name="err" comment="is the error" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="throw_type_error" returncomment="the DynamicError." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the dynamic error.</description>
					<attribute name="@throws">
						<description>DynamicError
             a Dynamic Error</description>
					</attribute>
					<attribute name="@return">
						<description>the DynamicError.</description>
					</attribute>
				</comment>
				<exceptions>
					<exception comment="a Dynamic Error" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method static="true" visibility="public" name="user_error" returncomment="the DynamicError." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the dynamic error.</description>
					<attribute name="@param">
						<description>desc
            is the description of the error</description>
					</attribute>
					<attribute name="@return">
						<description>the DynamicError.</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="ns" fulltype="java.lang.String" type="String" />
					<param name="code" fulltype="java.lang.String" type="String" />
					<param name="desc" comment="is the description of the error" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="user_error" returncomment="the DynamicError." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the dynamic error.</description>
					<attribute name="@param">
						<description>err
            is the description of the error</description>
					</attribute>
					<attribute name="@return">
						<description>the DynamicError.</description>
					</attribute>
				</comment>
				<params>
					<param name="err" comment="is the description of the error" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="regex_flags_error" returncomment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the Dynamic Error for invalid flags in regular expressions</description>
					<attribute name="@param">
						<description>err</description>
					</attribute>
					<attribute name="@return" />
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="err" comment="" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="regex_error" returncomment="the DynamicError." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the dynamic error.</description>
					<attribute name="@param">
						<description>err
            is the error</description>
					</attribute>
					<attribute name="@return">
						<description>the DynamicError.</description>
					</attribute>
				</comment>
				<params>
					<param name="err" comment="is the error" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="regex_match_zero_length" returncomment="the DynamicError." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the dynamic error.</description>
					<attribute name="@param">
						<description>err
            is the error</description>
					</attribute>
					<attribute name="@return">
						<description>the DynamicError.</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="err" comment="is the error" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="unsupported_codepoint" returncomment="the DynamicError." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the dynamic error for an unsupported Unicode codepoint</description>
					<attribute name="@param">
						<description>err
            is the error</description>
					</attribute>
					<attribute name="@return">
						<description>the DynamicError.</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="err" comment="is the error" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="unsupported_normalization_form" returncomment="the DynamicError." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the dynamic error for an unsupported normalization form</description>
					<attribute name="@param">
						<description>err
            is the error</description>
					</attribute>
					<attribute name="@return">
						<description>the DynamicError.</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="err" comment="is the error" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="lexical_error" returncomment="the make_error" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the error message when reads an Invalid lexical value</description>
					<attribute name="@param">
						<description>msg
            is the message</description>
					</attribute>
					<attribute name="@return">
						<description>the make_error</description>
					</attribute>
				</comment>
				<params>
					<param name="msg" comment="is the message" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="not_cmp" returncomment="the make_error" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the error message when reads an Items not comparable</description>
					<attribute name="@param">
						<description>msg
            is the message</description>
					</attribute>
					<attribute name="@return">
						<description>the make_error</description>
					</attribute>
				</comment>
				<params>
					<param name="msg" comment="is the message" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="more_one_item" returncomment="the make_error" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the error message</description>
					<attribute name="@param">
						<description>msg
            is the message</description>
					</attribute>
					<attribute name="@return">
						<description>the make_error</description>
					</attribute>
				</comment>
				<params>
					<param name="msg" comment="is the message" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="empty_seq" returncomment="the make_error" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the error message</description>
					<attribute name="@param">
						<description>msg
            is the message</description>
					</attribute>
					<attribute name="@return">
						<description>the make_error</description>
					</attribute>
				</comment>
				<params>
					<param name="msg" comment="is the message" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="not_one" returncomment="the make_error" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the error message</description>
					<attribute name="@param">
						<description>msg
            is the message</description>
					</attribute>
					<attribute name="@return">
						<description>the make_error</description>
					</attribute>
				</comment>
				<params>
					<param name="msg" comment="is the message" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="invalid_doc" returncomment="the make_error" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the error message when reads Invalid argument to fn:doc</description>
					<attribute name="@param">
						<description>msg
            is the message</description>
					</attribute>
					<attribute name="@return">
						<description>the make_error</description>
					</attribute>
				</comment>
				<params>
					<param name="msg" comment="is the message" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="doc_not_found" returncomment="the make_error" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the error message when fn:doc cannot load its document</description>
					<attribute name="@param">
						<description>msg
            is the message</description>
					</attribute>
					<attribute name="@return">
						<description>the make_error</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="msg" comment="is the message" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="div_zero" returncomment="the make_error" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Returns the error message when reads a Division by zero</description>
					<attribute name="@param">
						<description>msg
            is the message</description>
					</attribute>
					<attribute name="@return">
						<description>the make_error</description>
					</attribute>
				</comment>
				<params>
					<param name="msg" comment="is the message" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="numeric_overflow" returncomment="the make_error" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Numeric operation overflow/underflow</description>
					<attribute name="@param">
						<description>msg
            is the message</description>
					</attribute>
					<attribute name="@return">
						<description>the make_error</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="msg" comment="is the message" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="contextUndefined" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="invalidForCastConstructor" returncomment="FORG0001" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>Data is invalid for casting or the data type constructor.</description>
					<attribute name="@param">
						<description>msg</description>
					</attribute>
					<attribute name="@return">
						<description>FORG0001</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="invalidPrefix" returncomment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>No namespace found for prefix.</description>
					<attribute name="@return" />
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="noContextDoc" returncomment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError">
				<comment>
					<description>No context document</description>
					<attribute name="@return" />
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" interface="true" fulltype="org.eclipse.wst.xml.xpath2.processor.Evaluator" type="Evaluator">
		<comment>
			<description>interface to Evaluator</description>
		</comment>
		<methods>
			<method visibility="public" name="evaluate" returncomment="Result of evaluation." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Evaluate the root node.</description>
					<attribute name="@param">
						<description>root
            is the XPath node.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError
             dynamic error.</description>
					</attribute>
					<attribute name="@return">
						<description>Result of evaluation.</description>
					</attribute>
				</comment>
				<params>
					<param name="root" comment="is the XPath node." fulltype="XPathNode" type="XPathNode" />
				</params>
				<exceptions>
					<exception comment="dynamic error." fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath2.processor.JFlexCupParser" type="JFlexCupParser">
		<implements>
			<interface fulltype="org.eclipse.wst.xml.xpath2.processor.XPathParser" type="XPathParser" />
		</implements>
		<comment>
			<description>JFlexCupParser parses the xpath expression</description>
		</comment>
		<methods>
			<constructor visibility="public" name="JFlexCupParser" />
			<method visibility="public" name="parse" returncomment="the xpath value." fulltype="org.eclipse.wst.xml.xpath2.processor.ast.XPath" type="XPath">
				<comment>
					<description>Tries to parse the xpath expression</description>
					<attribute name="@param">
						<description>xpath
            is the xpath string.</description>
					</attribute>
					<attribute name="@throws">
						<description>XPathParserException.</description>
					</attribute>
					<attribute name="@return">
						<description>the xpath value.</description>
					</attribute>
				</comment>
				<params>
					<param name="xpath" comment="is the xpath string." fulltype="java.lang.String" type="String" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.XPathParserException" type="XPathParserException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" superclass="Object" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
		<comment>
			<description>Interface to the methods of range of result sequence</description>
		</comment>
		<methods>
			<constructor visibility="public" name="ResultSequence" />
			<method abstract="true" visibility="public" name="add" fulltype="void" type="void">
				<comment>
					<description>add item</description>
					<attribute name="@param">
						<description>item
            is an item of any type.</description>
					</attribute>
				</comment>
				<params>
					<param name="item" comment="is an item of any type." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
			</method>
			<method abstract="true" visibility="public" name="concat" fulltype="void" type="void">
				<comment>
					<description>concatinate from rs</description>
					<attribute name="@param">
						<description>rs
            is a Result Sequence.</description>
					</attribute>
				</comment>
				<params>
					<param name="rs" comment="is a Result Sequence." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
			</method>
			<method abstract="true" visibility="public" name="iterator" fulltype="java.util.ListIterator" type="ListIterator">
				<comment>
					<description>List Iterator.</description>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="get" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<comment>
					<description>get item in index i</description>
					<attribute name="@param">
						<description>i
            is the position.</description>
					</attribute>
				</comment>
				<params>
					<param name="i" comment="is the position." fulltype="int" type="int" />
				</params>
			</method>
			<method abstract="true" visibility="public" name="size" returncomment="the size." fulltype="int" type="int">
				<comment>
					<description>get the size</description>
					<attribute name="@return">
						<description>the size.</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="clear" fulltype="void" type="void">
				<comment>
					<description>clear</description>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="create_new" returncomment="a new result sequence." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>create a new result sequence</description>
					<attribute name="@return">
						<description>a new result sequence.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="first" returncomment="the first item." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<comment>
					<description>retrieve the first item</description>
					<attribute name="@return">
						<description>the first item.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="empty" returncomment="boolean." fulltype="boolean" type="boolean">
				<comment>
					<description>check is the sequence is empty</description>
					<attribute name="@return">
						<description>boolean.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string" returncomment="result string" fulltype="java.lang.String" type="String">
				<comment>
					<description>retrieve items in sequence</description>
					<attribute name="@return">
						<description>result string</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="release" fulltype="void" type="void">
				<comment>
					<description>release the result sequence</description>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" superclass="Object" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequenceFactory" type="ResultSequenceFactory">
		<comment>
			<description>Result sequence factory</description>
		</comment>
		<methods>
			<constructor visibility="public" name="ResultSequenceFactory" />
			<method abstract="true" visibility="protected" name="fact_create_new" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
			<method abstract="true" visibility="protected" name="fact_release" fulltype="void" type="void">
				<params>
					<param name="rs" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
			</method>
			<method visibility="protected" name="fact_create_new" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<params>
					<param name="item" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
			</method>
			<method visibility="protected" name="fact_print_debug" fulltype="void" type="void" />
			<method static="true" visibility="public" name="create_new" returncomment="the creation of a new result sequence" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<attribute name="@return">
						<description>the creation of a new result sequence</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="create_new" returncomment="factory creating new item" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<attribute name="@param">
						<description>item
            is an item of any type.</description>
					</attribute>
					<attribute name="@return">
						<description>factory creating new item</description>
					</attribute>
				</comment>
				<params>
					<param name="item" comment="is an item of any type." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
			</method>
			<method static="true" visibility="public" name="release" fulltype="void" type="void">
				<comment>
					<attribute name="@param">
						<description>rs
            is the result sequence factory release rs</description>
					</attribute>
				</comment>
				<params>
					<param name="rs" comment="is the result sequence factory release rs" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
			</method>
			<method static="true" visibility="public" name="print_debug" fulltype="void" type="void">
				<comment>
					<description>factory debug</description>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" interface="true" fulltype="org.eclipse.wst.xml.xpath2.processor.StaticChecker" type="StaticChecker">
		<comment>
			<description>Interface to static checker.</description>
		</comment>
		<methods>
			<method visibility="public" name="check" fulltype="void" type="void">
				<comment>
					<description>checks XPathNode</description>
					<attribute name="@throws">
						<description>static error.</description>
					</attribute>
					<attribute name="@param">
						<description>root
            is an XPath node.</description>
					</attribute>
				</comment>
				<params>
					<param name="root" comment="is an XPath node." fulltype="XPathNode" type="XPathNode" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.StaticError" type="StaticError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" interface="true" fulltype="org.eclipse.wst.xml.xpath2.processor.StaticContext" type="StaticContext">
		<comment>
			<description>interface to static context</description>
		</comment>
		<methods>
			<method visibility="public" name="xpath1_compatible" returncomment="boolean" fulltype="boolean" type="boolean">
				<comment>
					<description>is it xpath 1.0 compatible.</description>
					<attribute name="@return">
						<description>boolean</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="prefix_exists" returncomment="boolean" fulltype="boolean" type="boolean">
				<comment>
					<description>namespaces does the prefix exist</description>
					<attribute name="@param">
						<description>prefix
            is the prefix</description>
					</attribute>
					<attribute name="@return">
						<description>boolean</description>
					</attribute>
				</comment>
				<params>
					<param name="prefix" comment="is the prefix" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="resolve_prefix" returncomment="string" fulltype="java.lang.String" type="String">
				<comment>
					<attribute name="@param">
						<description>prefix
            is the prefix</description>
					</attribute>
					<attribute name="@return">
						<description>string</description>
					</attribute>
				</comment>
				<params>
					<param name="prefix" comment="is the prefix" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="default_namespace" returncomment="string" fulltype="java.lang.String" type="String">
				<comment>
					<description>the default namespace</description>
					<attribute name="@return">
						<description>string</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="default_function_namespace" returncomment="string" fulltype="java.lang.String" type="String">
				<comment>
					<description>the default function namespace</description>
					<attribute name="@return">
						<description>string</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="attribute_type_definition" returncomment="attributes&apos;s type definition" fulltype="XSTypeDefinition" type="XSTypeDefinition">
				<comment>
					<attribute name="@param">
						<description>attr
            is the qname variable</description>
					</attribute>
					<attribute name="@return">
						<description>attributes&apos;s type definition</description>
					</attribute>
				</comment>
				<params>
					<param name="attr" comment="is the qname variable" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="element_type_definition" returncomment="element&apos;s type definition" fulltype="XSTypeDefinition" type="XSTypeDefinition">
				<comment>
					<attribute name="@param">
						<description>elem
            is the elem of the qname</description>
					</attribute>
					<attribute name="@return">
						<description>element&apos;s type definition</description>
					</attribute>
				</comment>
				<params>
					<param name="elem" comment="is the elem of the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="attribute_declared" returncomment="boolean" fulltype="boolean" type="boolean">
				<comment>
					<description>is the attribute declared?</description>
					<attribute name="@param">
						<description>attr
            is the attribute of the qname</description>
					</attribute>
					<attribute name="@return">
						<description>boolean</description>
					</attribute>
				</comment>
				<params>
					<param name="attr" comment="is the attribute of the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="element_declared" returncomment="boolean" fulltype="boolean" type="boolean">
				<comment>
					<description>is the element declared?</description>
					<attribute name="@param">
						<description>elem
            is the elem of the qname</description>
					</attribute>
					<attribute name="@return">
						<description>boolean</description>
					</attribute>
				</comment>
				<params>
					<param name="elem" comment="is the elem of the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="function_exists" returncomment="boolean" fulltype="boolean" type="boolean">
				<comment>
					<description>is the element declared?</description>
					<attribute name="@param">
						<description>name
            is the qname name</description>
					</attribute>
					<attribute name="@param">
						<description>arity
            integer of qname</description>
					</attribute>
					<attribute name="@return">
						<description>boolean</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the qname name" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
					<param name="arity" comment="integer of qname" fulltype="int" type="int" />
				</params>
			</method>
			<method visibility="public" name="base_uri" returncomment="uri" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSAnyURI" type="XSAnyURI">
				<comment>
					<description>base uri</description>
					<attribute name="@return">
						<description>uri</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="new_scope" fulltype="void" type="void">
				<comment>
					<description>new scope</description>
				</comment>
			</method>
			<method visibility="public" name="destroy_scope" fulltype="void" type="void">
				<comment>
					<description>destroy scope</description>
				</comment>
			</method>
			<method visibility="public" name="add_variable" fulltype="void" type="void">
				<comment>
					<description>add variable</description>
					<attribute name="@param">
						<description>name
            is the qname</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="del_variable" returncomment="boolean if deleted variable" fulltype="boolean" type="boolean">
				<comment>
					<description>delete the variable</description>
					<attribute name="@param">
						<description>name
            is the qname</description>
					</attribute>
					<attribute name="@return">
						<description>boolean if deleted variable</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="variable_exists" returncomment="boolean if variable exists" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@param">
						<description>name
            is the qname</description>
					</attribute>
					<attribute name="@return">
						<description>boolean if variable exists</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="variable_in_scope" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@param">
						<description>var
            is the variable of qname</description>
					</attribute>
				</comment>
				<params>
					<param name="var" comment="is the variable of qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="type_defined" returncomment="boolean" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@param">
						<description>name
            is qname</description>
					</attribute>
					<attribute name="@return">
						<description>boolean</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="derives_from" returncomment="boolean" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@param">
						<description>at
            the node type</description>
					</attribute>
					<attribute name="@param">
						<description>et
            is the qname</description>
					</attribute>
					<attribute name="@return">
						<description>boolean</description>
					</attribute>
				</comment>
				<params>
					<param name="at" comment="the node type" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType" />
					<param name="et" comment="is the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="derives_from" returncomment="boolean" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@param">
						<description>at
            the node type</description>
					</attribute>
					<attribute name="@param">
						<description>et
            is the XSTypeDefinition of the node</description>
					</attribute>
					<attribute name="@return">
						<description>boolean</description>
					</attribute>
				</comment>
				<params>
					<param name="at" comment="the node type" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType" />
					<param name="et" comment="is the XSTypeDefinition of the node" fulltype="XSTypeDefinition" type="XSTypeDefinition" />
				</params>
			</method>
			<method visibility="public" name="add_namespace" fulltype="void" type="void">
				<comment>
					<description>add namespace</description>
					<attribute name="@param">
						<description>prefix
            the prefix of the namespace</description>
					</attribute>
					<attribute name="@param">
						<description>ns
            is the XSTypeDefinition of the node</description>
					</attribute>
				</comment>
				<params>
					<param name="prefix" comment="the prefix of the namespace" fulltype="java.lang.String" type="String" />
					<param name="ns" comment="is the XSTypeDefinition of the node" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="expand_function_qname" returncomment="boolean if function can be expanded" fulltype="boolean" type="boolean">
				<comment>
					<description>expand function</description>
					<attribute name="@param">
						<description>name
            is the qname</description>
					</attribute>
					<attribute name="@return">
						<description>boolean if function can be expanded</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="expand_elem_type_qname" returncomment="boolean if function can be expanded" fulltype="boolean" type="boolean">
				<comment>
					<description>expand element type qname</description>
					<attribute name="@param">
						<description>name
            is the qname</description>
					</attribute>
					<attribute name="@return">
						<description>boolean if function can be expanded</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="expand_qname" returncomment="boolean if function can be expanded" fulltype="boolean" type="boolean">
				<comment>
					<description>expand qname</description>
					<attribute name="@param">
						<description>name
            is the qname</description>
					</attribute>
					<attribute name="@return">
						<description>boolean if function can be expanded</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="add_function_library" fulltype="void" type="void">
				<comment>
					<description>add function to library</description>
					<attribute name="@param">
						<description>fl
            is the function library</description>
					</attribute>
				</comment>
				<params>
					<param name="fl" comment="is the function library" fulltype="FunctionLibrary" type="FunctionLibrary" />
				</params>
			</method>
			<method visibility="public" name="make_atomic" returncomment="any atomic type" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyAtomicType" type="AnyAtomicType">
				<comment>
					<attribute name="@param">
						<description>name
            is the qname</description>
					</attribute>
					<attribute name="@return">
						<description>any atomic type</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the qname" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName" />
				</params>
			</method>
			<method visibility="public" name="set_base_uri" fulltype="void" type="void">
				<comment>
					<description>Sets the base uri for the context.</description>
					<attribute name="@param">
						<description>baseuri</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="baseuri" comment="" fulltype="java.lang.String" type="String" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XPathException" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" serializable="true" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.XPathException" fulltype="org.eclipse.wst.xml.xpath2.processor.StaticError" type="StaticError">
		<comment>
			<description>Base class for all static errors as defined by the XPath 2.0 specification</description>
		</comment>
		<methods>
			<constructor visibility="public" name="StaticError">
				<comment>
					<description>Constructor for a generic static error</description>
					<attribute name="@param">
						<description>code
            The error code as specified in XPath 2.0</description>
					</attribute>
					<attribute name="@param">
						<description>err
            Humar readable error message</description>
					</attribute>
				</comment>
				<params>
					<param name="code" comment="The error code as specified in XPath 2.0" fulltype="java.lang.String" type="String" />
					<param name="err" comment="Humar readable error message" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<method visibility="public" name="code" returncomment="error code which represents the error" fulltype="java.lang.String" type="String">
				<comment>
					<attribute name="@return">
						<description>error code which represents the error</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath2.processor.StaticNameResolver" type="StaticNameResolver">
		<implements>
			<interface fulltype="org.eclipse.wst.xml.xpath2.processor.StaticChecker" type="StaticChecker" />
		</implements>
		<comment>
			<description>This class resolves static names.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="StaticNameResolver">
				<comment>
					<description>Constructor for static name resolver</description>
					<attribute name="@param">
						<description>sc
            is the static context.</description>
					</attribute>
				</comment>
				<params>
					<param name="sc" comment="is the static context." fulltype="org.eclipse.wst.xml.xpath2.processor.StaticContext" type="StaticContext" />
				</params>
			</constructor>
			<method visibility="public" name="check" fulltype="void" type="void">
				<comment>
					<description>Check the XPath node.</description>
					<attribute name="@param">
						<description>node
            is the XPath node to check.</description>
					</attribute>
					<attribute name="@throws">
						<description>StaticError
             static error.</description>
					</attribute>
				</comment>
				<params>
					<param name="node" comment="is the XPath node to check." fulltype="XPathNode" type="XPathNode" />
				</params>
				<exceptions>
					<exception comment="static error." fulltype="org.eclipse.wst.xml.xpath2.processor.StaticError" type="StaticError" />
				</exceptions>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an XPath by visiting all the nodes.</description>
					<attribute name="@param">
						<description>xp
            is the XPath.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="xp" comment="is the XPath." fulltype="org.eclipse.wst.xml.xpath2.processor.ast.XPath" type="XPath" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a for expression.</description>
					<attribute name="@param">
						<description>fex
            is the for expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="fex" comment="is the for expression." fulltype="ForExpr" type="ForExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a quantified expression.</description>
					<attribute name="@param">
						<description>qex
            is the quantified expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="qex" comment="is the quantified expression." fulltype="QuantifiedExpr" type="QuantifiedExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an if expression.</description>
					<attribute name="@param">
						<description>ifex
            is the if expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="ifex" comment="is the if expression." fulltype="IfExpr" type="IfExpr" />
				</params>
			</method>
			<method visibility="public" name="printBinExpr" fulltype="void" type="void">
				<comment>
					<description>Validate a binary expression by checking its left and right children.</description>
					<attribute name="@param">
						<description>name
            is the name of the binary expression.</description>
					</attribute>
					<attribute name="@param">
						<description>e
            is the expression itself.</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the name of the binary expression." fulltype="java.lang.String" type="String" />
					<param name="e" comment="is the expression itself." fulltype="BinExpr" type="BinExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an OR expression.</description>
					<attribute name="@param">
						<description>orex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="orex" comment="is the expression." fulltype="OrExpr" type="OrExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an AND expression.</description>
					<attribute name="@param">
						<description>andex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="andex" comment="is the expression." fulltype="AndExpr" type="AndExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a comparison expression.</description>
					<attribute name="@param">
						<description>cmpex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="cmpex" comment="is the expression." fulltype="CmpExpr" type="CmpExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a range expression.</description>
					<attribute name="@param">
						<description>rex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="rex" comment="is the expression." fulltype="RangeExpr" type="RangeExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an additon expression.</description>
					<attribute name="@param">
						<description>addex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="addex" comment="is the expression." fulltype="AddExpr" type="AddExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a subtraction expression.</description>
					<attribute name="@param">
						<description>subex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="subex" comment="is the expression." fulltype="SubExpr" type="SubExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a multiplication expression.</description>
					<attribute name="@param">
						<description>mulex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="mulex" comment="is the expression." fulltype="MulExpr" type="MulExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a division expression.</description>
					<attribute name="@param">
						<description>mulex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="mulex" comment="is the expression." fulltype="DivExpr" type="DivExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an integer divison expression.</description>
					<attribute name="@param">
						<description>mulex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="mulex" comment="is the expression." fulltype="IDivExpr" type="IDivExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a mod expression.</description>
					<attribute name="@param">
						<description>mulex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="mulex" comment="is the expression." fulltype="ModExpr" type="ModExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a union expression.</description>
					<attribute name="@param">
						<description>unex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="unex" comment="is the expression." fulltype="UnionExpr" type="UnionExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a piped expression.</description>
					<attribute name="@param">
						<description>pipex
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="pipex" comment="is the expression." fulltype="PipeExpr" type="PipeExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an intersection expression.</description>
					<attribute name="@param">
						<description>iexpr
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="iexpr" comment="is the expression." fulltype="IntersectExpr" type="IntersectExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an except expression.</description>
					<attribute name="@param">
						<description>eexpr
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="eexpr" comment="is the expression." fulltype="ExceptExpr" type="ExceptExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an &apos;instance of&apos; expression.</description>
					<attribute name="@param">
						<description>ioexp
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="ioexp" comment="is the expression." fulltype="InstOfExpr" type="InstOfExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a &apos;treat as&apos; expression.</description>
					<attribute name="@param">
						<description>taexp
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="taexp" comment="is the expression." fulltype="TreatAsExpr" type="TreatAsExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a castable expression.</description>
					<attribute name="@param">
						<description>cexp
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="cexp" comment="is the expression." fulltype="CastableExpr" type="CastableExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a cast expression.</description>
					<attribute name="@param">
						<description>cexp
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="cexp" comment="is the expression." fulltype="CastExpr" type="CastExpr" />
				</params>
			</method>
			<method visibility="public" name="printUnExpr" fulltype="void" type="void">
				<comment>
					<description>Validate a unary expression by checking its one child.</description>
					<attribute name="@param">
						<description>name
            is the name of the expression.</description>
					</attribute>
					<attribute name="@param">
						<description>e
            is the expression itself.</description>
					</attribute>
				</comment>
				<params>
					<param name="name" comment="is the name of the expression." fulltype="java.lang.String" type="String" />
					<param name="e" comment="is the expression itself." fulltype="UnExpr" type="UnExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a minus expression.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="MinusExpr" type="MinusExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a plus expression.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="PlusExpr" type="PlusExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an xpath expression.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="XPathExpr" type="XPathExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a forward step.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="ForwardStep" type="ForwardStep" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a reverse step.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="ReverseStep" type="ReverseStep" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a name test.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="NameTest" type="NameTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a variable reference.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="VarRef" type="VarRef" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a string literal.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="StringLiteral" type="StringLiteral" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an integer literal.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="IntegerLiteral" type="IntegerLiteral" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a double literal.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="DoubleLiteral" type="DoubleLiteral" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a decimal literal.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="DecimalLiteral" type="DecimalLiteral" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a parenthesized expression.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="ParExpr" type="ParExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a context item expression.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="CntxItemExpr" type="CntxItemExpr" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a function call.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="FunctionCall" type="FunctionCall" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a single type.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="SingleType" type="SingleType" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a sequence type.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="SequenceType" type="SequenceType" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an item type.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="ItemType" type="ItemType" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an any kind test.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="AnyKindTest" type="AnyKindTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a document test.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="DocumentTest" type="DocumentTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a text test.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="TextTest" type="TextTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a comment test.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="CommentTest" type="CommentTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a processing instructing test.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="PITest" type="PITest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an attribute test.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="AttributeTest" type="AttributeTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a schema attribute test.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="SchemaAttrTest" type="SchemaAttrTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an element test.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="ElementTest" type="ElementTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a schema element test.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="SchemaElemTest" type="SchemaElemTest" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate an axis step.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="AxisStep" type="AxisStep" />
				</params>
			</method>
			<method visibility="public" name="visit" returncomment="null." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Validate a filter expression.</description>
					<attribute name="@param">
						<description>e
            is the expression.</description>
					</attribute>
					<attribute name="@return">
						<description>null.</description>
					</attribute>
				</comment>
				<params>
					<param name="e" comment="is the expression." fulltype="FilterExpr" type="FilterExpr" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Exception" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" serializable="true" superclassfulltype="java.lang.Exception" fulltype="org.eclipse.wst.xml.xpath2.processor.XPathException" type="XPathException">
		<comment>
			<description>This exception is thrown when there is a problem with an XPath exception.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XPathException">
				<comment>
					<description>Constructor for XPathException</description>
					<attribute name="@param">
						<description>reason
            Is the reason why the exception has been thrown.</description>
					</attribute>
				</comment>
				<params>
					<param name="reason" comment="Is the reason why the exception has been thrown." fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<method visibility="public" name="reason" returncomment="the reason why the exception has been throw." fulltype="java.lang.String" type="String">
				<comment>
					<description>The reason why the exception has been thrown.</description>
					<attribute name="@return">
						<description>the reason why the exception has been throw.</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" interface="true" fulltype="org.eclipse.wst.xml.xpath2.processor.XPathParser" type="XPathParser">
		<comment>
			<description>This is an interface class for the XPath parser.</description>
		</comment>
		<methods>
			<method visibility="public" name="parse" returncomment="The parsed XPath." fulltype="org.eclipse.wst.xml.xpath2.processor.ast.XPath" type="XPath">
				<comment>
					<description>Constructor for the XPath parser interface.</description>
					<attribute name="@param">
						<description>xpath
            is the input XPath to be parsed.</description>
					</attribute>
					<attribute name="@throws">
						<description>XPathParserException
             XPath parser exception.</description>
					</attribute>
					<attribute name="@return">
						<description>The parsed XPath.</description>
					</attribute>
				</comment>
				<params>
					<param name="xpath" comment="is the input XPath to be parsed." fulltype="java.lang.String" type="String" />
				</params>
				<exceptions>
					<exception comment="XPath parser exception." fulltype="org.eclipse.wst.xml.xpath2.processor.XPathParserException" type="XPathParserException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="StaticError" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" serializable="true" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.StaticError" fulltype="org.eclipse.wst.xml.xpath2.processor.XPathParserException" type="XPathParserException">
		<comment>
			<description>This exception is thrown if there is a problem with the XPath parser.</description>
		</comment>
		<fields>
			<field final="true" static="true" const="XPST0003" visibility="public" name="INVALID_XPATH_EXPRESSION" constexpr="&quot;XPST0003&quot;" fulltype="java.lang.String" type="String">
				<comment>
					<description>The type of exception.</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="XPathParserException">
				<comment>
					<description>Constructor for XPathParserException.</description>
					<attribute name="@param">
						<description>reason
            is the reason why the exception has been thrown.</description>
					</attribute>
				</comment>
				<params>
					<param name="reason" comment="is the reason why the exception has been thrown." fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" package="org.eclipse.wst.xml.xpath2.processor" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath2.processor.XercesLoader" type="XercesLoader">
		<implements>
			<interface fulltype="org.eclipse.wst.xml.xpath2.processor.DOMLoader" type="DOMLoader" />
		</implements>
		<comment>
			<description>Xerces loader class. The loading is always namespace aware.</description>
		</comment>
		<fields>
			<field final="true" static="true" const="http://xml.org/sax/features/namespaces" visibility="public" name="NAMESPACES_FEATURE" constexpr="&quot;http://xml.org/sax/features/namespaces&quot;" fulltype="java.lang.String" type="String" />
			<field final="true" static="true" const="http://xml.org/sax/features/validation" visibility="public" name="VALIDATION_FEATURE" constexpr="&quot;http://xml.org/sax/features/validation&quot;" fulltype="java.lang.String" type="String" />
			<field final="true" static="true" const="http://apache.org/xml/features/validation/schema" visibility="public" name="SCHEMA_VALIDATION_FEATURE" constexpr="&quot;http://apache.org/xml/features/validation/schema&quot;" fulltype="java.lang.String" type="String" />
			<field final="true" static="true" const="http://apache.org/xml/features/validation/schema-full-checking" visibility="public" name="SCHEMA_FULL_CHECKING_FEATURE" constexpr="&quot;http://apache.org/xml/features/validation/schema-full-checking&quot;" fulltype="java.lang.String" type="String" />
			<field final="true" static="true" const="http://apache.org/xml/features/validation/dynamic" visibility="public" name="DYNAMIC_VALIDATION_FEATURE" constexpr="&quot;http://apache.org/xml/features/validation/dynamic&quot;" fulltype="java.lang.String" type="String" />
			<field final="true" static="true" const="http://apache.org/xml/features/nonvalidating/load-external-dtd" visibility="public" name="LOAD_EXTERNAL_DTD_FEATURE" constexpr="&quot;http://apache.org/xml/features/nonvalidating/load-external-dtd&quot;" fulltype="java.lang.String" type="String" />
			<field final="true" static="true" const="http://java.sun.com/xml/jaxp/properties/schemaLanguage" visibility="public" name="JAXP_SCHEMA_LANGUAGE" constexpr="&quot;http://java.sun.com/xml/jaxp/properties/schemaLanguage&quot;" fulltype="java.lang.String" type="String" />
			<field final="true" static="true" const="http://www.w3.org/2001/XMLSchema" visibility="public" name="W3C_XML_SCHEMA" constexpr="&quot;http://www.w3.org/2001/XMLSchema&quot;" fulltype="java.lang.String" type="String" />
			<field final="true" static="true" const="http://apache.org/xml/properties/dom/document-class-name" visibility="public" name="DOCUMENT_IMPLEMENTATION_PROPERTY" constexpr="&quot;http://apache.org/xml/properties/dom/document-class-name&quot;" fulltype="java.lang.String" type="String" />
			<field final="true" static="true" const="org.apache.xerces.dom.PSVIDocumentImpl" visibility="public" name="DOCUMENT_PSVI_IMPLEMENTATION" constexpr="&quot;org.apache.xerces.dom.PSVIDocumentImpl&quot;" fulltype="java.lang.String" type="String" />
			<field visibility="package-private" name="_validating" fulltype="boolean" type="boolean" />
			<field visibility="package-private" name="_schema" fulltype="javax.xml.validation.Schema" type="Schema" />
		</fields>
		<methods>
			<constructor visibility="public" name="XercesLoader">
				<comment>
					<description>Constructor for Xerces loader.</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XercesLoader">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="schema" fulltype="javax.xml.validation.Schema" type="Schema" />
				</params>
			</constructor>
			<method visibility="public" name="load" returncomment="The loaded document." fulltype="org.w3c.dom.Document" type="Document">
				<comment>
					<description>The Xerces loader loads the XML document</description>
					<attribute name="@param">
						<description>in
            is the input stream.</description>
					</attribute>
					<attribute name="@throws">
						<description>DOMLoaderException
             DOM loader exception.</description>
					</attribute>
					<attribute name="@return">
						<description>The loaded document.</description>
					</attribute>
				</comment>
				<params>
					<param name="in" comment="is the input stream." fulltype="java.io.InputStream" type="InputStream" />
				</params>
				<exceptions>
					<exception comment="DOM loader exception." fulltype="org.eclipse.wst.xml.xpath2.processor.DOMLoaderException" type="DOMLoaderException" />
				</exceptions>
			</method>
			<method visibility="public" name="set_validating" fulltype="void" type="void">
				<comment>
					<description>Set validating boolean.</description>
					<attribute name="@param">
						<description>x
            is the value to set the validating boolean to.</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="is the value to set the validating boolean to." fulltype="boolean" type="boolean" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XPathNode" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.ast" superclassfulltype="XPathNode" fulltype="org.eclipse.wst.xml.xpath2.processor.ast.XPath" type="XPath">
		<comment>
			<description>Support for XPath.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XPath">
				<comment>
					<description>Constructor for XPath.</description>
					<attribute name="@param">
						<description>exprs
            XPath expressions.</description>
					</attribute>
				</comment>
				<params>
					<param name="exprs" comment="XPath expressions." fulltype="java.util.Collection" type="Collection" />
				</params>
			</constructor>
			<method visibility="public" name="accept" returncomment="Result of Visitor operation." fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Support for Visitor interface.</description>
					<attribute name="@return">
						<description>Result of Visitor operation.</description>
					</attribute>
				</comment>
				<params>
					<param name="v" fulltype="XPathVisitor" type="XPathVisitor" />
				</params>
			</method>
			<method visibility="public" name="iterator" returncomment="Result of Iterator operation." fulltype="java.util.Iterator" type="Iterator">
				<comment>
					<description>Support for Iterator interface.</description>
					<attribute name="@return">
						<description>Result of Iterator operation.</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="FunctionLibrary" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.function" superclassfulltype="FunctionLibrary" fulltype="org.eclipse.wst.xml.xpath2.processor.function.FnFunctionLibrary" type="FnFunctionLibrary">
		<comment>
			<description>Maintains a library of core functions and user defined functions.</description>
		</comment>
		<fields>
			<field final="true" static="true" const="http://www.w3.org/2005/xpath-functions" visibility="public" name="XPATH_FUNCTIONS_NS" constexpr="&quot;http://www.w3.org/2005/xpath-functions&quot;" fulltype="java.lang.String" type="String">
				<comment>
					<description>Path to xpath functions specification.</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="FnFunctionLibrary">
				<comment>
					<description>Constructor for FnFunctionLibrary.</description>
				</comment>
			</constructor>
		</methods>
	</jelclass>
	<jelclass superclass="ConstructorFL" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.function" superclassfulltype="ConstructorFL" fulltype="org.eclipse.wst.xml.xpath2.processor.function.XSCtrLibrary" type="XSCtrLibrary">
		<comment>
			<description>XML Schema control library support.</description>
		</comment>
		<fields>
			<field final="true" static="true" const="http://www.w3.org/2001/XMLSchema" visibility="public" name="XML_SCHEMA_NS" constexpr="&quot;http://www.w3.org/2001/XMLSchema&quot;" fulltype="java.lang.String" type="String">
				<comment>
					<description>Path to w3.org XML Schema specification.</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="XSCtrLibrary">
				<comment>
					<description>Constructor for XSCtrLibrary.</description>
				</comment>
			</constructor>
		</methods>
	</jelclass>
	<jelclass abstract="true" superclass="AnySimpleType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnySimpleType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyAtomicType" type="AnyAtomicType">
		<comment>
			<description>Common base for every atomic type</description>
		</comment>
		<methods>
			<constructor visibility="public" name="AnyAtomicType" />
		</methods>
	</jelclass>
	<jelclass abstract="true" superclass="AnyType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnySimpleType" type="AnySimpleType">
		<comment>
			<description>Common base for every simple type</description>
		</comment>
		<methods>
			<constructor visibility="public" name="AnySimpleType" />
		</methods>
	</jelclass>
	<jelclass abstract="true" superclass="Object" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
		<comment>
			<description>Common base for every type</description>
		</comment>
		<methods>
			<constructor visibility="public" name="AnyType" />
			<method abstract="true" visibility="public" name="string_type" returncomment="Datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>Datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="string_value" returncomment="Datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>Datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NodeType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AttrType" type="AttrType">
		<comment>
			<description>A representation of the AttributeType datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="AttrType">
				<comment>
					<description>Initialises to null</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="AttrType">
				<comment>
					<description>Initialises according to the supplied parameters</description>
					<attribute name="@param">
						<description>v
            The attribute being represented</description>
					</attribute>
				</comment>
				<params>
					<param name="v" comment="The attribute being represented" fulltype="org.w3c.dom.Attr" type="Attr" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;attribute&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;attribute&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the attribute being stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the attribute being stored</description>
					<attribute name="@return">
						<description>String representation of the attribute being stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="typed_value" returncomment="New ResultSequence consisting of the attribute being stored" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the attribute being stored</description>
					<attribute name="@return">
						<description>New ResultSequence consisting of the attribute being stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="node_name" returncomment="Name of the node" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName">
				<comment>
					<description>Retrieves the name of the node</description>
					<attribute name="@return">
						<description>Name of the node</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="isID" fulltype="boolean" type="boolean" />
			<method visibility="public" name="isIDREF" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method visibility="protected" name="isAttrType" fulltype="boolean" type="boolean">
				<params>
					<param name="typeName" fulltype="java.lang.String" type="String" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CalendarType" type="CalendarType">
		<comment>
			<description>Common base for all Calendar based classes</description>
		</comment>
		<methods>
			<constructor visibility="public" name="CalendarType" />
		</methods>
	</jelclass>
	<jelclass superclass="NodeType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CommentType" type="CommentType">
		<comment>
			<description>A representation of the CommentType datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="CommentType">
				<comment>
					<description>Initialise according to the supplied parameters</description>
					<attribute name="@param">
						<description>v
            The comment being represented</description>
					</attribute>
				</comment>
				<params>
					<param name="v" comment="The comment being represented" fulltype="org.w3c.dom.Comment" type="Comment" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;comment&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;comment&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the comment being stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the comment being stored</description>
					<attribute name="@return">
						<description>String representation of the comment being stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="typed_value" returncomment="New ResultSequence consisting of the comment stored" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the comment stored</description>
					<attribute name="@return">
						<description>New ResultSequence consisting of the comment stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="node_name" returncomment="null" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName">
				<comment>
					<description>Unsupported method for this node.</description>
					<attribute name="@return">
						<description>null</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="isID" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="isIDREF" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" superclass="AnyAtomicType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyAtomicType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" type="CtrType">
		<comment>
			<description>A representation of the CtrType datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="CtrType" />
			<method abstract="true" visibility="public" name="constructor" returncomment="The resulting ResultSequence" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Used for constructor function.</description>
					<attribute name="@param">
						<description>arg
            Either an empty sequence or 1 atomic type</description>
					</attribute>
					<attribute name="@return">
						<description>The resulting ResultSequence</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="Either an empty sequence or 1 atomic type" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method abstract="true" visibility="public" name="type_name" returncomment="String representation of the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>String representation of the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NodeType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.DocType" type="DocType">
		<comment>
			<description>A representation of the DocumentType datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="DocType">
				<comment>
					<description>Initialises according to the supplied parameters</description>
					<attribute name="@param">
						<description>v
            The document being represented</description>
					</attribute>
				</comment>
				<params>
					<param name="v" comment="The document being represented" fulltype="org.w3c.dom.Document" type="Document" />
				</params>
			</constructor>
			<method visibility="public" name="value" returncomment="Actual document being represented" fulltype="org.w3c.dom.Document" type="Document">
				<comment>
					<description>Retrieves the actual document being represented</description>
					<attribute name="@return">
						<description>Actual document being represented</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;document&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;document&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the document being stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the document being stored</description>
					<attribute name="@return">
						<description>String representation of the document being stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="typed_value" returncomment="New ResultSequence consisting of the document being stored" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the document being stored</description>
					<attribute name="@return">
						<description>New ResultSequence consisting of the document being stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="node_name" returncomment="QName representation of the name of the node" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName">
				<comment>
					<description>Retrieves the name of the node</description>
					<attribute name="@return">
						<description>QName representation of the name of the node</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="isID" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="isIDREF" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NodeType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.ElementType" type="ElementType">
		<comment>
			<description>A representation of the ElementType datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="ElementType">
				<comment>
					<description>Initialises to a null element</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="ElementType">
				<comment>
					<description>Initialises according to the supplied parameters</description>
					<attribute name="@param">
						<description>v
            The element being represented</description>
					</attribute>
				</comment>
				<params>
					<param name="v" comment="The element being represented" fulltype="org.w3c.dom.Element" type="Element" />
				</params>
			</constructor>
			<method visibility="public" name="value" returncomment="Actual element value being represented" fulltype="org.w3c.dom.Element" type="Element">
				<comment>
					<description>Retrieves the actual element value being represented</description>
					<attribute name="@return">
						<description>Actual element value being represented</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;element&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;element&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the element being stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the element being stored</description>
					<attribute name="@return">
						<description>String representation of the element being stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="typed_value" returncomment="New ResultSequence consisting of the element stored" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the element stored</description>
					<attribute name="@return">
						<description>New ResultSequence consisting of the element stored</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="textnode_strings" returncomment="String representation of the node supplied" fulltype="java.lang.String" type="String">
				<comment>
					<description>Recursively concatenate TextNode strings</description>
					<attribute name="@param">
						<description>node
            Node to recurse</description>
					</attribute>
					<attribute name="@return">
						<description>String representation of the node supplied</description>
					</attribute>
				</comment>
				<params>
					<param name="node" comment="Node to recurse" fulltype="org.w3c.dom.Node" type="Node" />
				</params>
			</method>
			<method visibility="public" name="node_name" returncomment="QName representation of the name of the node" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName">
				<comment>
					<description>Retrieves the name of the node</description>
					<attribute name="@return">
						<description>QName representation of the name of the node</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="nilled" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
			<method visibility="public" name="isID" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="isIDREF" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method visibility="protected" name="isElementType" fulltype="boolean" type="boolean">
				<params>
					<param name="typeName" fulltype="java.lang.String" type="String" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" superclass="AnyType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType">
		<comment>
			<description>A representation of a Node datatype</description>
		</comment>
		<fields>
			<field final="true" static="true" const="IDREF" visibility="protected" name="SCHEMA_TYPE_IDREF" constexpr="&quot;IDREF&quot;" fulltype="java.lang.String" type="String" />
			<field final="true" static="true" const="ID" visibility="protected" name="SCHEMA_TYPE_ID" constexpr="&quot;ID&quot;" fulltype="java.lang.String" type="String" />
		</fields>
		<methods>
			<constructor visibility="public" name="NodeType">
				<comment>
					<description>Initialises according to the supplied parameters</description>
					<attribute name="@param">
						<description>node
            The Node being represented</description>
					</attribute>
					<attribute name="@param">
						<description>document_order
            The document order</description>
					</attribute>
				</comment>
				<params>
					<param name="node" comment="The Node being represented" fulltype="org.w3c.dom.Node" type="Node" />
				</params>
			</constructor>
			<method visibility="public" name="node_value" returncomment="Actual node being represented" fulltype="org.w3c.dom.Node" type="Node">
				<comment>
					<description>Retrieves the actual node being represented</description>
					<attribute name="@return">
						<description>Actual node being represented</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="typed_value" returncomment="Actual node being represented" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Retrieves the actual node being represented</description>
					<attribute name="@return">
						<description>Actual node being represented</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="node_name" returncomment="QName representation of the name of the node" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName">
				<comment>
					<description>Retrieves the name of the node</description>
					<attribute name="@return">
						<description>QName representation of the name of the node</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="nilled" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
			<method static="true" visibility="public" name="dom_to_xpath" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType">
				<params>
					<param name="node" fulltype="org.w3c.dom.Node" type="Node" />
				</params>
			</method>
			<method static="true" visibility="public" name="eliminate_dups" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<params>
					<param name="rs" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
			</method>
			<method static="true" visibility="public" name="sort_document_order" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<params>
					<param name="rs" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
			</method>
			<method static="true" visibility="public" name="same" fulltype="boolean" type="boolean">
				<params>
					<param name="a" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType" />
					<param name="b" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType" />
				</params>
			</method>
			<method visibility="public" name="before" fulltype="boolean" type="boolean">
				<params>
					<param name="two" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType" />
				</params>
			</method>
			<method static="true" visibility="public" name="before" fulltype="boolean" type="boolean">
				<params>
					<param name="a" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType" />
					<param name="b" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType" />
				</params>
			</method>
			<method visibility="public" name="after" fulltype="boolean" type="boolean">
				<params>
					<param name="two" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType" />
				</params>
			</method>
			<method static="true" visibility="public" name="after" fulltype="boolean" type="boolean">
				<params>
					<param name="a" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType" />
					<param name="b" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" type="NodeType" />
				</params>
			</method>
			<method visibility="protected" name="getTypedValueForPrimitiveType" fulltype="java.lang.Object" type="Object">
				<params>
					<param name="typeDef" fulltype="XSTypeDefinition" type="XSTypeDefinition" />
				</params>
			</method>
			<method abstract="true" visibility="public" name="isID" fulltype="boolean" type="boolean" />
			<method abstract="true" visibility="public" name="isIDREF" fulltype="boolean" type="boolean" />
			<method visibility="protected" name="isType" returncomment="" fulltype="boolean" type="boolean">
				<comment>
					<description>Utility method to check to see if a particular TypeInfo matches.</description>
					<attribute name="@param">
						<description>typeInfo</description>
					</attribute>
					<attribute name="@param">
						<description>typeName</description>
					</attribute>
					<attribute name="@return" />
				</comment>
				<params>
					<param name="typeInfo" comment="" fulltype="org.w3c.dom.TypeInfo" type="TypeInfo" />
					<param name="typeName" comment="" fulltype="java.lang.String" type="String" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass abstract="true" superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
		<comment>
			<description>A representation of the NumericType datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="NumericType" />
			<method abstract="true" visibility="public" name="zero" returncomment="True if node represnts 0. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check whether node represnts 0</description>
					<attribute name="@return">
						<description>True if node represnts 0. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="unary_minus" returncomment="New ResultSequence representing the negation of the number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence representing the negation of the number
 stored</description>
					<attribute name="@return">
						<description>New ResultSequence representing the negation of the number stored</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="abs" returncomment="New NumericType representing the absolute of the number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Absolutes the number stored</description>
					<attribute name="@return">
						<description>New NumericType representing the absolute of the number stored</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="ceiling" returncomment="A NumericType representing the smallest integer greater than the
         number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the smallest integer greater than the number stored</description>
					<attribute name="@return">
						<description>A NumericType representing the smallest integer greater than the
         number stored</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="floor" returncomment="A NumericType representing the largest integer smaller than the
         number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the largest integer smaller than the number stored</description>
					<attribute name="@return">
						<description>A NumericType representing the largest integer smaller than the
         number stored</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="round" returncomment="A NumericType representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored.</description>
					<attribute name="@return">
						<description>A NumericType representing the closest long of the number stored.</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="round_half_to_even" returncomment="A NumericType representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored.</description>
					<attribute name="@return">
						<description>A NumericType representing the closest long of the number stored.</description>
					</attribute>
				</comment>
			</method>
			<method abstract="true" visibility="public" name="round_half_to_even" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<params>
					<param name="precision" fulltype="int" type="int" />
				</params>
			</method>
			<method visibility="protected" name="get_single_arg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<params>
					<param name="rs" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method static="true" visibility="public" name="get_single_type" returncomment="The node being tested" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<comment>
					<description>Check whether the supplied node is of the supplied type</description>
					<attribute name="@param">
						<description>at
            The node being tested</description>
					</attribute>
					<attribute name="@param">
						<description>type
            The type expected</description>
					</attribute>
					<attribute name="@return">
						<description>The node being tested</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError
             If node being tested is not of expected type</description>
					</attribute>
				</comment>
				<params>
					<param name="at" comment="The node being tested" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
					<param name="type" comment="The type expected" fulltype="java.lang.Class" type="Class" />
				</params>
				<exceptions>
					<exception comment="If node being tested is not of expected type" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method static="true" visibility="public" name="get_single_type" returncomment="The node being tested" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<comment>
					<description>Check whether first node in supplied ResultSequence is of the supplied
 type</description>
					<attribute name="@param">
						<description>rs
            The node being tested</description>
					</attribute>
					<attribute name="@param">
						<description>type
            The type expected</description>
					</attribute>
					<attribute name="@return">
						<description>The node being tested</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError
             If node being tested is not of expected type</description>
					</attribute>
				</comment>
				<params>
					<param name="rs" comment="The node being tested" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
					<param name="type" comment="The type expected" fulltype="java.lang.Class" type="Class" />
				</params>
				<exceptions>
					<exception comment="If node being tested is not of expected type" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NodeType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.PIType" type="PIType">
		<comment>
			<description>A representation of the ProcessingInstruction datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="PIType">
				<comment>
					<description>Initialises according to the supplied parameters</description>
					<attribute name="@param">
						<description>v
            The processing instruction this node represents</description>
					</attribute>
					<attribute name="@param">
						<description>doc_order
            The document order</description>
					</attribute>
				</comment>
				<params>
					<param name="v" comment="The processing instruction this node represents" fulltype="org.w3c.dom.ProcessingInstruction" type="ProcessingInstruction" />
				</params>
			</constructor>
			<method visibility="public" name="value" returncomment="Actual processing instruction this node represents" fulltype="org.w3c.dom.ProcessingInstruction" type="ProcessingInstruction">
				<comment>
					<description>Retrieves the actual processing instruction this node represents</description>
					<attribute name="@return">
						<description>Actual processing instruction this node represents</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;processing-instruction&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;processing-instruction&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the actual processing instruction stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the actual processing instruction
 stored</description>
					<attribute name="@return">
						<description>String representation of the actual processing instruction stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="typed_value" returncomment="New ResultSequence consisting of the processing instruction
         stored" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the processing instruction
 stored</description>
					<attribute name="@return">
						<description>New ResultSequence consisting of the processing instruction
         stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="node_name" returncomment="A QName representation of the node&apos;s name" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName">
				<comment>
					<description>Constructs the node&apos;s name</description>
					<attribute name="@return">
						<description>A QName representation of the node&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="isID" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="isIDREF" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName">
		<comment>
			<description>A representation of a QName datatype (name of a node)</description>
		</comment>
		<methods>
			<constructor visibility="public" name="QName">
				<comment>
					<description>Initialises using the supplied parameters</description>
					<attribute name="@param">
						<description>prefix
            Prefix of the node name</description>
					</attribute>
					<attribute name="@param">
						<description>local_part
            The node name itself</description>
					</attribute>
					<attribute name="@param">
						<description>ns
            The namespace this nodename belongs to</description>
					</attribute>
				</comment>
				<params>
					<param name="prefix" comment="Prefix of the node name" fulltype="java.lang.String" type="String" />
					<param name="local_part" comment="The node name itself" fulltype="java.lang.String" type="String" />
					<param name="ns" comment="The namespace this nodename belongs to" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="QName">
				<comment>
					<description>Initialises using the supplied parameters</description>
					<attribute name="@param">
						<description>prefix
            Prefix of the node name</description>
					</attribute>
					<attribute name="@param">
						<description>local_part
            The node name itself</description>
					</attribute>
				</comment>
				<params>
					<param name="prefix" comment="Prefix of the node name" fulltype="java.lang.String" type="String" />
					<param name="local_part" comment="The node name itself" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="QName">
				<comment>
					<description>Initialises using only the node name (no prefix)</description>
					<attribute name="@param">
						<description>local_part
            The node name</description>
					</attribute>
				</comment>
				<params>
					<param name="local_part" comment="The node name" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="QName">
				<comment>
					<description>Initialises with a null prefix and null node name</description>
				</comment>
			</constructor>
			<method static="true" visibility="public" name="parse_QName" returncomment="null" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName">
				<comment>
					<description>Creates a new QName by parsing a String representation of the node name</description>
					<attribute name="@param">
						<description>str
            String representation of the name</description>
					</attribute>
					<attribute name="@return">
						<description>null</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="String representation of the name" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the QName supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable QName in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to extract from</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the QName supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to extract from" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the node name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the node name. This method is
 functionally identical to string()</description>
					<attribute name="@return">
						<description>String representation of the node name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:QName&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:QName&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;QName&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;QName&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string" returncomment="String representation of the node name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the node name. This method is
 functionally identical to string_value()</description>
					<attribute name="@return">
						<description>String representation of the node name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="expanded_name" returncomment="Full pathname including namespace" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the full pathname including the namespace. This method must not
 be called if a namespace does exist for this node</description>
					<attribute name="@return">
						<description>Full pathname including namespace</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="prefix" returncomment="Prefix of the node&apos;s pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the prefix of the node&apos;s pathname</description>
					<attribute name="@return">
						<description>Prefix of the node&apos;s pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="set_namespace" fulltype="void" type="void">
				<comment>
					<description>Sets the namespace for this node</description>
					<attribute name="@param">
						<description>n
            Namespace this node belongs in</description>
					</attribute>
				</comment>
				<params>
					<param name="n" comment="Namespace this node belongs in" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="namespace" returncomment="Namespace that this node belongs in" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the namespace that this node belongs in. This method must not
 be called if the node does not belong in a namespace</description>
					<attribute name="@return">
						<description>Namespace that this node belongs in</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="local" returncomment="Node&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the node&apos;s name</description>
					<attribute name="@return">
						<description>Node&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="expanded" returncomment="True if a namespace has been defined for node. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether a namespace has been defined for this node</description>
					<attribute name="@return">
						<description>True if a namespace has been defined for node. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="equals" returncomment="True if the two represent the same node. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this QName and a supplied QName</description>
					<attribute name="@param">
						<description>obj
            The object to compare with. Should be of type QName</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two represent the same node. False otherwise</description>
					</attribute>
				</comment>
				<params>
					<param name="obj" comment="The object to compare with. Should be of type QName" fulltype="java.lang.Object" type="Object" />
				</params>
			</method>
			<method visibility="public" name="hashCode" returncomment="The hashcode for the full pathname" fulltype="int" type="int">
				<comment>
					<description>Calculates the hashcode for the full pathname</description>
					<attribute name="@return">
						<description>The hashcode for the full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two represent the same node. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this QName and the supplied QName</description>
					<attribute name="@param">
						<description>arg
            The QName to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two represent the same node. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The QName to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="toString" fulltype="java.lang.String" type="String" />
		</methods>
	</jelclass>
	<jelclass superclass="NodeType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NodeType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.TextType" type="TextType">
		<comment>
			<description>A representation of the TextType datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="TextType">
				<comment>
					<description>Initialises using the supplied parameters</description>
					<attribute name="@param">
						<description>v
            The value of the TextType node</description>
					</attribute>
				</comment>
				<params>
					<param name="v" comment="The value of the TextType node" fulltype="org.w3c.dom.Text" type="Text" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;text&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;text&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the actual value stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the actual value stored</description>
					<attribute name="@return">
						<description>String representation of the actual value stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="typed_value" returncomment="New ResultSequence consisting of the Text value stored" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the Text value stored</description>
					<attribute name="@return">
						<description>New ResultSequence consisting of the Text value stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="node_name" returncomment="null (no user defined name for this node gets defined)" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.QName" type="QName">
				<comment>
					<description>Unsupported method for this nodetype.</description>
					<attribute name="@return">
						<description>null (no user defined name for this node gets defined)</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="isID" fulltype="boolean" type="boolean">
				<comment>
					<description>Will always return false;</description>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="isIDREF" fulltype="boolean" type="boolean">
				<comment>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="DecimalFormat" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" serializable="true" superclassfulltype="java.text.DecimalFormat" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XPathDecimalFormat" type="XPathDecimalFormat">
		<comment>
			<description>This is an XPath specific implementation of DecimalFormat to handle
 some of the xpath specific formatting requirements.   Specifically
 it allows for E# to be represented to indicate that the exponent value
 is optional.  Otherwise all existing DecimalFormat patterns are handled
 as is.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
			<attribute name="@see">
				<description>1.1</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XPathDecimalFormat">
				<params>
					<param name="pattern" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<method visibility="public" name="xpathFormat" returncomment="" fulltype="java.lang.String" type="String">
				<comment>
					<description>Formats the string dropping a Zero Exponent Value if it exists.</description>
					<attribute name="@param">
						<description>obj</description>
					</attribute>
					<attribute name="@return" />
				</comment>
				<params>
					<param name="obj" comment="" fulltype="java.lang.Object" type="Object" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSAnyURI" type="XSAnyURI">
		<comment>
			<description>Represents a Universal Resource Identifier (URI) reference</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSAnyURI">
				<comment>
					<description>Arity 1 Constructor</description>
					<attribute name="@param">
						<description>x
            String representation of the URI</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="String representation of the URI" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSAnyURI">
				<comment>
					<description>Arity 0 Constructor. Initiates URI to null.</description>
				</comment>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:anyURI&quot;, the full type pathname of this datatype" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieve full type pathname of this datatype</description>
					<attribute name="@return">
						<description>&quot;xs:anyURI&quot;, the full type pathname of this datatype</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;anyURI&quot;, the type name of this datatype" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieve type name of this datatype</description>
					<attribute name="@return">
						<description>&quot;anyURI&quot;, the type name of this datatype</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="the URI value held by this instance of the URI datatype as a
         String" fulltype="java.lang.String" type="String">
				<comment>
					<description>Transforms and retrieves the URI value of this URI datatype in String
 format</description>
					<attribute name="@return">
						<description>the URI value held by this instance of the URI datatype as a
         String</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="new result sequence consisting of the URI supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creation of a result sequence consisting of a URI from a previous result
 sequence.</description>
					<attribute name="@param">
						<description>arg
            previous result sequence</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>new result sequence consisting of the URI supplied</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="previous result sequence" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two representation are of the same String. False
         otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied representation which
 must be of type xs:anyURI (or, by promotion of this, xs:string)</description>
					<attribute name="@param">
						<description>arg
            The representation to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two representation are of the same String. False
         otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The representation to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" fulltype="boolean" type="boolean">
				<comment>
					<description>Greater than comparison between this and the supplied representation which
 must be of type xs:anyURI (or, by promotion of this, xs:string)</description>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" fulltype="boolean" type="boolean">
				<comment>
					<description>Less than comparison between this and the supplied representation which
 must be of type xs:anyURI (or, by promotion of this, xs:string)</description>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSBase64Binary" type="XSBase64Binary">
		<comment>
			<description>A representation of the base64Binary datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSBase64Binary">
				<comment>
					<description>Initialises using the supplied String</description>
					<attribute name="@param">
						<description>x
            The String to initialise to</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="The String to initialise to" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSBase64Binary">
				<comment>
					<description>Initialises to null</description>
				</comment>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:base64Binary&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:base64Binary&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;base64Binary&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;base64Binary&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="The base64Binary stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the base64Binary stored. This method is
 functionally identical to value()</description>
					<attribute name="@return">
						<description>The base64Binary stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="value" returncomment="The base64Binary stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the base64Binary stored. This method is
 functionally identical to string_value()</description>
					<attribute name="@return">
						<description>The base64Binary stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence representing base64Binary value" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the base64Binary value</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which to construct base64Binary value</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence representing base64Binary value</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which to construct base64Binary value" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two representation are same. False otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied representation which
 must be of type base64Binary</description>
					<attribute name="@param">
						<description>arg
            The representation to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two representation are same. False otherwise.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The representation to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSBoolean" type="XSBoolean">
		<comment>
			<description>A representation of a true or a false value.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSBoolean">
				<comment>
					<description>Initiates the new representation to the boolean supplied</description>
					<attribute name="@param">
						<description>x
       Initializes this datatype to represent this boolean</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Initializes this datatype to represent this boolean" fulltype="boolean" type="boolean" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSBoolean">
				<comment>
					<description>Initiates to a default representation of false.</description>
				</comment>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:boolean&quot;, the full datatype pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieve the full type pathname of this datatype</description>
					<attribute name="@return">
						<description>&quot;xs:boolean&quot;, the full datatype pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;boolean&quot;, which is the datatype name." fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieve the datatype name</description>
					<attribute name="@return">
						<description>&quot;boolean&quot;, which is the datatype name.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="the String representation of the boolean value stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieve the String representation of the boolean value stored</description>
					<attribute name="@return">
						<description>the String representation of the boolean value stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="value" returncomment="the actual boolean value stored" fulltype="boolean" type="boolean">
				<comment>
					<description>Retrieves the actual boolean value stored</description>
					<attribute name="@return">
						<description>the actual boolean value stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="A new result sequence consisting of the boolean value supplied." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new result sequence consisting of the retrievable boolean value
 in the supplied result sequence</description>
					<attribute name="@param">
						<description>arg
            The result sequence from which to extract the boolean value.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>A new result sequence consisting of the boolean value supplied.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The result sequence from which to extract the boolean value." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="eq" returncomment="New XSBoolean representation of true/false result of the equality
         comparison" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison for equality between the supplied and this boolean
 representation. Returns true if both represent same boolean value, false
 otherwise</description>
					<attribute name="@param">
						<description>arg
            The XSBoolean representation of the boolean value to compare
            with.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>New XSBoolean representation of true/false result of the equality
         comparison</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSBoolean representation of the boolean value to compare
            with." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" returncomment="New XSBoolean representation of true/false result of the
         comparison" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between the supplied and this boolean representation. Returns
 true if this XSBoolean represents true and that XSBoolean supplied
 represents false. Returns false otherwise</description>
					<attribute name="@param">
						<description>arg
            The XSBoolean representation of the boolean value to compare
            with.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>New XSBoolean representation of true/false result of the
         comparison</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSBoolean representation of the boolean value to compare
            with." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" returncomment="New XSBoolean representation of true/false result of the
         comparison" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between the supplied and this boolean representation. Returns
 true if this XSBoolean represents false and that XSBoolean supplied
 represents true. Returns false otherwise</description>
					<attribute name="@param">
						<description>arg
            The XSBoolean representation of the boolean value to compare
            with.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>New XSBoolean representation of true/false result of the
         comparison</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSBoolean representation of the boolean value to compare
            with." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSShort" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSShort" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSByte" type="XSByte">
		<methods>
			<constructor visibility="public" name="XSByte">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSByte">
				<comment>
					<description>Initializes a representation of the supplied byte value</description>
					<attribute name="@param">
						<description>x
            Byte to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Byte to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:byte&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:byte&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;byte&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;byte&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;byte&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable &apos;byte&apos; in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the byte is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;byte&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the byte is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CalendarType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CalendarType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDate" type="XSDate">
		<implements>
			<interface fulltype="java.lang.Cloneable" type="Cloneable" />
		</implements>
		<comment>
			<description>Representation of a date of the form year-month-day and optional timezone</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSDate">
				<comment>
					<description>Initializes a new representation of a supplied date</description>
					<attribute name="@param">
						<description>cal
            The Calendar representation of the date to be stored</description>
					</attribute>
					<attribute name="@param">
						<description>tz
            The time zone of the date to be stored.</description>
					</attribute>
				</comment>
				<params>
					<param name="cal" comment="The Calendar representation of the date to be stored" fulltype="java.util.Calendar" type="Calendar" />
					<param name="tz" comment="The time zone of the date to be stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSDate">
				<comment>
					<description>Initializes a new representation of the current date</description>
				</comment>
			</constructor>
			<method visibility="public" name="type_name" returncomment="&quot;date&quot; which is the dataype name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype name</description>
					<attribute name="@return">
						<description>&quot;date&quot; which is the dataype name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="clone" returncomment="A copy of this date representation" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Creates a copy of this date representation</description>
					<attribute name="@return">
						<description>A copy of this date representation</description>
					</attribute>
				</comment>
				<exceptions>
					<exception fulltype="java.lang.CloneNotSupportedException" type="CloneNotSupportedException" />
				</exceptions>
			</method>
			<method static="true" visibility="public" name="parse_date" returncomment="The XSDate representation of the supplied date" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDate" type="XSDate">
				<comment>
					<description>Parses a String representation of a date (of the form year-month-day or
 year-month-day+timezone) and constructs a new XSDate representation of
 it.</description>
					<attribute name="@param">
						<description>str
            The String representation of the date (and optional timezone)</description>
					</attribute>
					<attribute name="@return">
						<description>The XSDate representation of the supplied date</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="The String representation of the date (and optional timezone)" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="constructor" returncomment="A new result sequence consisting of the date value supplied." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new result sequence consisting of the retrievable date value in
 the supplied result sequence</description>
					<attribute name="@param">
						<description>arg
            The result sequence from which to extract the date value.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>A new result sequence consisting of the date value supplied.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The result sequence from which to extract the date value." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="year" returncomment="the year value of the date stored" fulltype="int" type="int">
				<comment>
					<description>Retrieve the year from the date stored</description>
					<attribute name="@return">
						<description>the year value of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="month" returncomment="the month value of the date stored" fulltype="int" type="int">
				<comment>
					<description>Retrieve the month from the date stored</description>
					<attribute name="@return">
						<description>the month value of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="day" returncomment="the day value of the date stored" fulltype="int" type="int">
				<comment>
					<description>Retrieve the day from the date stored</description>
					<attribute name="@return">
						<description>the day value of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="timezoned" returncomment="True if there is a timezone associated with this date. False
         otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Retrieves whether this date has an optional timezone associated with it</description>
					<attribute name="@return">
						<description>True if there is a timezone associated with this date. False
         otherwise.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the date stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the date stored</description>
					<attribute name="@return">
						<description>String representation of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:date&quot; which is the datatype full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrive the datatype full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:date&quot; which is the datatype full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="calendar" returncomment="Calendar representation of the date stored" fulltype="java.util.Calendar" type="Calendar">
				<comment>
					<description>Retrieves the Calendar representation of the date stored</description>
					<attribute name="@return">
						<description>Calendar representation of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="tz" returncomment="the timezone associated with the date stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Retrieves the timezone associated with the date stored</description>
					<attribute name="@return">
						<description>the timezone associated with the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two dates are represent the same exact point in time.
         False otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison on this and the supplied dates (taking timezones into
 account)</description>
					<attribute name="@param">
						<description>arg
            XSDate representation of the date to compare to</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two dates are represent the same exact point in time.
         False otherwise.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="XSDate representation of the date to compare to" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" returncomment="True if in time, this date lies before the date supplied. False
         otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison on this and the supplied dates (taking timezones into account)</description>
					<attribute name="@param">
						<description>arg
            XSDate representation of the date to compare to</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>True if in time, this date lies before the date supplied. False
         otherwise.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="XSDate representation of the date to compare to" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" returncomment="True if in time, this date lies after the date supplied. False
         otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison on this and the supplied dates (taking timezones into account)</description>
					<attribute name="@param">
						<description>arg
            XSDate representation of the date to compare to</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>True if in time, this date lies after the date supplied. False
         otherwise.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="XSDate representation of the date to compare to" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="value" returncomment="Number of milliseconds since the begining of the epoch" fulltype="double" type="double">
				<comment>
					<description>Currently unsupported method. Retrieves the date in milliseconds since
 the begining of epoch</description>
					<attribute name="@return">
						<description>Number of milliseconds since the begining of the epoch</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="minus" returncomment="New ResultSequence consisting of the result of the mathematical
         minus operation." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical minus operator between this XSDate and a supplied result
 sequence (XSDate, XDTYearMonthDuration and XDTDayTimeDuration are only
 valid ones).</description>
					<attribute name="@param">
						<description>arg
            The supplied ResultSequence that is on the right of the minus
            operator. If this is an XSDate, the result will be a
            XDTDayTimeDuration of the duration of time between these two
            dates. If arg is an XDTYearMonthDuration or an
            XDTDayTimeDuration the result will be a XSDate of the result
            of the current date minus the duration of time supplied.</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the result of the mathematical
         minus operation.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The supplied ResultSequence that is on the right of the minus
            operator. If this is an XSDate, the result will be a
            XDTDayTimeDuration of the duration of time between these two
            dates. If arg is an XDTYearMonthDuration or an
            XDTDayTimeDuration the result will be a XSDate of the result
            of the current date minus the duration of time supplied." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="plus" returncomment="New ResultSequence consisting of the result of the mathematical
         minus operation." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical addition operator between this XSDate and a supplied result
 sequence (XDTYearMonthDuration and XDTDayTimeDuration are only valid
 ones).</description>
					<attribute name="@param">
						<description>arg
            The supplied ResultSequence that is on the right of the minus
            operator. If arg is an XDTYearMonthDuration or an
            XDTDayTimeDuration the result will be a XSDate of the result
            of the current date minus the duration of time supplied.</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the result of the mathematical
         minus operation.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The supplied ResultSequence that is on the right of the minus
            operator. If arg is an XDTYearMonthDuration or an
            XDTDayTimeDuration the result will be a XSDate of the result
            of the current date minus the duration of time supplied." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CalendarType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CalendarType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDateTime" type="XSDateTime">
		<implements>
			<interface fulltype="java.lang.Cloneable" type="Cloneable" />
		</implements>
		<comment>
			<description>A representation of a date and time (and optional timezone)</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSDateTime">
				<comment>
					<description>Initiates a new representation of a supplied date and time</description>
					<attribute name="@param">
						<description>cal
            The Calendar representation of the date and time to be stored</description>
					</attribute>
					<attribute name="@param">
						<description>tz
            The timezone of the date to be stored.</description>
					</attribute>
				</comment>
				<params>
					<param name="cal" comment="The Calendar representation of the date and time to be stored" fulltype="java.util.Calendar" type="Calendar" />
					<param name="tz" comment="The timezone of the date to be stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSDateTime">
				<comment>
					<description>Inititates a new representation of the current date and time</description>
				</comment>
			</constructor>
			<method visibility="public" name="clone" returncomment="A copy of this date and time representation" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Creates a copy of this date and time representation</description>
					<attribute name="@return">
						<description>A copy of this date and time representation</description>
					</attribute>
				</comment>
				<exceptions>
					<exception fulltype="java.lang.CloneNotSupportedException" type="CloneNotSupportedException" />
				</exceptions>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;dateTime&quot; which is the dataype name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype name</description>
					<attribute name="@return">
						<description>&quot;dateTime&quot; which is the dataype name</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="is_digit" returncomment="True if the character is numeric. False otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Check to see if a character is numeric</description>
					<attribute name="@param">
						<description>x
            Character to be tested</description>
					</attribute>
					<attribute name="@return">
						<description>True if the character is numeric. False otherwise.</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Character to be tested" fulltype="char" type="char" />
				</params>
			</method>
			<method static="true" visibility="public" name="parse_date" returncomment="Integer array of size 3. Element 1 is the year, element 2 is the
         month and element 3 is the day" fulltype="int[]" type="int">
				<comment>
					<description>Parses a String representation of a date and time and retrieves the year,
 month and day from it</description>
					<attribute name="@param">
						<description>str
            The String representation of the date (and optional timezone)</description>
					</attribute>
					<attribute name="@return">
						<description>Integer array of size 3. Element 1 is the year, element 2 is the
         month and element 3 is the day</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="The String representation of the date (and optional timezone)" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="parse_time" returncomment="Integer array of size 3. Element 1 is the hour, element 2 is the
         minute and element 3 is the seconds" fulltype="double[]" type="double">
				<comment>
					<description>Parses a String representation of a date and time and retrieves the hour,
 minute and seconds from it</description>
					<attribute name="@param">
						<description>str
            The String representation of the date (and optional timezone)</description>
					</attribute>
					<attribute name="@return">
						<description>Integer array of size 3. Element 1 is the hour, element 2 is the
         minute and element 3 is the seconds</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="The String representation of the date (and optional timezone)" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="parse_timezone" returncomment="Integer array of size 3. Element 1 represents whether the
         timezone is ahead or behind GMT, element 2 is the hour
         displacement and element 3 is the minute displacement." fulltype="int[]" type="int">
				<comment>
					<description>Parses a String representation of a date and time and retrieves the
 timezone from it</description>
					<attribute name="@param">
						<description>str
            The String representation of the date (and optional timezone)</description>
					</attribute>
					<attribute name="@return">
						<description>Integer array of size 3. Element 1 represents whether the
         timezone is ahead or behind GMT, element 2 is the hour
         displacement and element 3 is the minute displacement.</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="The String representation of the date (and optional timezone)" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method static="true" visibility="public" name="parseDateTime" returncomment="The XSDateTime representation of the date and time (and optional
         timezone)" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDateTime" type="XSDateTime">
				<comment>
					<description>Parses a String representation of a date and time and constructs a new
 XSDateTime object using that information</description>
					<attribute name="@param">
						<description>str
            The String representation of the date (and optional timezone)</description>
					</attribute>
					<attribute name="@return">
						<description>The XSDateTime representation of the date and time (and optional
         timezone)</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="The String representation of the date (and optional timezone)" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="constructor" returncomment="A new result sequence consisting of the date and time value
         supplied." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new result sequence consisting of the retrievable date and time
 value in the supplied result sequence</description>
					<attribute name="@param">
						<description>arg
            The result sequence from which to extract the date and time
            value.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>A new result sequence consisting of the date and time value
         supplied.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The result sequence from which to extract the date and time
            value." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="year" returncomment="the year value of the date stored" fulltype="int" type="int">
				<comment>
					<description>Retrieve the year from the date stored</description>
					<attribute name="@return">
						<description>the year value of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="month" returncomment="the month value of the date stored" fulltype="int" type="int">
				<comment>
					<description>Retrieve the month from the date stored</description>
					<attribute name="@return">
						<description>the month value of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="day" returncomment="the day value of the date stored" fulltype="int" type="int">
				<comment>
					<description>Retrieve the day from the date stored</description>
					<attribute name="@return">
						<description>the day value of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="hour" returncomment="the hour value of the date stored" fulltype="int" type="int">
				<comment>
					<description>Retrieve the hour from the date stored</description>
					<attribute name="@return">
						<description>the hour value of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="minute" returncomment="the minute value of the date stored" fulltype="int" type="int">
				<comment>
					<description>Retrieve the minute from the date stored</description>
					<attribute name="@return">
						<description>the minute value of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="second" returncomment="the seconds value of the date stored" fulltype="double" type="double">
				<comment>
					<description>Retrieve the seconds from the date stored</description>
					<attribute name="@return">
						<description>the seconds value of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="timezoned" fulltype="boolean" type="boolean" />
			<method static="true" visibility="public" name="pad_int" returncomment="String representation of the padded integer" fulltype="java.lang.String" type="String">
				<comment>
					<description>Pads the supplied number to the supplied number of digits by adding 0&apos;s
 in front of it</description>
					<attribute name="@param">
						<description>num
            Number that si to be padded (if neccessay)</description>
					</attribute>
					<attribute name="@param">
						<description>len
            Desired length after padding</description>
					</attribute>
					<attribute name="@return">
						<description>String representation of the padded integer</description>
					</attribute>
				</comment>
				<params>
					<param name="num" comment="Number that si to be padded (if neccessay)" fulltype="int" type="int" />
					<param name="len" comment="Desired length after padding" fulltype="int" type="int" />
				</params>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the date and time stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the date and time stored</description>
					<attribute name="@return">
						<description>String representation of the date and time stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:dateTime&quot; which is the datatype full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrive the datatype full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:dateTime&quot; which is the datatype full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="calendar" returncomment="Calendar representation of the date stored" fulltype="java.util.Calendar" type="Calendar">
				<comment>
					<description>Retrieves the Calendar representation of the date stored</description>
					<attribute name="@return">
						<description>Calendar representation of the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two dates and times are represent the same exact
         point in time. False otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison on this and the supplied dates and times (taking
 timezones into account)</description>
					<attribute name="@param">
						<description>arg
            XSDateTime representation of the date to compare to</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two dates and times are represent the same exact
         point in time. False otherwise.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="XSDateTime representation of the date to compare to" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" returncomment="True if in time, this date and time lies before the date and time
         supplied. False otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison on this and the supplied dates and times (taking timezones
 into account)</description>
					<attribute name="@param">
						<description>arg
            XSDateTime representation of the date to compare to</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>True if in time, this date and time lies before the date and time
         supplied. False otherwise.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="XSDateTime representation of the date to compare to" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" returncomment="True if in time, this date and time lies after the date and time
         supplied. False otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison on this and the supplied dates and times (taking timezones
 into account)</description>
					<attribute name="@param">
						<description>arg
            XSDateTime representation of the date to compare to</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>True if in time, this date and time lies after the date and time
         supplied. False otherwise.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="XSDateTime representation of the date to compare to" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="tz" returncomment="the timezone associated with the date stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Retrieves the timezone associated with the date stored</description>
					<attribute name="@return">
						<description>the timezone associated with the date stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="value" returncomment="Number of milliseconds since the begining of the epoch" fulltype="double" type="double">
				<comment>
					<description>Currently unsupported method. Retrieves the date in milliseconds since
 the begining of epoch</description>
					<attribute name="@return">
						<description>Number of milliseconds since the begining of the epoch</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="minus" returncomment="New ResultSequence consisting of the result of the mathematical
         minus operation." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical minus operator between this XSDateTime and a supplied result
 sequence (XSDateTime, XDTYearMonthDuration and XDTDayTimeDuration are
 only valid ones).</description>
					<attribute name="@param">
						<description>arg
            The supplied ResultSequence that is on the right of the minus
            operator. If this is an XSDateTime, the result will be a
            XDTDayTimeDuration of the duration of time between these two
            dates. If arg is an XDTYearMonthDuration or an
            XDTDayTimeDuration the result will be a XSDateTime of the
            result of the current date minus the duration of time
            supplied.</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the result of the mathematical
         minus operation.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The supplied ResultSequence that is on the right of the minus
            operator. If this is an XSDateTime, the result will be a
            XDTDayTimeDuration of the duration of time between these two
            dates. If arg is an XDTYearMonthDuration or an
            XDTDayTimeDuration the result will be a XSDateTime of the
            result of the current date minus the duration of time
            supplied." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="plus" returncomment="New ResultSequence consisting of the result of the mathematical
         minus operation." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical addition operator between this XSDateTime and a supplied
 result sequence (XDTYearMonthDuration and XDTDayTimeDuration are only
 valid ones).</description>
					<attribute name="@param">
						<description>arg
            The supplied ResultSequence that is on the right of the minus
            operator. If arg is an XDTYearMonthDuration or an
            XDTDayTimeDuration the result will be a XSDateTime of the
            result of the current date minus the duration of time
            supplied.</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the result of the mathematical
         minus operation.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The supplied ResultSequence that is on the right of the minus
            operator. If arg is an XDTYearMonthDuration or an
            XDTDayTimeDuration the result will be a XSDateTime of the
            result of the current date minus the duration of time
            supplied." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSDuration" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDayTimeDuration" type="XSDayTimeDuration">
		<implements>
			<interface fulltype="java.lang.Cloneable" type="Cloneable" />
		</implements>
		<comment>
			<description>A representation of the DayTimeDuration datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSDayTimeDuration">
				<comment>
					<description>Initialises to the supplied parameters. If more than 24 hours is
 supplied, the number of days is adjusted acordingly. The same occurs for
 minutes and seconds</description>
					<attribute name="@param">
						<description>days
            Number of days in this duration of time</description>
					</attribute>
					<attribute name="@param">
						<description>hours
            Number of hours in this duration of time</description>
					</attribute>
					<attribute name="@param">
						<description>minutes
            Number of minutes in this duration of time</description>
					</attribute>
					<attribute name="@param">
						<description>seconds
            Number of seconds in this duration of time</description>
					</attribute>
					<attribute name="@param">
						<description>negative
            True if this duration of time represents a backwards passage
            through time. False otherwise</description>
					</attribute>
				</comment>
				<params>
					<param name="days" comment="Number of days in this duration of time" fulltype="int" type="int" />
					<param name="hours" comment="Number of hours in this duration of time" fulltype="int" type="int" />
					<param name="minutes" comment="Number of minutes in this duration of time" fulltype="int" type="int" />
					<param name="seconds" comment="Number of seconds in this duration of time" fulltype="double" type="double" />
					<param name="negative" comment="True if this duration of time represents a backwards passage
            through time. False otherwise" fulltype="boolean" type="boolean" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSDayTimeDuration">
				<comment>
					<description>Initialises to the given number of seconds</description>
					<attribute name="@param">
						<description>secs
            Number of seconds in the duration of time</description>
					</attribute>
				</comment>
				<params>
					<param name="secs" comment="Number of seconds in the duration of time" fulltype="double" type="double" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSDayTimeDuration">
				<comment>
					<description>Initialises to a duration of no time (0days, 0hours, 0minutes, 0seconds)</description>
				</comment>
			</constructor>
			<method visibility="public" name="clone" returncomment="New XSDayTimeDuration representing the duration of time stored" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Creates a copy of this representation of a time duration</description>
					<attribute name="@return">
						<description>New XSDayTimeDuration representing the duration of time stored</description>
					</attribute>
					<attribute name="@throws">
						<description>CloneNotSupportedException</description>
					</attribute>
				</comment>
				<exceptions>
					<exception comment="" fulltype="java.lang.CloneNotSupportedException" type="CloneNotSupportedException" />
				</exceptions>
			</method>
			<method visibility="public" name="constructor" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method static="true" visibility="public" name="parseDTDuration" returncomment="New XSDayTimeDuration representing the duration of time supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Creates a new XSDayTimeDuration by parsing the supplied String
 represented duration of time</description>
					<attribute name="@param">
						<description>str
            String represented duration of time</description>
					</attribute>
					<attribute name="@return">
						<description>New XSDayTimeDuration representing the duration of time supplied</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="String represented duration of time" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;dayTimeDuration&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrives the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;dayTimeDuration&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:dayTimeDuration&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:dayTimeDuration&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="plus" returncomment="New XSDayTimeDuration representing the resulting duration after
         the addition" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical addition between this duration stored and the supplied
 duration of time (of type XSDayTimeDuration)</description>
					<attribute name="@param">
						<description>arg
            The duration of time to add</description>
					</attribute>
					<attribute name="@return">
						<description>New XSDayTimeDuration representing the resulting duration after
         the addition</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to add" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="minus" returncomment="New XSDayTimeDuration representing the resulting duration after
         the subtraction" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical subtraction between this duration stored and the supplied
 duration of time (of type XSDayTimeDuration)</description>
					<attribute name="@param">
						<description>arg
            The duration of time to subtract</description>
					</attribute>
					<attribute name="@return">
						<description>New XSDayTimeDuration representing the resulting duration after
         the subtraction</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to subtract" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="times" returncomment="New XSDayTimeDuration representing the resulting duration after
         the multiplication" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical multiplication between this duration stored and the supplied
 duration of time (of type XSDayTimeDuration)</description>
					<attribute name="@param">
						<description>arg
            The duration of time to multiply by</description>
					</attribute>
					<attribute name="@return">
						<description>New XSDayTimeDuration representing the resulting duration after
         the multiplication</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to multiply by" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="div" returncomment="New XSDayTimeDuration representing the resulting duration after
         the division" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical division between this duration stored and the supplied
 duration of time (of type XSDayTimeDuration)</description>
					<attribute name="@param">
						<description>arg
            The duration of time to divide by</description>
					</attribute>
					<attribute name="@return">
						<description>New XSDayTimeDuration representing the resulting duration after
         the division</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to divide by" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NumericType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDecimal" type="XSDecimal">
		<comment>
			<description>A representation of the Decimal datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSDecimal">
				<comment>
					<description>Initiates a representation of 0.0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSDecimal">
				<comment>
					<description>Initiates a representation of the supplied number</description>
					<attribute name="@param">
						<description>x
            Number to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Number to be stored" fulltype="java.math.BigDecimal" type="BigDecimal" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSDecimal">
				<params>
					<param name="x" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:decimal&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:decimal&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;decimal&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;decimal&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the Decimal value stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the Decimal value stored</description>
					<attribute name="@return">
						<description>String representation of the Decimal value stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="zero" returncomment="True if this XSDecimal represents 0. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check if this XSDecimal represents 0</description>
					<attribute name="@return">
						<description>True if this XSDecimal represents 0. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="A new result sequence consisting of the decimal number supplied." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new result sequence consisting of the retrievable decimal
 number in the supplied result sequence</description>
					<attribute name="@param">
						<description>arg
            The result sequence from which to extract the decimal number.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>A new result sequence consisting of the decimal number supplied.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The result sequence from which to extract the decimal number." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="double_value" returncomment="The actual value of the number stored" fulltype="double" type="double">
				<comment>
					<description>Retrieves the actual value of the number stored</description>
					<attribute name="@return">
						<description>The actual value of the number stored</description>
					</attribute>
					<attribute name="@deprecated">
						<description>Use getValue() instead.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="getValue" fulltype="java.math.BigDecimal" type="BigDecimal" />
			<method visibility="public" name="set_double" fulltype="void" type="void">
				<comment>
					<description>Sets the number stored to that supplied</description>
					<attribute name="@param">
						<description>x
            Number to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Number to be stored" fulltype="double" type="double" />
				</params>
			</method>
			<method visibility="public" name="eq" returncomment="True if the 2 representation represent the same number. False
         otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this number and the supplied representation.</description>
					<attribute name="@param">
						<description>at
            Representation to be compared with (must currently be of type
            XSDecimal)</description>
					</attribute>
					<attribute name="@return">
						<description>True if the 2 representation represent the same number. False
         otherwise</description>
					</attribute>
				</comment>
				<params>
					<param name="at" comment="Representation to be compared with (must currently be of type
            XSDecimal)" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" returncomment="True if the supplied type represents a number smaller than this
         one stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this number and the supplied representation.</description>
					<attribute name="@param">
						<description>arg
            Representation to be compared with (must currently be of type
            XSDecimal)</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied type represents a number smaller than this
         one stored. False otherwise</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="Representation to be compared with (must currently be of type
            XSDecimal)" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="protected" name="convertArg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" returncomment="True if the supplied type represents a number greater than this
         one stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this number and the supplied representation.</description>
					<attribute name="@param">
						<description>arg
            Representation to be compared with (must currently be of type
            XSDecimal)</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied type represents a number greater than this
         one stored. False otherwise</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="Representation to be compared with (must currently be of type
            XSDecimal)" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="plus" returncomment="A XSDecimal consisting of the result of the mathematical
         addition." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical addition operator between this XSDecimal and the supplied
 ResultSequence. Due to no numeric type promotion or conversion, the
 ResultSequence must be of type XSDecimal.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform an addition with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDecimal consisting of the result of the mathematical
         addition.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform an addition with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="minus" returncomment="A XSDecimal consisting of the result of the mathematical
         subtraction." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical subtraction operator between this XSDecimal and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a subtraction with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDecimal consisting of the result of the mathematical
         subtraction.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a subtraction with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="times" returncomment="A XSDecimal consisting of the result of the mathematical
         multiplication." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical multiplication operator between this XSDecimal and the
 supplied ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a multiplication with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDecimal consisting of the result of the mathematical
         multiplication.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a multiplication with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="div" returncomment="A XSDecimal consisting of the result of the mathematical
         division." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical division operator between this XSDecimal and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a division with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDecimal consisting of the result of the mathematical
         division.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a division with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="idiv" returncomment="A XSInteger consisting of the result of the mathematical integer
         division." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical integer division operator between this XSDecimal and the
 supplied ResultSequence. Due to no numeric type promotion or conversion,
 the ResultSequence must be of type XSDecimal.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform an integer division with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSInteger consisting of the result of the mathematical integer
         division.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform an integer division with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="mod" returncomment="A XSDecimal consisting of the result of the mathematical modulus." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical modulus operator between this XSDecimal and the supplied
 ResultSequence. Due to no numeric type promotion or conversion, the
 ResultSequence must be of type XSDecimal.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a modulus with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDecimal consisting of the result of the mathematical modulus.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a modulus with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="unary_minus" returncomment="A XSDecimal representing the negation of this XSDecimal" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Negation of the number stored</description>
					<attribute name="@return">
						<description>A XSDecimal representing the negation of this XSDecimal</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="abs" returncomment="A XSDecimal representing the absolute value of the number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Absolutes the number stored</description>
					<attribute name="@return">
						<description>A XSDecimal representing the absolute value of the number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="ceiling" returncomment="A XSDecimal representing the smallest integer greater than the
         number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the smallest integer greater than the number stored</description>
					<attribute name="@return">
						<description>A XSDecimal representing the smallest integer greater than the
         number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="floor" returncomment="A XSDecimal representing the largest integer smaller than the
         number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the largest integer smaller than the number stored</description>
					<attribute name="@return">
						<description>A XSDecimal representing the largest integer smaller than the
         number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="round" returncomment="A XSDecimal representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored.</description>
					<attribute name="@return">
						<description>A XSDecimal representing the closest long of the number stored.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="round_half_to_even" returncomment="A XSDecimal representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored.</description>
					<attribute name="@return">
						<description>A XSDecimal representing the closest long of the number stored.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="round_half_to_even" returncomment="A XSDecimal representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored with the specified precision.</description>
					<attribute name="@param">
						<description>precision An integer precision</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDecimal representing the closest long of the number stored.</description>
					</attribute>
				</comment>
				<params>
					<param name="precision" comment="An integer precision" fulltype="int" type="int" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NumericType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDouble" type="XSDouble">
		<comment>
			<description>A representation of the Double datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSDouble">
				<comment>
					<description>Initialises a representation of the supplied number</description>
					<attribute name="@param">
						<description>x
            Number to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Number to be stored" fulltype="double" type="double" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSDouble">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSDouble">
				<comment>
					<description>Initialises using a String represented number</description>
					<attribute name="@param">
						<description>init
            String representation of the number to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="init" comment="String representation of the number to be stored" fulltype="java.lang.String" type="String" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</constructor>
			<method static="true" visibility="public" name="parse_double" returncomment="New XSDouble representing the number supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDouble" type="XSDouble">
				<comment>
					<description>Creates a new representation of the String represented number</description>
					<attribute name="@param">
						<description>i
            String representation of the number to be stored</description>
					</attribute>
					<attribute name="@return">
						<description>New XSDouble representing the number supplied</description>
					</attribute>
				</comment>
				<params>
					<param name="i" comment="String representation of the number to be stored" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="constructor" returncomment="A new result sequence consisting of the double number supplied." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new result sequence consisting of the retrievable double number
 in the supplied result sequence</description>
					<attribute name="@param">
						<description>arg
            The result sequence from which to extract the double number.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
					<attribute name="@return">
						<description>A new result sequence consisting of the double number supplied.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The result sequence from which to extract the double number." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:double&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:double&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;double&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;double&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the Decimal value stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the Decimal value stored</description>
					<attribute name="@return">
						<description>String representation of the Decimal value stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="nan" returncomment="True if this XSDouble represents NaN. False otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether this XSDouble represents NaN</description>
					<attribute name="@return">
						<description>True if this XSDouble represents NaN. False otherwise.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="infinite" returncomment="True if this XSDouble represents infinity. False otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether this XSDouble represents an infinite number (negative or positive)</description>
					<attribute name="@return">
						<description>True if this XSDouble represents infinity. False otherwise.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="zero" returncomment="True if this XSDouble represents 0. False otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether this XSDouble represents 0</description>
					<attribute name="@return">
						<description>True if this XSDouble represents 0. False otherwise.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="negativeZero" fulltype="boolean" type="boolean" />
			<method visibility="public" name="double_value" returncomment="The actual value of the number stored" fulltype="double" type="double">
				<comment>
					<description>Retrieves the actual value of the number stored</description>
					<attribute name="@return">
						<description>The actual value of the number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if the 2 representations represent the same number. False
         otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this number and the supplied representation.</description>
					<attribute name="@param">
						<description>aa
            Representation to be compared with (must currently be of type
            XSDouble)</description>
					</attribute>
					<attribute name="@return">
						<description>True if the 2 representations represent the same number. False
         otherwise</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
				<params>
					<param name="aa" comment="Representation to be compared with (must currently be of type
            XSDouble)" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" returncomment="True if the supplied type represents a number smaller than this
         one stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this number and the supplied representation.</description>
					<attribute name="@param">
						<description>arg
            Representation to be compared with (must currently be of type
            XSDouble)</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied type represents a number smaller than this
         one stored. False otherwise</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="Representation to be compared with (must currently be of type
            XSDouble)" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="protected" name="convertArg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" returncomment="True if the supplied type represents a number greater than this
         one stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this number and the supplied representation. Currently
 no numeric type promotion exists so the supplied representation must be
 of type XSDouble.</description>
					<attribute name="@param">
						<description>arg
            Representation to be compared with (must currently be of type
            XSDouble)</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied type represents a number greater than this
         one stored. False otherwise</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="Representation to be compared with (must currently be of type
            XSDouble)" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="plus" returncomment="A XSDouble consisting of the result of the mathematical addition." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical addition operator between this XSDouble and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform an addition with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDouble consisting of the result of the mathematical addition.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform an addition with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="minus" returncomment="A XSDouble consisting of the result of the mathematical
         subtraction." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical subtraction operator between this XSDouble and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform an subtraction with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDouble consisting of the result of the mathematical
         subtraction.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform an subtraction with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="times" returncomment="A XSDouble consisting of the result of the mathematical
         multiplication." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical multiplication operator between this XSDouble and the
 supplied ResultSequence. Due to no numeric type promotion or conversion,
 the ResultSequence must be of type XSDouble.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform an multiplication with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDouble consisting of the result of the mathematical
         multiplication.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform an multiplication with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="div" returncomment="A XSDouble consisting of the result of the mathematical division." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical division operator between this XSDouble and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform an division with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDouble consisting of the result of the mathematical division.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform an division with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="idiv" returncomment="A XSInteger consisting of the result of the mathematical integer
         division." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical integer division operator between this XSDouble and the
 supplied ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform an integer division with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSInteger consisting of the result of the mathematical integer
         division.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform an integer division with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="mod" returncomment="A XSDouble consisting of the result of the mathematical modulus." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical modulus operator between this XSDouble and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a modulus with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDouble consisting of the result of the mathematical modulus.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a modulus with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="unary_minus" returncomment="A XSDouble representing the negation of this XSDecimal" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Negation of the number stored</description>
					<attribute name="@return">
						<description>A XSDouble representing the negation of this XSDecimal</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="abs" returncomment="A XSDouble representing the absolute value of the number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Absolutes the number stored</description>
					<attribute name="@return">
						<description>A XSDouble representing the absolute value of the number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="ceiling" returncomment="A XSDouble representing the smallest integer greater than the
         number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the smallest integer greater than the number stored</description>
					<attribute name="@return">
						<description>A XSDouble representing the smallest integer greater than the
         number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="floor" returncomment="A XSDouble representing the largest integer smaller than the
         number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the largest integer smaller than the number stored</description>
					<attribute name="@return">
						<description>A XSDouble representing the largest integer smaller than the
         number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="round" returncomment="A XSDouble representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored.</description>
					<attribute name="@return">
						<description>A XSDouble representing the closest long of the number stored.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="round_half_to_even" returncomment="A XSDouble representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored.</description>
					<attribute name="@return">
						<description>A XSDouble representing the closest long of the number stored.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="round_half_to_even" returncomment="A XSDouble representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored with the specified
 precision.</description>
					<attribute name="@param">
						<description>precision
            An integer precision</description>
					</attribute>
					<attribute name="@return">
						<description>A XSDouble representing the closest long of the number stored.</description>
					</attribute>
				</comment>
				<params>
					<param name="precision" comment="An integer precision" fulltype="int" type="int" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
		<comment>
			<description>A representation of the xs:duration data type. Other duration implementations
 should inherit from this implementation.</description>
			<attribute name="@since">
				<description>1.1 This used to be an abstract class but was incorrectly implemented
        as such.</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="protected" name="_year" fulltype="int" type="int" />
			<field visibility="protected" name="_month" fulltype="int" type="int" />
			<field visibility="protected" name="_days" fulltype="int" type="int" />
			<field visibility="protected" name="_hours" fulltype="int" type="int" />
			<field visibility="protected" name="_minutes" fulltype="int" type="int" />
			<field visibility="protected" name="_seconds" fulltype="double" type="double" />
			<field visibility="protected" name="_negative" fulltype="boolean" type="boolean" />
		</fields>
		<methods>
			<constructor visibility="public" name="XSDuration">
				<comment>
					<description>Initializes to the supplied parameters. If more than 24 hours is
 supplied, the number of days is adjusted accordingly. The same occurs for
 minutes and seconds</description>
					<attribute name="@param">
						<description>years
            Number of years in this duration of time.</description>
					</attribute>
					<attribute name="@param">
						<description>months
            Number of months in this duration of time.</description>
					</attribute>
					<attribute name="@param">
						<description>days
            Number of days in this duration of time</description>
					</attribute>
					<attribute name="@param">
						<description>hours
            Number of hours in this duration of time</description>
					</attribute>
					<attribute name="@param">
						<description>minutes
            Number of minutes in this duration of time</description>
					</attribute>
					<attribute name="@param">
						<description>seconds
            Number of seconds in this duration of time</description>
					</attribute>
					<attribute name="@param">
						<description>negative
            True if this duration of time represents a backwards passage
            through time. False otherwise</description>
					</attribute>
				</comment>
				<params>
					<param name="years" comment="Number of years in this duration of time." fulltype="int" type="int" />
					<param name="months" comment="Number of months in this duration of time." fulltype="int" type="int" />
					<param name="days" comment="Number of days in this duration of time" fulltype="int" type="int" />
					<param name="hours" comment="Number of hours in this duration of time" fulltype="int" type="int" />
					<param name="minutes" comment="Number of minutes in this duration of time" fulltype="int" type="int" />
					<param name="seconds" comment="Number of seconds in this duration of time" fulltype="double" type="double" />
					<param name="negative" comment="True if this duration of time represents a backwards passage
            through time. False otherwise" fulltype="boolean" type="boolean" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSDuration">
				<comment>
					<description>Initialises to the given number of seconds</description>
					<attribute name="@param">
						<description>secs
            Number of seconds in the duration of time</description>
					</attribute>
				</comment>
				<params>
					<param name="secs" comment="Number of seconds in the duration of time" fulltype="double" type="double" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSDuration">
				<comment>
					<description>Initialises to a duration of no time (0days, 0hours, 0minutes, 0seconds)</description>
				</comment>
			</constructor>
			<method visibility="public" name="type_name" fulltype="java.lang.String" type="String" />
			<method visibility="public" name="string_type" fulltype="java.lang.String" type="String" />
			<method visibility="public" name="string_value" returncomment="String representation of the duration stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the duration stored</description>
					<attribute name="@return">
						<description>String representation of the duration stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="days" returncomment="Number of days within the duration of time stored" fulltype="int" type="int">
				<comment>
					<description>Retrieves the number of days within the duration of time stored</description>
					<attribute name="@return">
						<description>Number of days within the duration of time stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="minutes" returncomment="Number of minutes within the duration of time stored" fulltype="int" type="int">
				<comment>
					<description>Retrieves the number of minutes (max 60) within the duration of time
 stored</description>
					<attribute name="@return">
						<description>Number of minutes within the duration of time stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="hours" returncomment="Number of hours within the duration of time stored" fulltype="int" type="int">
				<comment>
					<description>Retrieves the number of hours (max 24) within the duration of time stored</description>
					<attribute name="@return">
						<description>Number of hours within the duration of time stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="seconds" returncomment="Number of seconds within the duration of time stored" fulltype="double" type="double">
				<comment>
					<description>Retrieves the number of seconds (max 60) within the duration of time
 stored</description>
					<attribute name="@return">
						<description>Number of seconds within the duration of time stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if they both represent the duration of time. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied duration of time.</description>
					<attribute name="@param">
						<description>arg
            The duration of time to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if they both represent the duration of time. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" returncomment="True if the supplied time represents a larger duration than that
         stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this and the supplied duration of time.</description>
					<attribute name="@param">
						<description>arg
            The duration of time to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied time represents a larger duration than that
         stored. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" returncomment="True if the supplied time represents a smaller duration than that
         stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this and the supplied duration of time.</description>
					<attribute name="@param">
						<description>arg
            The duration of time to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied time represents a smaller duration than that
         stored. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="negative" returncomment="True if this duration represents a backward passage through time.
         False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Retrieves whether this duration represents a backward passage through
 time</description>
					<attribute name="@return">
						<description>True if this duration represents a backward passage through time.
         False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="value" returncomment="Number of seconds making up this duration of time" fulltype="double" type="double">
				<comment>
					<description>Retrieves the duration of time stored as the number of seconds within it</description>
					<attribute name="@return">
						<description>Number of seconds making up this duration of time</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the time duration extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable time duration
 from the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which to extract</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the time duration extracted</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which to extract" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method static="true" visibility="public" name="parseDTDuration" returncomment="New XSDayTimeDuration representing the duration of time supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Creates a new XSDayTimeDuration by parsing the supplied String
 represented duration of time</description>
					<attribute name="@param">
						<description>str
            String represented duration of time</description>
					</attribute>
					<attribute name="@return">
						<description>New XSDayTimeDuration representing the duration of time supplied</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="String represented duration of time" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="clone" fulltype="java.lang.Object" type="Object">
				<exceptions>
					<exception fulltype="java.lang.CloneNotSupportedException" type="CloneNotSupportedException" />
				</exceptions>
			</method>
			<method visibility="public" name="year" returncomment="Number of years within the duration of time stored" fulltype="int" type="int">
				<comment>
					<description>Retrieves the number of years within the duration of time stored</description>
					<attribute name="@return">
						<description>Number of years within the duration of time stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="month" returncomment="Number of months within the duration of time stored" fulltype="int" type="int">
				<comment>
					<description>Retrieves the number of months within the duration of time stored</description>
					<attribute name="@return">
						<description>Number of months within the duration of time stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="protected" name="isCastable" fulltype="boolean" type="boolean">
				<params>
					<param name="aat" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyAtomicType" type="AnyAtomicType" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSNCName" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNCName" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSEntity" type="XSEntity">
		<comment>
			<description>Built in Data Type for xs:Entity</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
			<attribute name="@since">
				<description>1.1</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSEntity" />
			<constructor visibility="public" name="XSEntity">
				<params>
					<param name="value" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" fulltype="java.lang.String" type="String" />
			<method visibility="public" name="type_name" fulltype="java.lang.String" type="String" />
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the ENTITY supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the ENTITY within
 the supplied ResultSequence.  The specification says that this
 is relaxed from the XML Schema requirement.  The ENTITY does
 not have to be located or expanded during construction and
 evaluation for casting.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which to extract the ENTITY</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the ENTITY supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which to extract the ENTITY" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NumericType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSFloat" type="XSFloat">
		<comment>
			<description>A representation of the Float datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSFloat">
				<comment>
					<description>Initiates a representation of the supplied number</description>
					<attribute name="@param">
						<description>x
            The number to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="The number to be stored" fulltype="float" type="float" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSFloat">
				<comment>
					<description>Initiates a representation of 0</description>
				</comment>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:float&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:float&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;float&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;float&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the stored number" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the stored number</description>
					<attribute name="@return">
						<description>String representation of the stored number</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="nan" returncomment="True is this datatype represents NaN. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether this datatype represents NaN</description>
					<attribute name="@return">
						<description>True is this datatype represents NaN. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="infinite" returncomment="True is this datatype represents infinity. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether this datatype represents negative or positive infinity</description>
					<attribute name="@return">
						<description>True is this datatype represents infinity. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="zero" returncomment="True if this datatype represents 0. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether this datatype represents 0</description>
					<attribute name="@return">
						<description>True if this datatype represents 0. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="negativeZero" fulltype="boolean" type="boolean" />
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the float supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the retrievable float in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which to extract the float</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the float supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which to extract the float" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="float_value" returncomment="The actual float value stored" fulltype="float" type="float">
				<comment>
					<description>Retrieves the actual float value stored</description>
					<attribute name="@return">
						<description>The actual float value stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two representations are of the same number. False
         otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this number and the supplied representation.</description>
					<attribute name="@param">
						<description>aa
            The datatype to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two representations are of the same number. False
         otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="aa" comment="The datatype to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" returncomment="True if the supplied representation is a smaller number than the
         one stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this number and the supplied representation.</description>
					<attribute name="@param">
						<description>arg
            The datatype to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied representation is a smaller number than the
         one stored. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The datatype to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" returncomment="True if the supplied representation is a greater number than the
         one stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this number and the supplied representation.</description>
					<attribute name="@param">
						<description>arg
            The datatype to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied representation is a greater number than the
         one stored. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The datatype to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="plus" returncomment="A XSFloat consisting of the result of the mathematical addition." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical addition operator between this XSFloat and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform an addition with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSFloat consisting of the result of the mathematical addition.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform an addition with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="minus" returncomment="A XSFloat consisting of the result of the mathematical
         subtraction." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical subtraction operator between this XSFloat and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a subtraction with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSFloat consisting of the result of the mathematical
         subtraction.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a subtraction with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="times" returncomment="A XSFloat consisting of the result of the mathematical
         multiplication." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical multiplication operator between this XSFloat and the
 supplied ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a multiplication with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSFloat consisting of the result of the mathematical
         multiplication.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a multiplication with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="div" returncomment="A XSFloat consisting of the result of the mathematical division." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical division operator between this XSFloat and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a division with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSFloat consisting of the result of the mathematical division.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a division with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="idiv" returncomment="A XSInteger consisting of the result of the mathematical integer
         division." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical integer division operator between this XSFloat and the
 supplied ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform an integer division with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSInteger consisting of the result of the mathematical integer
         division.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform an integer division with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="mod" returncomment="A XSFloat consisting of the result of the mathematical modulus." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical modulus operator between this XSFloat and the supplied
 ResultSequence. Due to no numeric type promotion or conversion, the
 ResultSequence must be of type XSFloat.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a modulus with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSFloat consisting of the result of the mathematical modulus.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a modulus with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="unary_minus" returncomment="A XSFloat representing the negation of the number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Negates the number stored</description>
					<attribute name="@return">
						<description>A XSFloat representing the negation of the number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="abs" returncomment="A XSFloat representing the absolute value of the number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Absolutes the number stored</description>
					<attribute name="@return">
						<description>A XSFloat representing the absolute value of the number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="ceiling" returncomment="A XSFloat representing the smallest integer greater than the
         number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the smallest integer greater than the number stored</description>
					<attribute name="@return">
						<description>A XSFloat representing the smallest integer greater than the
         number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="floor" returncomment="A XSFloat representing the largest integer smaller than the
         number stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the largest integer smaller than the number stored</description>
					<attribute name="@return">
						<description>A XSFloat representing the largest integer smaller than the
         number stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="round" returncomment="A XSFloat representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored.</description>
					<attribute name="@return">
						<description>A XSFloat representing the closest long of the number stored.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="round_half_to_even" returncomment="A XSFloat representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored.</description>
					<attribute name="@return">
						<description>A XSFloat representing the closest long of the number stored.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="round_half_to_even" returncomment="A XSFloat representing the closest long of the number stored." fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Returns the closest integer of the number stored with the specified precision.</description>
					<attribute name="@param">
						<description>precision An integer precision</description>
					</attribute>
					<attribute name="@return">
						<description>A XSFloat representing the closest long of the number stored.</description>
					</attribute>
				</comment>
				<params>
					<param name="precision" comment="An integer precision" fulltype="int" type="int" />
				</params>
			</method>
			<method visibility="protected" name="convertArg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CalendarType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CalendarType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSGDay" type="XSGDay">
		<comment>
			<description>A representation of the Day datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSGDay">
				<comment>
					<description>Initializes a representation of the supplied day</description>
					<attribute name="@param">
						<description>cal
            Calendar representation of the day to be stored</description>
					</attribute>
					<attribute name="@param">
						<description>tz
            Timezone associated with this day</description>
					</attribute>
				</comment>
				<params>
					<param name="cal" comment="Calendar representation of the day to be stored" fulltype="java.util.Calendar" type="Calendar" />
					<param name="tz" comment="Timezone associated with this day" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSGDay">
				<comment>
					<description>Initialises a representation of the current day</description>
				</comment>
			</constructor>
			<method visibility="public" name="type_name" returncomment="&quot;gDay&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;gDay&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="parse_gDay" returncomment="The XSGDay representation of the supplied date" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSGDay" type="XSGDay">
				<comment>
					<description>Parses a String representation of a day and constructs a new XSGDay
 representation of it.</description>
					<attribute name="@param">
						<description>str
            The String representation of the day (and optional timezone)</description>
					</attribute>
					<attribute name="@return">
						<description>The XSGDay representation of the supplied date</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="The String representation of the day (and optional timezone)" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the supplied day" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable gDay in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the gDay is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the supplied day</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the gDay is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="day" returncomment="The actual day as an integer" fulltype="int" type="int">
				<comment>
					<description>Retrieves the actual day as an integer</description>
					<attribute name="@return">
						<description>The actual day as an integer</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="timezoned" returncomment="True if a timezone was specified. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether a timezone was specified at creation</description>
					<attribute name="@return">
						<description>True if a timezone was specified. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the stored day" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the stored day</description>
					<attribute name="@return">
						<description>String representation of the stored day</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:gDay&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:gDay&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="calendar" returncomment="Calendar representation of the day stored" fulltype="java.util.Calendar" type="Calendar">
				<comment>
					<description>Retrieves the Calendar representation of the day stored</description>
					<attribute name="@return">
						<description>Calendar representation of the day stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two representations are of the same day. False
         otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied representation. This
 representation must be of type XSGDay</description>
					<attribute name="@param">
						<description>arg
            The XSGDay to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two representations are of the same day. False
         otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSGDay to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="tz" returncomment="the timezone associated with the date stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Retrieves the timezone associated with the date stored</description>
					<attribute name="@return">
						<description>the timezone associated with the date stored</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CalendarType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CalendarType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSGMonth" type="XSGMonth">
		<comment>
			<description>A representation of the gMonth datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSGMonth">
				<comment>
					<description>Initializes a representation of the supplied month</description>
					<attribute name="@param">
						<description>cal
            Calendar representation of the month to be stored</description>
					</attribute>
					<attribute name="@param">
						<description>tz
            Timezone associated with this month</description>
					</attribute>
				</comment>
				<params>
					<param name="cal" comment="Calendar representation of the month to be stored" fulltype="java.util.Calendar" type="Calendar" />
					<param name="tz" comment="Timezone associated with this month" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSGMonth">
				<comment>
					<description>Initialises a representation of the current month</description>
				</comment>
			</constructor>
			<method visibility="public" name="type_name" returncomment="&quot;gMonth&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;gMonth&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="parse_gMonth" returncomment="The XSGMonth representation of the supplied date" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSGMonth" type="XSGMonth">
				<comment>
					<description>Parses a String representation of a month and constructs a new XSGMonth
 representation of it.</description>
					<attribute name="@param">
						<description>str
            The String representation of the month (and optional timezone)</description>
					</attribute>
					<attribute name="@return">
						<description>The XSGMonth representation of the supplied date</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="The String representation of the month (and optional timezone)" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the supplied month" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable gMonth in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the gMonth is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the supplied month</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the gMonth is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="month" returncomment="The actual month as an integer" fulltype="int" type="int">
				<comment>
					<description>Retrieves the actual month as an integer</description>
					<attribute name="@return">
						<description>The actual month as an integer</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="timezoned" returncomment="True if a timezone was specified. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether a timezone was specified at creation</description>
					<attribute name="@return">
						<description>True if a timezone was specified. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the stored month" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the stored month</description>
					<attribute name="@return">
						<description>String representation of the stored month</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:gMonth&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:gMonth&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="calendar" returncomment="Calendar representation of the month stored" fulltype="java.util.Calendar" type="Calendar">
				<comment>
					<description>Retrieves the Calendar representation of the month stored</description>
					<attribute name="@return">
						<description>Calendar representation of the month stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two representations are of the same month. False
         otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied representation. This
 representation must be of type XSGMonth</description>
					<attribute name="@param">
						<description>arg
            The XSGMonth to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two representations are of the same month. False
         otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSGMonth to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="tz" returncomment="the timezone associated with the date stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Retrieves the timezone associated with the date stored</description>
					<attribute name="@return">
						<description>the timezone associated with the date stored</description>
					</attribute>
					<attribute name="@since">
						<description>1.1</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CalendarType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CalendarType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSGMonthDay" type="XSGMonthDay">
		<comment>
			<description>A representation of the MonthDay datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSGMonthDay">
				<comment>
					<description>Initialises a representation of the supplied month and day</description>
					<attribute name="@param">
						<description>cal
            Calendar representation of the month and day to be stored</description>
					</attribute>
					<attribute name="@param">
						<description>tz
            Timezone associated with this month and day</description>
					</attribute>
				</comment>
				<params>
					<param name="cal" comment="Calendar representation of the month and day to be stored" fulltype="java.util.Calendar" type="Calendar" />
					<param name="tz" comment="Timezone associated with this month and day" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSGMonthDay">
				<comment>
					<description>Initialises a representation of the current month and day</description>
				</comment>
			</constructor>
			<method visibility="public" name="type_name" returncomment="&quot;gMonthDay&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;gMonthDay&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="parse_gMonthDay" returncomment="The XSGMonthDay representation of the supplied date" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSGMonthDay" type="XSGMonthDay">
				<comment>
					<description>Parses a String representation of a month and day and constructs a new
 XSGMonthDay representation of it.</description>
					<attribute name="@param">
						<description>str
            The String representation of the month and day (and optional
            timezone)</description>
					</attribute>
					<attribute name="@return">
						<description>The XSGMonthDay representation of the supplied date</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="The String representation of the month and day (and optional
            timezone)" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the supplied month and day" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable gMonthDay in
 the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the gMonthDay is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the supplied month and day</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the gMonthDay is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="month" returncomment="The actual month as an integer" fulltype="int" type="int">
				<comment>
					<description>Retrieves the actual month as an integer</description>
					<attribute name="@return">
						<description>The actual month as an integer</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="day" returncomment="The actual day as an integer" fulltype="int" type="int">
				<comment>
					<description>Retrieves the actual day as an integer</description>
					<attribute name="@return">
						<description>The actual day as an integer</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="timezoned" returncomment="True if a timezone was specified. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether a timezone was specified at creation</description>
					<attribute name="@return">
						<description>True if a timezone was specified. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the stored month and day" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the stored month and day</description>
					<attribute name="@return">
						<description>String representation of the stored month and day</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:gMonthDay&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:gMonthDay&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="calendar" returncomment="Calendar representation of the month and day stored" fulltype="java.util.Calendar" type="Calendar">
				<comment>
					<description>Retrieves the Calendar representation of the month and day stored</description>
					<attribute name="@return">
						<description>Calendar representation of the month and day stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two representations are of the same month and day.
         False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied representation. This
 representation must be of type XSGMonthDay</description>
					<attribute name="@param">
						<description>arg
            The XSGMonthDay to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two representations are of the same month and day.
         False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSGMonthDay to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="tz" returncomment="the timezone associated with the date stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Retrieves the timezone associated with the date stored</description>
					<attribute name="@return">
						<description>the timezone associated with the date stored</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CalendarType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CalendarType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSGYear" type="XSGYear">
		<comment>
			<description>A representation of the gMonth datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSGYear">
				<comment>
					<description>Initialises a representation of the supplied month</description>
					<attribute name="@param">
						<description>cal
            Calendar representation of the month to be stored</description>
					</attribute>
					<attribute name="@param">
						<description>tz
            Timezone associated with this month</description>
					</attribute>
				</comment>
				<params>
					<param name="cal" comment="Calendar representation of the month to be stored" fulltype="java.util.Calendar" type="Calendar" />
					<param name="tz" comment="Timezone associated with this month" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSGYear">
				<comment>
					<description>Initialises a representation of the current year</description>
				</comment>
			</constructor>
			<method visibility="public" name="type_name" returncomment="&quot;gYear&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;gYear&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="parse_gYear" returncomment="The XSGYear representation of the supplied date" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSGYear" type="XSGYear">
				<comment>
					<description>Parses a String representation of a year and constructs a new XSGYear
 representation of it.</description>
					<attribute name="@param">
						<description>str
            The String representation of the year (and optional timezone)</description>
					</attribute>
					<attribute name="@return">
						<description>The XSGYear representation of the supplied date</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="The String representation of the year (and optional timezone)" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the supplied year" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable gYear in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the gYear is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the supplied year</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the gYear is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="year" returncomment="The actual year as an integer" fulltype="int" type="int">
				<comment>
					<description>Retrieves the actual year as an integer</description>
					<attribute name="@return">
						<description>The actual year as an integer</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="timezoned" returncomment="True if a timezone was specified. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether a timezone was specified at creation</description>
					<attribute name="@return">
						<description>True if a timezone was specified. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the stored year" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the stored year</description>
					<attribute name="@return">
						<description>String representation of the stored year</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:gYear&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:gYear&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="calendar" returncomment="Calendar representation of the year stored" fulltype="java.util.Calendar" type="Calendar">
				<comment>
					<description>Retrieves the Calendar representation of the year stored</description>
					<attribute name="@return">
						<description>Calendar representation of the year stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two representations are of the same year. False
         otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied representation. This
 representation must be of type XSGYear</description>
					<attribute name="@param">
						<description>arg
            The XSGYear to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two representations are of the same year. False
         otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSGYear to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="tz" returncomment="the timezone associated with the date stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Retrieves the timezone associated with the date stored</description>
					<attribute name="@return">
						<description>the timezone associated with the date stored</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CalendarType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CalendarType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSGYearMonth" type="XSGYearMonth">
		<comment>
			<description>A representation of the YearMonth datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSGYearMonth">
				<comment>
					<description>Initialises a representation of the supplied year and month</description>
					<attribute name="@param">
						<description>cal
            Calendar representation of the year and month to be stored</description>
					</attribute>
					<attribute name="@param">
						<description>tz
            Timezone associated with this year and month</description>
					</attribute>
				</comment>
				<params>
					<param name="cal" comment="Calendar representation of the year and month to be stored" fulltype="java.util.Calendar" type="Calendar" />
					<param name="tz" comment="Timezone associated with this year and month" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSGYearMonth">
				<comment>
					<description>Initialises a representation of the current year and month</description>
				</comment>
			</constructor>
			<method visibility="public" name="type_name" returncomment="&quot;gYearMonth&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;gYearMonth&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="parse_gYearMonth" returncomment="The XSGYearMonth representation of the supplied date" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSGYearMonth" type="XSGYearMonth">
				<comment>
					<description>Parses a String representation of a year and month and constructs a new
 XSGYearMonth representation of it.</description>
					<attribute name="@param">
						<description>str
            The String representation of the year and month (and optional
            timezone)</description>
					</attribute>
					<attribute name="@return">
						<description>The XSGYearMonth representation of the supplied date</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="The String representation of the year and month (and optional
            timezone)" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the supplied year and month" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable gYearMonth in
 the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the gYearMonth is to be
            extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the supplied year and month</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the gYearMonth is to be
            extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="year" returncomment="The actual year as an integer" fulltype="int" type="int">
				<comment>
					<description>Retrieves the actual year as an integer</description>
					<attribute name="@return">
						<description>The actual year as an integer</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="month" returncomment="The actual month as an integer" fulltype="int" type="int">
				<comment>
					<description>Retrieves the actual month as an integer</description>
					<attribute name="@return">
						<description>The actual month as an integer</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="timezoned" returncomment="True if a timezone was specified. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether a timezone was specified at creation</description>
					<attribute name="@return">
						<description>True if a timezone was specified. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the stored year and month" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the stored year and month</description>
					<attribute name="@return">
						<description>String representation of the stored year and month</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:gYearMonth&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:gYearMonth&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="calendar" returncomment="Calendar representation of the year and month stored" fulltype="java.util.Calendar" type="Calendar">
				<comment>
					<description>Retrieves the Calendar representation of the year and month stored</description>
					<attribute name="@return">
						<description>Calendar representation of the year and month stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two representations are of the same year and month.
         False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied representation. This
 representation must be of type XSGYearMonth</description>
					<attribute name="@param">
						<description>arg
            The XSGYearMonth to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two representations are of the same year and month.
         False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSGYearMonth to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="tz" returncomment="the timezone associated with the date stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Retrieves the timezone associated with the date stored</description>
					<attribute name="@return">
						<description>the timezone associated with the date stored</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSHexBinary" type="XSHexBinary">
		<comment>
			<description>A representation of the xs:hexBinary datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSHexBinary">
				<comment>
					<description>Initialises using the supplied String</description>
					<attribute name="@param">
						<description>x
            The String to initialise to</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="The String to initialise to" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSHexBinary">
				<comment>
					<description>Initialises to null</description>
				</comment>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:hexBinary&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:hexBinary&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;hexBinary&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;hexBinary&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="The hexBinary stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the base64Binary stored. This method is
 functionally identical to value()</description>
					<attribute name="@return">
						<description>The hexBinary stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="value" returncomment="The hexBinary stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the hexBinary stored. This method is
 functionally identical to string_value()</description>
					<attribute name="@return">
						<description>The hexBinary stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence representing hexBinary value" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the hexBinary value</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which to construct hexBinary value</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence representing hexBinary value</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which to construct hexBinary value" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two representation are same. False otherwise." fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied representation which
 must be of type hexBinary</description>
					<attribute name="@param">
						<description>arg
            The representation to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two representation are same. False otherwise.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The representation to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSNCName" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNCName" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSID" type="XSID">
		<methods>
			<constructor visibility="public" name="XSID">
				<params>
					<param name="x" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSID" />
			<method visibility="public" name="string_type" fulltype="java.lang.String" type="String" />
			<method visibility="public" name="type_name" fulltype="java.lang.String" type="String" />
			<method visibility="public" name="constructor" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSNCName" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNCName" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSIDREF" type="XSIDREF">
		<methods>
			<constructor visibility="public" name="XSIDREF">
				<params>
					<param name="x" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSIDREF" />
			<method visibility="public" name="string_type" fulltype="java.lang.String" type="String" />
			<method visibility="public" name="type_name" fulltype="java.lang.String" type="String" />
			<method visibility="public" name="constructor" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSLong" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSLong" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSInt" type="XSInt">
		<methods>
			<constructor visibility="public" name="XSInt">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSInt">
				<comment>
					<description>Initializes a representation of the supplied int value</description>
					<attribute name="@param">
						<description>x
            Int to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Int to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:int&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:int&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;int&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;int&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;int&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable &apos;int&apos; in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the int is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;int&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the int is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSDecimal" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDecimal" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSInteger" type="XSInteger">
		<comment>
			<description>A representation of the Integer datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSInteger">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSInteger">
				<comment>
					<description>Initializes a representation of the supplied integer</description>
					<attribute name="@param">
						<description>x
            Integer to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Integer to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:integer&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:integer&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;integer&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;integer&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the integer stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the integer stored</description>
					<attribute name="@return">
						<description>String representation of the integer stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="zero" returncomment="True is the integer represented is 0. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check whether the integer represented is 0</description>
					<attribute name="@return">
						<description>True is the integer represented is 0. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the integer supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable integer in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the integer is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the integer supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the integer is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="int_value" returncomment="The actual integer value stored" fulltype="java.math.BigInteger" type="BigInteger">
				<comment>
					<description>Retrieves the actual integer value stored</description>
					<attribute name="@return">
						<description>The actual integer value stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="set_int" fulltype="void" type="void">
				<comment>
					<description>Sets the integer stored to that supplied</description>
					<attribute name="@param">
						<description>x
            Integer to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Integer to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</method>
			<method visibility="public" name="plus" returncomment="A XSInteger consisting of the result of the mathematical
         addition." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical addition operator between this XSInteger and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform an addition with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSInteger consisting of the result of the mathematical
         addition.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform an addition with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="minus" returncomment="A XSInteger consisting of the result of the mathematical
         subtraction." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical subtraction operator between this XSInteger and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a subtraction with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSInteger consisting of the result of the mathematical
         subtraction.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a subtraction with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="times" returncomment="A XSInteger consisting of the result of the mathematical
         multiplication." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical multiplication operator between this XSInteger and the
 supplied ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a multiplication with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSInteger consisting of the result of the mathematical
         multiplication.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a multiplication with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="mod" returncomment="A XSInteger consisting of the result of the mathematical modulus." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical modulus operator between this XSInteger and the supplied
 ResultSequence.</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence to perform a modulus with</description>
					</attribute>
					<attribute name="@return">
						<description>A XSInteger consisting of the result of the mathematical modulus.</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence to perform a modulus with" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="unary_minus" returncomment="New XSInteger representing the negation of the integer stored" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Negates the integer stored</description>
					<attribute name="@return">
						<description>New XSInteger representing the negation of the integer stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="abs" returncomment="New XSInteger representing the absolute of the integer stored" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.NumericType" type="NumericType">
				<comment>
					<description>Absolutes the integer stored</description>
					<attribute name="@return">
						<description>New XSInteger representing the absolute of the integer stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="gt" fulltype="boolean" type="boolean">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="protected" name="convertArg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" fulltype="boolean" type="boolean">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="div" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSInteger" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSInteger" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSLong" type="XSLong">
		<methods>
			<constructor visibility="public" name="XSLong">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSLong">
				<comment>
					<description>Initializes a representation of the supplied long value</description>
					<attribute name="@param">
						<description>x
            Long to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Long to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:long&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:long&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;long&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;long&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;long&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable long in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the long is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;long&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the long is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSString" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSString" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNCName" type="XSNCName">
		<comment>
			<description>A representation of the NCName datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSNCName">
				<comment>
					<description>Initialises using the supplied String</description>
					<attribute name="@param">
						<description>x
            String to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="String to be stored" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSNCName">
				<comment>
					<description>Initialises to null</description>
				</comment>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:NCName&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:NCName&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;NCName&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;NCName&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the NCName supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable NCName within
 the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which to extract the NCName</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the NCName supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which to extract the NCName" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSNonPositiveInteger" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNonPositiveInteger" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNegativeInteger" type="XSNegativeInteger">
		<methods>
			<constructor visibility="public" name="XSNegativeInteger">
				<comment>
					<description>Initializes a representation of -1</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSNegativeInteger">
				<comment>
					<description>Initializes a representation of the supplied negativeInteger value</description>
					<attribute name="@param">
						<description>x
            negativeInteger to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="negativeInteger to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:negativeInteger&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:negativeInteger&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;negativeInteger&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;negativeInteger&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;negativeInteger&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable negativeInteger
 in the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the negativeInteger is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;negativeInteger&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the negativeInteger is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSInteger" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSInteger" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNonNegativeInteger" type="XSNonNegativeInteger">
		<methods>
			<constructor visibility="public" name="XSNonNegativeInteger">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSNonNegativeInteger">
				<comment>
					<description>Initializes a representation of the supplied nonNegativeInteger value</description>
					<attribute name="@param">
						<description>x
            nonNegativeInteger to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="nonNegativeInteger to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:nonNegativeInteger&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:nonNegativeInteger&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;nonNegativeInteger&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;nonNegativeInteger&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;nonNegativeInteger&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable nonNegativeInteger
 in the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the nonNegativeInteger is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;nonNegativeInteger&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the nonNegativeInteger is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSInteger" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSInteger" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNonPositiveInteger" type="XSNonPositiveInteger">
		<methods>
			<constructor visibility="public" name="XSNonPositiveInteger">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSNonPositiveInteger">
				<comment>
					<description>Initializes a representation of the supplied nonPositiveInteger value</description>
					<attribute name="@param">
						<description>x
            nonPositiveInteger to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="nonPositiveInteger to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:nonPositiveInteger&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:nonPositiveInteger&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;nonPositiveInteger&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;nonPositiveInteger&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;nonPositiveInteger&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable nonPositiveInteger
 in the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the nonPositiveInteger is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;nonPositiveInteger&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the nonPositiveInteger is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNotation" type="XSNotation">
		<methods>
			<constructor visibility="public" name="XSNotation" />
			<method visibility="public" name="string_type" fulltype="java.lang.String" type="String" />
			<method visibility="public" name="string_value" fulltype="java.lang.String" type="String" />
			<method visibility="public" name="constructor" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="type_name" fulltype="java.lang.String" type="String" />
		</methods>
	</jelclass>
	<jelclass superclass="XSNonNegativeInteger" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNonNegativeInteger" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSPositiveInteger" type="XSPositiveInteger">
		<methods>
			<constructor visibility="public" name="XSPositiveInteger">
				<comment>
					<description>Initializes a representation of 1</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSPositiveInteger">
				<comment>
					<description>Initializes a representation of the supplied positiveInteger value</description>
					<attribute name="@param">
						<description>x
            positiveInteger to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="positiveInteger to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:positiveInteger&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:positiveInteger&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;positiveInteger&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;positiveInteger&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;positiveInteger&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable positiveInteger
 in the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the positiveInteger is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;positiveInteger&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the positiveInteger is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSInt" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSInt" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSShort" type="XSShort">
		<methods>
			<constructor visibility="public" name="XSShort">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSShort">
				<comment>
					<description>Initializes a representation of the supplied short value</description>
					<attribute name="@param">
						<description>x
            Short to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="Short to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:short&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:short&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;short&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;short&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;short&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable &apos;short&apos; in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the short is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;short&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the short is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSString" type="XSString">
		<comment>
			<description>A representation of the String datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSString">
				<comment>
					<description>Initialises using the supplied String</description>
					<attribute name="@param">
						<description>x
            The String to initialise to</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="The String to initialise to" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSString">
				<comment>
					<description>Initialises to null</description>
				</comment>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:string&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:string&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;string&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;string&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="The String stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the string stored. This method is
 functionally identical to value()</description>
					<attribute name="@return">
						<description>The String stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="value" returncomment="The String stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the string stored. This method is
 functionally identical to string_value()</description>
					<attribute name="@return">
						<description>The String stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the supplied String" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable String in the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which to extract the String</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the supplied String</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which to extract the String" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="eq" returncomment="True if the two representation are of the same String. False
         otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied representation which
 must be of type String</description>
					<attribute name="@param">
						<description>arg
            The representation to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the two representation are of the same String. False
         otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The representation to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" returncomment="True if this String is lexographically greater than that
         supplied. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this and the supplied representation which must be of
 type String</description>
					<attribute name="@param">
						<description>arg
            The representation to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if this String is lexographically greater than that
         supplied. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The representation to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" returncomment="True if this String is lexographically less than that supplied.
         False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this and the supplied representation which must be of
 type String</description>
					<attribute name="@param">
						<description>arg
            The representation to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if this String is lexographically less than that supplied.
         False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The representation to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CalendarType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CalendarType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSTime" type="XSTime">
		<implements>
			<interface fulltype="java.lang.Cloneable" type="Cloneable" />
		</implements>
		<comment>
			<description>A representation of the Time datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSTime">
				<comment>
					<description>Initialises to the supplied time and timezone</description>
					<attribute name="@param">
						<description>cal
            Calendar representation of the time to be stored</description>
					</attribute>
					<attribute name="@param">
						<description>tz
            The timezone (possibly null) associated with this time</description>
					</attribute>
				</comment>
				<params>
					<param name="cal" comment="Calendar representation of the time to be stored" fulltype="java.util.Calendar" type="Calendar" />
					<param name="tz" comment="The timezone (possibly null) associated with this time" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSTime">
				<comment>
					<description>Initialises to the current time</description>
				</comment>
			</constructor>
			<method visibility="public" name="clone" returncomment="New XSTime representing the copy of the time and timezone" fulltype="java.lang.Object" type="Object">
				<comment>
					<description>Creates a new copy of the time (and timezone) stored</description>
					<attribute name="@return">
						<description>New XSTime representing the copy of the time and timezone</description>
					</attribute>
					<attribute name="@throws">
						<description>CloneNotSupportedException</description>
					</attribute>
				</comment>
				<exceptions>
					<exception comment="" fulltype="java.lang.CloneNotSupportedException" type="CloneNotSupportedException" />
				</exceptions>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;time&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;time&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method static="true" visibility="public" name="parse_time" returncomment="New XSTime representing the supplied time" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSTime" type="XSTime">
				<comment>
					<description>Creates a new XSTime representing the String represented supplied time</description>
					<attribute name="@param">
						<description>str
            String represented time and timezone to be stored</description>
					</attribute>
					<attribute name="@return">
						<description>New XSTime representing the supplied time</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="String represented time and timezone to be stored" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the supplied time" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable time from the
 supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which to extract the time</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the supplied time</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which to extract the time" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="hour" returncomment="The hour stored" fulltype="int" type="int">
				<comment>
					<description>Retrieves the hour stored as an integer</description>
					<attribute name="@return">
						<description>The hour stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="minute" returncomment="The minute stored" fulltype="int" type="int">
				<comment>
					<description>Retrieves the minute stored as an integer</description>
					<attribute name="@return">
						<description>The minute stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="second" returncomment="The second stored" fulltype="double" type="double">
				<comment>
					<description>Retrieves the seconds stored as an integer</description>
					<attribute name="@return">
						<description>The second stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="timezoned" returncomment="True if the time has a timezone associated. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Check for whether the time stored has a timezone associated with it</description>
					<attribute name="@return">
						<description>True if the time has a timezone associated. False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the time stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the time stored</description>
					<attribute name="@return">
						<description>String representation of the time stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:time&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:time&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="calendar" returncomment="Calendar representation of the time stored" fulltype="java.util.Calendar" type="Calendar">
				<comment>
					<description>Retrieves a Calendar representation of time stored</description>
					<attribute name="@return">
						<description>Calendar representation of the time stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="tz" returncomment="The duration of time between the time stored and the actual time
         after the timezone is taken into account" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Retrieves the timezone associated with the time stored as a duration of
 time</description>
					<attribute name="@return">
						<description>The duration of time between the time stored and the actual time
         after the timezone is taken into account</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="value" returncomment="time stored in milliseconds since the epoch" fulltype="double" type="double">
				<comment>
					<description>Retrieves the time in milliseconds since the epoch</description>
					<attribute name="@return">
						<description>time stored in milliseconds since the epoch</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if both XSTime&apos;s represent the same time. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied XSTime representation</description>
					<attribute name="@param">
						<description>arg
            The XSTime to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if both XSTime&apos;s represent the same time. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSTime to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" returncomment="True if the supplied time represnts a point in time after that
         represented by the time stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this and the supplied XSTime representation</description>
					<attribute name="@param">
						<description>arg
            The XSTime to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied time represnts a point in time after that
         represented by the time stored. False otherwise</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSTime to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" returncomment="True if the supplied time represnts a point in time before that
         represented by the time stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this and the supplied XSTime representation</description>
					<attribute name="@param">
						<description>arg
            The XSTime to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied time represnts a point in time before that
         represented by the time stored. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The XSTime to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="minus" returncomment="A ResultSequence representing the result of the subtraction" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical subtraction between this time stored and the supplied
 representation. This supplied representation must be of either type
 XSTime (in which case the result is the duration of time between these
 two times) or a XDTDayTimeDuration (in which case the result is the time
 when this duration is subtracted from the time stored).</description>
					<attribute name="@param">
						<description>arg
            The representation to subtract (either XSTim or
            XDTDayTimeDuration)</description>
					</attribute>
					<attribute name="@return">
						<description>A ResultSequence representing the result of the subtraction</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The representation to subtract (either XSTim or
            XDTDayTimeDuration)" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="plus" returncomment="A XSTime representing the result of this addition." fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical addition between this time stored and the supplied time
 duration.</description>
					<attribute name="@param">
						<description>arg
            A XDTDayTimeDuration representation of the duration of time to
            add</description>
					</attribute>
					<attribute name="@return">
						<description>A XSTime representing the result of this addition.</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="A XDTDayTimeDuration representation of the duration of time to
            add" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSUnsignedShort" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSUnsignedShort" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSUnsignedByte" type="XSUnsignedByte">
		<methods>
			<constructor visibility="public" name="XSUnsignedByte">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSUnsignedByte">
				<comment>
					<description>Initializes a representation of the supplied unsignedByte value</description>
					<attribute name="@param">
						<description>x
            unsignedByte to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="unsignedByte to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:unsignedByte&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:unsignedByte&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;unsignedByte&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;unsignedByte&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;unsignedByte&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable unsignedByte
 in the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the unsignedByte is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;unsignedByte&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the unsignedByte is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSUnsignedLong" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSUnsignedLong" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSUnsignedInt" type="XSUnsignedInt">
		<methods>
			<constructor visibility="public" name="XSUnsignedInt">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSUnsignedInt">
				<comment>
					<description>Initializes a representation of the supplied unsignedInt value</description>
					<attribute name="@param">
						<description>x
            unsignedInt to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="unsignedInt to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:unsignedInt&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:unsignedInt&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;unsignedInt&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;unsignedInt&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;unsignedInt&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable unsignedInt
 in the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the unsignedInt is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;unsignedInt&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the unsignedInt is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSNonNegativeInteger" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSNonNegativeInteger" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSUnsignedLong" type="XSUnsignedLong">
		<methods>
			<constructor visibility="public" name="XSUnsignedLong">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSUnsignedLong">
				<comment>
					<description>Initializes a representation of the supplied unsignedLong value</description>
					<attribute name="@param">
						<description>x
            unsignedLong to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="unsignedLong to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:unsignedLong&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:unsignedLong&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;unsignedLong&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;unsignedLong&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;unsignedLong&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable unsignedLong
 in the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the unsignedLong is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;unsignedLong&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the unsignedLong is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSUnsignedInt" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSUnsignedInt" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSUnsignedShort" type="XSUnsignedShort">
		<methods>
			<constructor visibility="public" name="XSUnsignedShort">
				<comment>
					<description>Initializes a representation of 0</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="XSUnsignedShort">
				<comment>
					<description>Initializes a representation of the supplied unsignedShort value</description>
					<attribute name="@param">
						<description>x
            unsignedShort to be stored</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="unsignedShort to be stored" fulltype="java.math.BigInteger" type="BigInteger" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:unsignedShort&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:unsignedShort&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;unsignedShort&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;unsignedShort&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the &apos;unsignedShort&apos; supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable unsignedShort
 in the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which the unsignedShort is to be extracted</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the &apos;unsignedShort&apos; supplied</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which the unsignedShort is to be extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="CtrType" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.CtrType" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSUntypedAtomic" type="XSUntypedAtomic">
		<comment>
			<description>A representation of the UntypedAtomic datatype which is used to represent
 untyped atomic nodes.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSUntypedAtomic" />
			<constructor visibility="public" name="XSUntypedAtomic">
				<comment>
					<description>Initialises using the supplied String</description>
					<attribute name="@param">
						<description>x
            The String representation of the value of the untyped atomic
            node</description>
					</attribute>
				</comment>
				<params>
					<param name="x" comment="The String representation of the value of the untyped atomic
            node" fulltype="java.lang.String" type="String" />
				</params>
			</constructor>
			<method visibility="public" name="string_type" returncomment="&quot;xs:untypedAtomic&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:untypedAtomic&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the value of this untyped atomic node" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the value of this untyped atomic
 node</description>
					<attribute name="@return">
						<description>String representation of the value of this untyped atomic node</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<params>
					<param name="arg" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="type_name" fulltype="java.lang.String" type="String" />
		</methods>
	</jelclass>
	<jelclass superclass="XSDuration" visibility="public" package="org.eclipse.wst.xml.xpath2.processor.internal.types" superclassfulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSYearMonthDuration" type="XSYearMonthDuration">
		<comment>
			<description>A representation of the YearMonthDuration datatype</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSYearMonthDuration">
				<comment>
					<description>Initialises using the supplied parameters. If the number of months
 supplied is more than 12, the number of years is adjusted accordingly.</description>
					<attribute name="@param">
						<description>year
            Number of years in this duration of time</description>
					</attribute>
					<attribute name="@param">
						<description>month
            Number of months in this duration of time</description>
					</attribute>
					<attribute name="@param">
						<description>negative
            True if this duration of time represents a backwards passage
            through time. False otherwise</description>
					</attribute>
				</comment>
				<params>
					<param name="year" comment="Number of years in this duration of time" fulltype="int" type="int" />
					<param name="month" comment="Number of months in this duration of time" fulltype="int" type="int" />
					<param name="negative" comment="True if this duration of time represents a backwards passage
            through time. False otherwise" fulltype="boolean" type="boolean" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSYearMonthDuration">
				<comment>
					<description>Initialises to the given number of months</description>
					<attribute name="@param">
						<description>months
            Number of months in the duration of time</description>
					</attribute>
				</comment>
				<params>
					<param name="months" comment="Number of months in the duration of time" fulltype="int" type="int" />
				</params>
			</constructor>
			<constructor visibility="public" name="XSYearMonthDuration">
				<comment>
					<description>Initialises to a duration of no time (0years and 0months)</description>
				</comment>
			</constructor>
			<method static="true" visibility="public" name="parseYMDuration" returncomment="New XSYearMonthDuration representing the duration of time
         supplied" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.XSDuration" type="XSDuration">
				<comment>
					<description>Creates a new XSYearMonthDuration by parsing the supplied String
 represented duration of time</description>
					<attribute name="@param">
						<description>str
            String represented duration of time</description>
					</attribute>
					<attribute name="@return">
						<description>New XSYearMonthDuration representing the duration of time
         supplied</description>
					</attribute>
				</comment>
				<params>
					<param name="str" comment="String represented duration of time" fulltype="java.lang.String" type="String" />
				</params>
			</method>
			<method visibility="public" name="type_name" returncomment="&quot;yearMonthDuration&quot; which is the datatype&apos;s name" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrives the datatype&apos;s name</description>
					<attribute name="@return">
						<description>&quot;yearMonthDuration&quot; which is the datatype&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="constructor" returncomment="New ResultSequence consisting of the time duration extracted" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Creates a new ResultSequence consisting of the extractable time duration
 from the supplied ResultSequence</description>
					<attribute name="@param">
						<description>arg
            The ResultSequence from which to extract</description>
					</attribute>
					<attribute name="@return">
						<description>New ResultSequence consisting of the time duration extracted</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The ResultSequence from which to extract" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="negative" returncomment="True if this duration represents a backward passage through time.
         False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Retrieves whether this duration represents a backward passage through
 time</description>
					<attribute name="@return">
						<description>True if this duration represents a backward passage through time.
         False otherwise</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_value" returncomment="String representation of the duration of time stored" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves a String representation of the duration of time stored</description>
					<attribute name="@return">
						<description>String representation of the duration of time stored</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="string_type" returncomment="&quot;xs:yearMonthDuration&quot; which is the datatype&apos;s full pathname" fulltype="java.lang.String" type="String">
				<comment>
					<description>Retrieves the datatype&apos;s full pathname</description>
					<attribute name="@return">
						<description>&quot;xs:yearMonthDuration&quot; which is the datatype&apos;s full pathname</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="monthValue" returncomment="Number of months making up this duration of time" fulltype="int" type="int">
				<comment>
					<description>Retrieves the duration of time stored as the number of months within it</description>
					<attribute name="@return">
						<description>Number of months making up this duration of time</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" name="eq" returncomment="True if they both represent the duration of time. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Equality comparison between this and the supplied duration of time.</description>
					<attribute name="@param">
						<description>arg
            The duration of time to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if they both represent the duration of time. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="lt" returncomment="True if the supplied time represents a larger duration than that
         stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this and the supplied duration of time.</description>
					<attribute name="@param">
						<description>arg
            The duration of time to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied time represents a larger duration than that
         stored. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="gt" returncomment="True if the supplied time represents a smaller duration than that
         stored. False otherwise" fulltype="boolean" type="boolean">
				<comment>
					<description>Comparison between this and the supplied duration of time.</description>
					<attribute name="@param">
						<description>arg
            The duration of time to compare with</description>
					</attribute>
					<attribute name="@return">
						<description>True if the supplied time represents a smaller duration than that
         stored. False otherwise</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to compare with" fulltype="org.eclipse.wst.xml.xpath2.processor.internal.types.AnyType" type="AnyType" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="plus" returncomment="New XSYearMonthDuration representing the resulting duration
         after the addition" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical addition between this duration stored and the supplied
 duration of time (of type XSYearMonthDuration)</description>
					<attribute name="@param">
						<description>arg
            The duration of time to add</description>
					</attribute>
					<attribute name="@return">
						<description>New XSYearMonthDuration representing the resulting duration
         after the addition</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to add" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="minus" returncomment="New XSYearMonthDuration representing the resulting duration
         after the subtraction" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical subtraction between this duration stored and the supplied
 duration of time (of type XSYearMonthDuration)</description>
					<attribute name="@param">
						<description>arg
            The duration of time to subtract</description>
					</attribute>
					<attribute name="@return">
						<description>New XSYearMonthDuration representing the resulting duration
         after the subtraction</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to subtract" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="times" returncomment="New XSYearMonthDuration representing the resulting duration
         after the multiplication" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical multiplication between this duration stored and the supplied
 duration of time (of type XSYearMonthDuration)</description>
					<attribute name="@param">
						<description>arg
            The duration of time to multiply by</description>
					</attribute>
					<attribute name="@return">
						<description>New XSYearMonthDuration representing the resulting duration
         after the multiplication</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to multiply by" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
			<method visibility="public" name="div" returncomment="New XSYearMonthDuration representing the resulting duration
         after the division" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence">
				<comment>
					<description>Mathematical division between this duration stored and the supplied
 duration of time (of type XSYearMonthDuration)</description>
					<attribute name="@param">
						<description>arg
            The duration of time to divide by</description>
					</attribute>
					<attribute name="@return">
						<description>New XSYearMonthDuration representing the resulting duration
         after the division</description>
					</attribute>
					<attribute name="@throws">
						<description>DynamicError</description>
					</attribute>
				</comment>
				<params>
					<param name="arg" comment="The duration of time to divide by" fulltype="org.eclipse.wst.xml.xpath2.processor.ResultSequence" type="ResultSequence" />
				</params>
				<exceptions>
					<exception comment="" fulltype="org.eclipse.wst.xml.xpath2.processor.DynamicError" type="DynamicError" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
</jel>
