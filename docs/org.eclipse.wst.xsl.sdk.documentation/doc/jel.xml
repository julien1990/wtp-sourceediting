<?xml version="1.0" encoding="UTF-8"?>
<jel>
	<admin creation="Tue Jul 22 14:41:23 GMT-05:00 2008" xsdversion="1.0.0" version="1.0.0" />
	<jelclass superclass="Plugin" visibility="public" superclassfulltype="Plugin" fulltype="org.eclipse.wst.xml.xpath.core.XPathCorePlugin" type="XPathCorePlugin" package="org.eclipse.wst.xml.xpath.core">
		<comment>
			<description>The activator class controls the plug-in life cycle</description>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xml.xpath.core&quot;" const="org.eclipse.wst.xml.xpath.core" name="PLUGIN_ID" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="XPathCorePlugin">
				<comment>
					<description>The constructor</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="start">
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stop">
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xml.xpath.core.XPathCorePlugin" returncomment="the shared instance" type="XPathCorePlugin" name="getDefault" static="true">
				<comment>
					<description>Returns the shared instance</description>
					<attribute name="@return">
						<description>the shared instance</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.core.internal.parser.XPathParser" type="XPathParser" package="org.eclipse.wst.xml.xpath.core.internal.parser">
		<fields>
			<field visibility="protected" fulltype="org.apache.commons.jxpath.ri.parser.XPathParser" type="org.apache.commons.jxpath.ri.parser.XPathParser" name="parser" />
			<field visibility="protected" fulltype="Token" type="Token" name="currentToken" />
			<field visibility="protected" fulltype="Token" type="Token" name="previousToken" />
		</fields>
		<methods>
			<constructor visibility="public" name="XPathParser">
				<params>
					<param fulltype="java.lang.String" type="String" name="xpath" />
				</params>
			</constructor>
			<method visibility="public" fulltype="int" returncomment="" type="int" name="getTokenStartOffset">
				<comment>
					<description>Given a line number and a column number, return the starting
 offset of the last known token.</description>
					<attribute name="@param">
						<description>offsetLine</description>
					</attribute>
					<attribute name="@param">
						<description>offsetColumn</description>
					</attribute>
					<attribute name="@return" />
				</comment>
				<params>
					<param fulltype="int" type="int" comment="" name="offsetLine" />
					<param fulltype="int" type="int" comment="" name="offsetColumn" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" returncomment="true if found, false otherwise." type="boolean" name="locatedLine">
				<comment>
					<description>Checks to see if the token is in the range of the line offset</description>
					<attribute name="@param">
						<description>token An XPath Token.</description>
					</attribute>
					<attribute name="@param">
						<description>offsetLine Line number offset of a region.</description>
					</attribute>
					<attribute name="@return">
						<description>true if found, false otherwise.</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="Token" type="Token" comment="An XPath Token." name="token" />
					<param fulltype="int" type="int" comment="Line number offset of a region." name="offsetLine" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" returncomment="true if found, false otherwise" type="boolean" name="locatedColumn">
				<comment>
					<description>Checks to see if the token is in the range of the column offset</description>
					<attribute name="@param">
						<description>token</description>
					</attribute>
					<attribute name="@param">
						<description>offsetColumn</description>
					</attribute>
					<attribute name="@return">
						<description>true if found, false otherwise</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="Token" type="Token" comment="" name="token" />
					<param fulltype="int" type="int" comment="" name="offsetColumn" />
				</params>
			</method>
			<method visibility="public" fulltype="Token" type="Token" name="getCurrentToken" />
			<method visibility="public" fulltype="Token" type="Token" name="getPreviousToken" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.core.util.XSLTXPathHelper" type="XSLTXPathHelper" package="org.eclipse.wst.xml.xpath.core.util">
		<methods>
			<constructor visibility="public" name="XSLTXPathHelper" />
			<method visibility="public" fulltype="org.w3c.dom.Node" returncomment="The first node found that matches the XPath, or null." type="Node" name="selectSingleNode" static="true">
				<comment>
					<description>Use an XPath string to select a single node. XPath namespace prefixes are
 resolved from the context node, which may not be what you want (see the
 next method).</description>
					<attribute name="@param">
						<description>contextNode
            The node to start searching from.</description>
					</attribute>
					<attribute name="@param">
						<description>str
            A valid XPath string.</description>
					</attribute>
					<attribute name="@return">
						<description>The first node found that matches the XPath, or null.</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformerException</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node to start searching from." name="contextNode" />
					<param fulltype="java.lang.String" type="String" comment="A valid XPath string." name="str" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.Node" returncomment="The first node found that matches the XPath, or null." type="Node" name="selectSingleNode" static="true">
				<comment>
					<description>Use an XPath string to select a single node. XPath namespace prefixes are
 resolved from the namespaceNode.</description>
					<attribute name="@param">
						<description>contextNode
            The node to start searching from.</description>
					</attribute>
					<attribute name="@param">
						<description>str
            A valid XPath string.</description>
					</attribute>
					<attribute name="@param">
						<description>namespaceNode
            The node from which prefixes in the XPath will be resolved to
            namespaces.</description>
					</attribute>
					<attribute name="@return">
						<description>The first node found that matches the XPath, or null.</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformerException</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node to start searching from." name="contextNode" />
					<param fulltype="java.lang.String" type="String" comment="A valid XPath string." name="str" />
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node from which prefixes in the XPath will be resolved to
            namespaces." name="namespaceNode" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.traversal.NodeIterator" returncomment="A NodeIterator, should never be null." type="NodeIterator" name="selectNodeIterator" static="true">
				<comment>
					<description>Use an XPath string to select a nodelist. XPath namespace prefixes are
 resolved from the contextNode.</description>
					<attribute name="@param">
						<description>contextNode
            The node to start searching from.</description>
					</attribute>
					<attribute name="@param">
						<description>str
            A valid XPath string.</description>
					</attribute>
					<attribute name="@return">
						<description>A NodeIterator, should never be null.</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformerException</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node to start searching from." name="contextNode" />
					<param fulltype="java.lang.String" type="String" comment="A valid XPath string." name="str" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.traversal.NodeIterator" returncomment="A NodeIterator, should never be null." type="NodeIterator" name="selectNodeIterator" static="true">
				<comment>
					<description>Use an XPath string to select a nodelist. XPath namespace prefixes are
 resolved from the namespaceNode.</description>
					<attribute name="@param">
						<description>contextNode
            The node to start searching from.</description>
					</attribute>
					<attribute name="@param">
						<description>str
            A valid XPath string.</description>
					</attribute>
					<attribute name="@param">
						<description>namespaceNode
            The node from which prefixes in the XPath will be resolved to
            namespaces.</description>
					</attribute>
					<attribute name="@return">
						<description>A NodeIterator, should never be null.</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformerException</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node to start searching from." name="contextNode" />
					<param fulltype="java.lang.String" type="String" comment="A valid XPath string." name="str" />
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node from which prefixes in the XPath will be resolved to
            namespaces." name="namespaceNode" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.NodeList" returncomment="A NodeIterator, should never be null." type="NodeList" name="selectNodeList" static="true">
				<comment>
					<description>Use an XPath string to select a nodelist. XPath namespace prefixes are
 resolved from the contextNode.</description>
					<attribute name="@param">
						<description>contextNode
            The node to start searching from.</description>
					</attribute>
					<attribute name="@param">
						<description>str
            A valid XPath string.</description>
					</attribute>
					<attribute name="@return">
						<description>A NodeIterator, should never be null.</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformerException</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node to start searching from." name="contextNode" />
					<param fulltype="java.lang.String" type="String" comment="A valid XPath string." name="str" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.NodeList" returncomment="A NodeIterator, should never be null." type="NodeList" name="selectNodeList" static="true">
				<comment>
					<description>Use an XPath string to select a nodelist. XPath namespace prefixes are
 resolved from the namespaceNode.</description>
					<attribute name="@param">
						<description>contextNode
            The node to start searching from.</description>
					</attribute>
					<attribute name="@param">
						<description>str
            A valid XPath string.</description>
					</attribute>
					<attribute name="@param">
						<description>namespaceNode
            The node from which prefixes in the XPath will be resolved to
            namespaces.</description>
					</attribute>
					<attribute name="@return">
						<description>A NodeIterator, should never be null.</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformerException</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node to start searching from." name="contextNode" />
					<param fulltype="java.lang.String" type="String" comment="A valid XPath string." name="str" />
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node from which prefixes in the XPath will be resolved to
            namespaces." name="namespaceNode" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="XObject" returncomment="An XObject, which can be used to obtain a string, number,
         nodelist, etc, should never be null." type="XObject" name="eval" static="true">
				<comment>
					<description>Evaluate XPath string to an XObject. Using this method, XPath namespace
 prefixes will be resolved from the namespaceNode.</description>
					<attribute name="@param">
						<description>contextNode
            The node to start searching from.</description>
					</attribute>
					<attribute name="@param">
						<description>str
            A valid XPath string.</description>
					</attribute>
					<attribute name="@return">
						<description>An XObject, which can be used to obtain a string, number,
         nodelist, etc, should never be null.</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XObject</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XNull</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XBoolean</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XNumber</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XString</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XRTreeFrag</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformerException</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node to start searching from." name="contextNode" />
					<param fulltype="java.lang.String" type="String" comment="A valid XPath string." name="str" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="XObject" returncomment="An XObject, which can be used to obtain a string, number,
         nodelist, etc, should never be null." type="XObject" name="eval" static="true">
				<comment>
					<description>Evaluate XPath string to an XObject. XPath namespace prefixes are
 resolved from the namespaceNode. The implementation of this is a little
 slow, since it creates a number of objects each time it is called. This
 could be optimized to keep the same objects around, but then
 thread-safety issues would arise.</description>
					<attribute name="@param">
						<description>contextNode
            The node to start searching from.</description>
					</attribute>
					<attribute name="@param">
						<description>str
            A valid XPath string.</description>
					</attribute>
					<attribute name="@param">
						<description>namespaceNode
            The node from which prefixes in the XPath will be resolved to
            namespaces.</description>
					</attribute>
					<attribute name="@return">
						<description>An XObject, which can be used to obtain a string, number,
         nodelist, etc, should never be null.</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XObject</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XNull</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XBoolean</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XNumber</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XString</description>
					</attribute>
					<attribute name="@see">
						<description>org.apache.xpath.objects.XRTreeFrag</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformerException</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node to start searching from." name="contextNode" />
					<param fulltype="java.lang.String" type="String" comment="A valid XPath string." name="str" />
					<param fulltype="org.w3c.dom.Node" type="Node" comment="The node from which prefixes in the XPath will be resolved to
            namespaces." name="namespaceNode" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="compile" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="expression" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.xpath.XPathExpressionException" type="XPathExpressionException" />
				</exceptions>
			</method>
			<method visibility="protected" fulltype="FunctionTable" type="FunctionTable" name="getFunctionTable" static="true" />
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xml.xpath.ui.XPathUIMessages" type="XPathUIMessages" package="org.eclipse.wst.xml.xpath.ui">
		<comment>
			<description>Strings used by XPath UI</description>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Context" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Document" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_DOM_Tree" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Expression" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Node_could_not_be_selected" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Nothing_selected" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Refresh_Source_Docs" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Refresh_Source_Docs_Tip" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Run_on_selected" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Run_XPath_Query" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Select_source_first" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Selection" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Show_In_Source" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Show_In_Source_Tip" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Text" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_XML_Source_Document" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_XPath_Eval_Failed" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_XPath_Show_In_Source_Failed" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_XPath_Navigator" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Namespaces" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Namespaces_Tip" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathNavigator_Namespace_Prefixes" static="true" />
		</fields>
		<methods>
			<method visibility="public" fulltype="java.util.ResourceBundle" type="ResourceBundle" name="getResourceBundle" static="true" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractUIPlugin" visibility="public" superclassfulltype="AbstractUIPlugin" fulltype="org.eclipse.wst.xml.xpath.ui.XPathViewPlugin" type="XPathViewPlugin" package="org.eclipse.wst.xml.xpath.ui">
		<methods>
			<constructor visibility="public" name="XPathViewPlugin">
				<comment>
					<description>The constructor.</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="start">
				<comment>
					<description>This method is called upon plug-in activation</description>
				</comment>
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stop">
				<comment>
					<description>This method is called when the plug-in is stopped</description>
				</comment>
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xml.xpath.ui.XPathViewPlugin" type="XPathViewPlugin" name="getDefault" static="true">
				<comment>
					<description>Returns the shared instance.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getPluginId" static="true" />
			<method visibility="public" fulltype="void" type="void" name="info">
				<params>
					<param fulltype="java.lang.String" type="String" name="message" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="warn">
				<params>
					<param fulltype="java.lang.String" type="String" name="message" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="log">
				<params>
					<param fulltype="java.lang.String" type="String" name="message" />
					<param fulltype="java.lang.Throwable" type="Throwable" name="ex" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="log">
				<params>
					<param fulltype="java.lang.Throwable" type="Throwable" name="ex" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="throwCoreException" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="message" />
					<param fulltype="java.lang.Throwable" type="Throwable" name="t" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getResourceString" static="true">
				<comment>
					<description>Returns the string from the plugin&apos;s resource bundle,
 or &apos;key&apos; if not found.</description>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="initializeImageRegistry">
				<params>
					<param fulltype="ImageRegistry" type="ImageRegistry" name="reg" />
				</params>
			</method>
			<method visibility="public" fulltype="java.util.ResourceBundle" type="ResourceBundle" name="getResourceBundle">
				<comment>
					<description>Returns the plugin&apos;s resource bundle</description>
				</comment>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="updateXPathNavigatorView">
				<params>
					<param fulltype="IWorkbenchPartReference" type="IWorkbenchPartReference" name="partRef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="partActivated">
				<params>
					<param fulltype="IWorkbenchPartReference" type="IWorkbenchPartReference" name="partRef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="partBroughtToTop">
				<params>
					<param fulltype="IWorkbenchPartReference" type="IWorkbenchPartReference" name="partRef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="partClosed">
				<params>
					<param fulltype="IWorkbenchPartReference" type="IWorkbenchPartReference" name="partRef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="partDeactivated">
				<params>
					<param fulltype="IWorkbenchPartReference" type="IWorkbenchPartReference" name="partRef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="partHidden">
				<params>
					<param fulltype="IWorkbenchPartReference" type="IWorkbenchPartReference" name="partRef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="partInputChanged">
				<params>
					<param fulltype="IWorkbenchPartReference" type="IWorkbenchPartReference" name="partRef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="partOpened">
				<params>
					<param fulltype="IWorkbenchPartReference" type="IWorkbenchPartReference" name="partRef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="partVisible">
				<params>
					<param fulltype="IWorkbenchPartReference" type="IWorkbenchPartReference" name="partRef" />
				</params>
			</method>
			<method visibility="public" fulltype="TemplateStore" returncomment="the template store for the xpath templates" type="TemplateStore" name="getXPathTemplateStore">
				<comment>
					<description>Returns the template store for the xpath templates.</description>
					<attribute name="@return">
						<description>the template store for the xpath templates</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="ContextTypeRegistry" returncomment="the template context type registry for xpath" type="ContextTypeRegistry" name="getXPathTemplateContextRegistry">
				<comment>
					<description>Returns the template context type registry for xpath</description>
					<attribute name="@return">
						<description>the template context type registry for xpath</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xml.xpath.ui.internal.XPathUIMessages" type="XPathUIMessages" package="org.eclipse.wst.xml.xpath.ui.internal">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathPrefencePage_0" static="true" />
		</fields>
	</jelclass>
	<jelclass superclass="AbstractPreferencePage" visibility="public" superclassfulltype="AbstractPreferencePage" fulltype="org.eclipse.wst.xml.xpath.ui.internal.preferences.XPathPrefencePage" type="XPathPrefencePage" package="org.eclipse.wst.xml.xpath.ui.internal.preferences">
		<methods>
			<constructor visibility="public" name="XPathPrefencePage" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createContents">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XMLTemplatePreferencePage" visibility="public" superclassfulltype="XMLTemplatePreferencePage" fulltype="org.eclipse.wst.xml.xpath.ui.internal.preferences.XPathTemplatePreferencePage" type="XPathTemplatePreferencePage" package="org.eclipse.wst.xml.xpath.ui.internal.preferences">
		<comment>
			<description>XSLTemplatePreferencePage sets up the template preference page that
 contains the templates for xpath, xpath 2.0, axis, operators, and 
 exslt functions.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XPathTemplatePreferencePage" />
			<method visibility="public" fulltype="boolean" type="boolean" name="performOk">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>org.eclipse.jface.preference.IPreferencePage#performOk()</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="LabelProvider" visibility="public" superclassfulltype="LabelProvider" fulltype="org.eclipse.wst.xml.xpath.ui.views.DOMNodeLabelProvider" type="DOMNodeLabelProvider" package="org.eclipse.wst.xml.xpath.ui.views">
		<methods>
			<constructor visibility="public" name="DOMNodeLabelProvider" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getText">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getImage">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.ui.views.DOMTreeContentProvider" type="DOMTreeContentProvider" package="org.eclipse.wst.xml.xpath.ui.views">
		<fields>
			<field visibility="package-private" fulltype="org.w3c.dom.Node" type="Node" name="node" />
			<field visibility="package-private" fulltype="java.lang.Object[]" type="Object" final="true" name="NOTHING" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="DOMTreeContentProvider" />
			<method visibility="public" fulltype="java.lang.Object[]" type="Object" name="getChildren">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="parentElement" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getParent">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="hasChildren">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.Object[]" type="Object" name="getElements">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="inputElement" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="public" fulltype="void" type="void" name="inputChanged">
				<params>
					<param fulltype="Viewer" type="Viewer" name="viewer" />
					<param fulltype="java.lang.Object" type="Object" name="oldInput" />
					<param fulltype="java.lang.Object" type="Object" name="newInput" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="ViewerFilter" visibility="public" superclassfulltype="ViewerFilter" fulltype="org.eclipse.wst.xml.xpath.ui.views.DOMViewerFilter" type="DOMViewerFilter" package="org.eclipse.wst.xml.xpath.ui.views">
		<methods>
			<constructor visibility="public" name="DOMViewerFilter" />
			<method visibility="public" fulltype="boolean" type="boolean" name="select">
				<params>
					<param fulltype="Viewer" type="Viewer" name="viewer" />
					<param fulltype="java.lang.Object" type="Object" name="parentElement" />
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Dialog" visibility="public" superclassfulltype="Dialog" fulltype="org.eclipse.wst.xml.xpath.ui.views.EditNamespacePrefixDialog" type="EditNamespacePrefixDialog" package="org.eclipse.wst.xml.xpath.ui.views">
		<fields>
			<field visibility="protected" fulltype="org.eclipse.swt.widgets.Label" type="Label" name="errorMessageLabel" />
			<field visibility="protected" fulltype="java.util.List" type="List" name="namespaceInfoList" />
			<field visibility="protected" fulltype="IPath" type="IPath" name="resourceLocation" />
		</fields>
		<methods>
			<constructor visibility="public" name="EditNamespacePrefixDialog">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="parentShell" />
					<param fulltype="IPath" type="IPath" name="resourceLocation" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="void" type="void" name="createButtonsForButtonBar">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createDialogArea">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="getDialogArea">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="java.util.List" type="List" name="getNamespaceInfoList" />
			<method visibility="public" fulltype="void" type="void" name="setNamespaceInfoList">
				<params>
					<param fulltype="java.util.List" type="List" name="list" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="updateErrorMessage">
				<params>
					<param fulltype="java.util.List" type="List" name="namespaceInfoList" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="updateOccured">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="object" />
					<param fulltype="java.lang.Object" type="Object" name="arg" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="ViewPart" visibility="public" superclassfulltype="ViewPart" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator" type="XPathNavigator" package="org.eclipse.wst.xml.xpath.ui.views">
		<fields>
			<field visibility="protected" fulltype="IMemento" type="IMemento" name="memento" />
			<field visibility="protected" fulltype="java.util.WeakHashMap" type="WeakHashMap" name="namespaceInfo" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;xpath-navigator-view&quot;" const="xpath-navigator-view" name="MEMENTO_XPATHNAVIGATOR_SECTION" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;query-context&quot;" const="query-context" name="MEMENTO_QUERYCONTEXT_KEY" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;document&quot;" const="document" name="MEMENTO_QUERYCONTEXT_DOCUMENT" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;selection&quot;" const="selection" name="MEMENTO_QUERYCONTEXT_SELECTION" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;xpath-query&quot;" const="xpath-query" name="MEMENTO_XPATHQUERY_KEY" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="XPathNavigator" />
			<method visibility="public" fulltype="void" type="void" name="createPartControl">
				<comment>
					<description>This is a callback that will allow us to create the viewer and initialize
 it.</description>
				</comment>
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IViewSite" type="IViewSite" name="site" />
					<param fulltype="IMemento" type="IMemento" name="memento" />
				</params>
				<exceptions>
					<exception fulltype="PartInitException" type="PartInitException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="saveState">
				<params>
					<param fulltype="IMemento" type="IMemento" name="memento" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="restoreState" />
			<method visibility="protected" fulltype="org.w3c.dom.Document" type="Document" name="getSelectedDocument" />
			<method visibility="protected" fulltype="org.w3c.dom.Element" type="Element" name="getQueryContext" />
			<method visibility="public" fulltype="void" type="void" name="setFocus">
				<comment>
					<description>Passing the focus request to the viewer&apos;s control.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="update" />
		</methods>
		<jelclass superclass="Action" visibility="package-private" superclassfulltype="Action" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator.XPathAction" type="XPathNavigator.XPathAction" package="org.eclipse.wst.xml.xpath.ui.views">
			<methods>
				<constructor visibility="package-private" name="XPathNavigator.XPathAction" />
				<method visibility="public" fulltype="void" type="void" name="run" />
			</methods>
		</jelclass>
		<jelclass superclass="Action" visibility="package-private" superclassfulltype="Action" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator.RefreshAction" type="XPathNavigator.RefreshAction" package="org.eclipse.wst.xml.xpath.ui.views">
			<methods>
				<constructor visibility="package-private" name="XPathNavigator.RefreshAction" />
				<method visibility="public" fulltype="void" type="void" name="run" />
			</methods>
		</jelclass>
		<jelclass superclass="Action" visibility="package-private" superclassfulltype="Action" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator.ShowInSourceAction" type="XPathNavigator.ShowInSourceAction" package="org.eclipse.wst.xml.xpath.ui.views">
			<methods>
				<constructor visibility="package-private" name="XPathNavigator.ShowInSourceAction" />
				<method visibility="public" fulltype="void" type="void" name="run" />
			</methods>
		</jelclass>
		<jelclass superclass="Object" visibility="package-private" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator.XMLEditorsContentProvider" type="XPathNavigator.XMLEditorsContentProvider" package="org.eclipse.wst.xml.xpath.ui.views">
			<methods>
				<constructor visibility="package-private" name="XPathNavigator.XMLEditorsContentProvider" />
				<method visibility="public" fulltype="java.lang.Object[]" type="Object" name="getElements">
					<params>
						<param fulltype="java.lang.Object" type="Object" name="inputElement" />
					</params>
				</method>
				<method visibility="public" fulltype="void" type="void" name="dispose" />
				<method visibility="public" fulltype="void" type="void" name="inputChanged">
					<params>
						<param fulltype="Viewer" type="Viewer" name="viewer" />
						<param fulltype="java.lang.Object" type="Object" name="oldInput" />
						<param fulltype="java.lang.Object" type="Object" name="newInput" />
					</params>
				</method>
			</methods>
		</jelclass>
		<jelclass superclass="LabelProvider" visibility="package-private" superclassfulltype="LabelProvider" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator.EditorReferenceLabelProvider" type="XPathNavigator.EditorReferenceLabelProvider" package="org.eclipse.wst.xml.xpath.ui.views">
			<fields>
				<field visibility="public" fulltype="char" type="char" name="DIRTY_INDICATOR" static="true">
					<comment>
						<description>A string used to indicate that an editor is dirty</description>
					</comment>
				</field>
			</fields>
			<methods>
				<constructor visibility="package-private" name="XPathNavigator.EditorReferenceLabelProvider" />
				<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getImage">
					<comment>
						<attribute name="@see">
							<description>ILabelProvider#getImage(Object)</description>
						</attribute>
					</comment>
					<params>
						<param fulltype="java.lang.Object" type="Object" name="element" />
					</params>
				</method>
				<method visibility="public" fulltype="java.lang.String" type="String" name="getText">
					<comment>
						<attribute name="@see">
							<description>ILabelProvider#getText(Object)</description>
						</attribute>
					</comment>
					<params>
						<param fulltype="java.lang.Object" type="Object" name="element" />
					</params>
				</method>
			</methods>
		</jelclass>
	</jelclass>
	<jelclass superclass="Action" visibility="package-private" superclassfulltype="Action" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator.XPathAction" type="XPathNavigator.XPathAction" package="org.eclipse.wst.xml.xpath.ui.views">
		<methods>
			<constructor visibility="package-private" name="XPathNavigator.XPathAction" />
			<method visibility="public" fulltype="void" type="void" name="run" />
		</methods>
	</jelclass>
	<jelclass superclass="Action" visibility="package-private" superclassfulltype="Action" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator.RefreshAction" type="XPathNavigator.RefreshAction" package="org.eclipse.wst.xml.xpath.ui.views">
		<methods>
			<constructor visibility="package-private" name="XPathNavigator.RefreshAction" />
			<method visibility="public" fulltype="void" type="void" name="run" />
		</methods>
	</jelclass>
	<jelclass superclass="Action" visibility="package-private" superclassfulltype="Action" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator.ShowInSourceAction" type="XPathNavigator.ShowInSourceAction" package="org.eclipse.wst.xml.xpath.ui.views">
		<methods>
			<constructor visibility="package-private" name="XPathNavigator.ShowInSourceAction" />
			<method visibility="public" fulltype="void" type="void" name="run" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="package-private" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator.XMLEditorsContentProvider" type="XPathNavigator.XMLEditorsContentProvider" package="org.eclipse.wst.xml.xpath.ui.views">
		<methods>
			<constructor visibility="package-private" name="XPathNavigator.XMLEditorsContentProvider" />
			<method visibility="public" fulltype="java.lang.Object[]" type="Object" name="getElements">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="inputElement" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="public" fulltype="void" type="void" name="inputChanged">
				<params>
					<param fulltype="Viewer" type="Viewer" name="viewer" />
					<param fulltype="java.lang.Object" type="Object" name="oldInput" />
					<param fulltype="java.lang.Object" type="Object" name="newInput" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="LabelProvider" visibility="package-private" superclassfulltype="LabelProvider" fulltype="org.eclipse.wst.xml.xpath.ui.views.XPathNavigator.EditorReferenceLabelProvider" type="XPathNavigator.EditorReferenceLabelProvider" package="org.eclipse.wst.xml.xpath.ui.views">
		<fields>
			<field visibility="public" fulltype="char" type="char" name="DIRTY_INDICATOR" static="true">
				<comment>
					<description>A string used to indicate that an editor is dirty</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="package-private" name="XPathNavigator.EditorReferenceLabelProvider" />
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getImage">
				<comment>
					<attribute name="@see">
						<description>ILabelProvider#getImage(Object)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getText">
				<comment>
					<attribute name="@see">
						<description>ILabelProvider#getText(Object)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.internal.ui.views.JFaceNodeContentProviderXPath" type="JFaceNodeContentProviderXPath" package="org.eclipse.wst.xml.xpath.internal.ui.views">
		<methods>
			<constructor visibility="public" name="JFaceNodeContentProviderXPath" />
			<method visibility="protected" fulltype="IJFaceNodeAdapter" type="IJFaceNodeAdapter" name="getAdapter">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="adaptable" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.Object[]" type="Object" name="getChildren">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="object" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.Object[]" type="Object" name="getElements">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="object" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getParent">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="object" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="hasChildren">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="object" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="inputChanged">
				<params>
					<param fulltype="Viewer" type="Viewer" name="viewer" />
					<param fulltype="java.lang.Object" type="Object" name="oldInput" />
					<param fulltype="java.lang.Object" type="Object" name="newInput" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="LabelProvider" visibility="public" superclassfulltype="LabelProvider" fulltype="org.eclipse.wst.xml.xpath.internal.ui.views.JFaceNodeLabelProviderXPath" type="JFaceNodeLabelProviderXPath" package="org.eclipse.wst.xml.xpath.internal.ui.views">
		<methods>
			<constructor visibility="public" name="JFaceNodeLabelProviderXPath" />
			<method visibility="protected" fulltype="IJFaceNodeAdapter" type="IJFaceNodeAdapter" name="getAdapter">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="adaptable" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getImage">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getText">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="isLabelProperty">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
					<param fulltype="java.lang.String" type="String" name="property" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xml.xpath.internal.ui.views.Messages" type="Messages" package="org.eclipse.wst.xml.xpath.internal.ui.views">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathComputer_0" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathComputer_5" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathView_0" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathView_1" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathView_2" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathView_8" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathViewActions_0" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XPathViewActions_1" static="true" />
		</fields>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.internal.ui.views.XPathComputer" type="XPathComputer" package="org.eclipse.wst.xml.xpath.internal.ui.views">
		<methods>
			<constructor visibility="public" name="XPathComputer">
				<params>
					<param fulltype="org.eclipse.wst.xml.xpath.internal.ui.views.XPathView" type="XPathView" name="xpathView" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="setModel">
				<params>
					<param fulltype="IStructuredModel" type="IStructuredModel" name="model" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setText">
				<params>
					<param fulltype="java.lang.String" type="String" name="text" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.xpath.XPathExpressionException" type="XPathExpressionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setSelectedNode">
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" name="node" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="compute" />
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="ViewPart" visibility="public" superclassfulltype="ViewPart" fulltype="org.eclipse.wst.xml.xpath.internal.ui.views.XPathView" type="XPathView" package="org.eclipse.wst.xml.xpath.internal.ui.views">
		<methods>
			<constructor visibility="public" name="XPathView" />
			<method visibility="public" fulltype="void" type="void" name="createPartControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="package-private" fulltype="void" type="void" name="xpathRecomputed">
				<params>
					<param fulltype="org.w3c.dom.NodeList" type="NodeList" name="nodeList" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setFocus" />
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getAdapter">
				<params>
					<param fulltype="java.lang.Class" type="Class" name="key" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="saveState">
				<params>
					<param fulltype="IMemento" type="IMemento" name="memento" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IViewSite" type="IViewSite" name="site" />
					<param fulltype="IMemento" type="IMemento" name="memento" />
				</params>
				<exceptions>
					<exception fulltype="PartInitException" type="PartInitException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="package-private" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.internal.ui.views.XPathViewActions" type="XPathViewActions" package="org.eclipse.wst.xml.xpath.internal.ui.views">
		<fields>
			<field visibility="package-private" fulltype="boolean" type="boolean" name="linkWithEditor" />
		</fields>
		<methods>
			<constructor visibility="package-private" name="XPathViewActions" />
			<method visibility="protected" fulltype="IAction[]" type="IAction" name="createMenuContributions">
				<params>
					<param fulltype="TreeViewer" type="TreeViewer" name="viewer" />
				</params>
			</method>
			<method visibility="protected" fulltype="IAction[]" type="IAction" name="createToolbarContributions">
				<params>
					<param fulltype="TreeViewer" type="TreeViewer" name="viewer" />
				</params>
			</method>
			<method visibility="public" fulltype="ISelection" type="ISelection" name="getSelection">
				<params>
					<param fulltype="TreeViewer" type="TreeViewer" name="viewer" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="isLinkedWithEditor">
				<params>
					<param fulltype="TreeViewer" type="TreeViewer" name="treeViewer" />
				</params>
			</method>
			<method visibility="package-private" fulltype="void" type="void" name="setLinkWithEditor">
				<params>
					<param fulltype="boolean" type="boolean" name="isLinkWithEditor" />
				</params>
			</method>
			<method visibility="package-private" fulltype="void" type="void" name="fillContextMenu">
				<params>
					<param fulltype="IMenuManager" type="IMenuManager" name="manager" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="TemplateProposal" visibility="public" superclassfulltype="TemplateProposal" fulltype="org.eclipse.wst.xml.xpath.ui.internal.contentassist.CustomTemplateProposal" type="CustomTemplateProposal" package="org.eclipse.wst.xml.xpath.ui.internal.contentassist">
		<comment>
			<description>Purpose of this class is to make the additional proposal info into content
 fit for an HTML viewer (by escaping characters)</description>
		</comment>
		<methods>
			<constructor visibility="public" name="CustomTemplateProposal">
				<params>
					<param fulltype="Template" type="Template" name="template" />
					<param fulltype="TemplateContext" type="TemplateContext" name="context" />
					<param fulltype="IRegion" type="IRegion" name="region" />
					<param fulltype="org.eclipse.swt.graphics.Image" type="Image" name="image" />
					<param fulltype="int" type="int" name="relevance" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getDisplayString" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getAdditionalProposalInfo" />
		</methods>
	</jelclass>
	<jelclass superclass="TemplateCompletionProcessor" visibility="public" superclassfulltype="TemplateCompletionProcessor" fulltype="org.eclipse.wst.xml.xpath.ui.internal.contentassist.XPathTemplateCompletionProcessor" type="XPathTemplateCompletionProcessor" package="org.eclipse.wst.xml.xpath.ui.internal.contentassist">
		<comment>
			<description>Completion processor for XML Templates. Most of the work is already done by
 the XML Content Assist processor, so by the time the
 XMLTemplateCompletionProcessor is asked for content assist proposals, the
 XML content assist processor has already set the context type for
 templates.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XPathTemplateCompletionProcessor" />
			<method visibility="public" fulltype="ICompletionProposal[]" type="ICompletionProposal" name="computeCompletionProposals">
				<params>
					<param fulltype="ITextViewer" type="ITextViewer" name="viewer" />
					<param fulltype="int" type="int" name="offset" />
				</params>
			</method>
			<method visibility="protected" fulltype="ICompletionProposal" type="ICompletionProposal" name="createProposal">
				<params>
					<param fulltype="Template" type="Template" name="template" />
					<param fulltype="TemplateContext" type="TemplateContext" name="context" />
					<param fulltype="IRegion" type="IRegion" name="region" />
					<param fulltype="int" type="int" name="relevance" />
				</params>
			</method>
			<method visibility="protected" fulltype="TemplateContextType" type="TemplateContextType" name="getContextType">
				<params>
					<param fulltype="ITextViewer" type="ITextViewer" name="viewer" />
					<param fulltype="IRegion" type="IRegion" name="region" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getImage">
				<params>
					<param fulltype="Template" type="Template" name="template" />
				</params>
			</method>
			<method visibility="protected" fulltype="Template[]" type="Template" name="getTemplates">
				<params>
					<param fulltype="java.lang.String" type="String" name="contextTypeId" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setContextType">
				<params>
					<param fulltype="java.lang.String" type="String" name="contextTypeId" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.ui.internal.templates.TemplateContextTypeIdsXPath" type="TemplateContextTypeIdsXPath" package="org.eclipse.wst.xml.xpath.ui.internal.templates">
		<comment>
			<description>This class contains the names and values for the XSL ContenxtTypes for
 the XPath completion proposals.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" name="XPATH" static="true">
				<comment>
					<description>TODO: Add Javadoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" name="XPATH2" static="true">
				<comment>
					<description>TODO: Add Javadoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" name="AXIS" static="true">
				<comment>
					<description>TODO: Add Javadoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" name="EXSLT" static="true">
				<comment>
					<description>TODO: Add Javadoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" name="OPERATOR" static="true">
				<comment>
					<description>TODO: Add Javadoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" name="CUSTOM" static="true">
				<comment>
					<description>TODO: Add Javadoc</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="TemplateContextTypeIdsXPath" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.ui.internal.util.XPathPluginImageHelper" type="XPathPluginImageHelper" package="org.eclipse.wst.xml.xpath.ui.internal.util">
		<comment>
			<description>Helper class to handle images provided by this plug-in.
 
 NOTE: For internal use only. For images used externally, please use the
 Shared***ImageHelper class instead.</description>
			<attribute name="@author">
				<description>david carver based on work by amywu</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XPathPluginImageHelper" />
			<method visibility="public" fulltype="org.eclipse.wst.xml.xpath.ui.internal.util.XPathPluginImageHelper" returncomment="Returns a XMLEditorPluginImageHelper" type="XPathPluginImageHelper" synchronized="true" name="getInstance" static="true">
				<comment>
					<description>Gets the instance.</description>
					<attribute name="@return">
						<description>Returns a XMLEditorPluginImageHelper</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" returncomment="Image the image associated with resource or null if one could
         not be found" type="Image" name="getImage">
				<comment>
					<description>Retrieves the image associated with resource from the image registry.
 If the image cannot be retrieved, attempt to find and load the image at
 the location specified in resource.</description>
					<attribute name="@param">
						<description>resource
            the image to retrieve</description>
					</attribute>
					<attribute name="@return">
						<description>Image the image associated with resource or null if one could
         not be found</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the image to retrieve" name="resource" />
				</params>
			</method>
			<method visibility="public" fulltype="ImageDescriptor" returncomment="ImageDescriptor the image descriptor assocated with resource or
         the default &quot;missing&quot; image descriptor if one could not be
         found" type="ImageDescriptor" name="getImageDescriptor">
				<comment>
					<description>Retrieves the image descriptor associated with resource from the image
 descriptor registry. If the image descriptor cannot be retrieved,
 attempt to find and load the image descriptor at the location specified
 in resource.</description>
					<attribute name="@param">
						<description>resource
            the image descriptor to retrieve</description>
					</attribute>
					<attribute name="@return">
						<description>ImageDescriptor the image descriptor assocated with resource or
         the default &quot;missing&quot; image descriptor if one could not be
         found</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the image descriptor to retrieve" name="resource" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xml.xpath.ui.internal.util.XPathPluginImages" type="XPathPluginImages" package="org.eclipse.wst.xml.xpath.ui.internal.util">
		<comment>
			<description>Bundle of most images used by the XSL Plugins</description>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/full/function.gif&quot;" const="icons/full/function.gif" name="IMG_XPATH_FUNCTION" static="true">
				<comment>
					<description>Path to the XPATH Images used for Content Assist</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/full/directional.gif&quot;" const="icons/full/directional.gif" name="IMG_XPATH_AXIS" static="true">
				<comment>
					<description>Path to the XPATH Images used for Content Assist</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/full/variable.gif&quot;" const="icons/full/variable.gif" name="IMG_VARIABLES" static="true">
				<comment>
					<description>Path to the XPATH Images used for Content Assist</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/full/operation.gif&quot;" const="icons/full/operation.gif" name="IMG_OPERATOR" static="true">
				<comment>
					<description>Path to the XPATH Images used for Content Assist</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="XPathPluginImages" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.ValidationPreferences" type="ValidationPreferences" package="org.eclipse.wst.xsl.core">
		<comment>
			<description>Preference constants specific to the XSL validator.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
			<attribute name="@see">
				<description>org.eclipse.core.resources.IMarker</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;MAX_ERRORS&quot;" const="MAX_ERRORS" name="MAX_ERRORS" static="true">
				<comment>
					<description>The maximum number of errors allowed per XSL file.
 &lt;p&gt;
 Value is of type &lt;code&gt;Integer&lt;/code&gt;.
 &lt;/p&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;MISSING_PARAM&quot;" const="MISSING_PARAM" name="MISSING_PARAM" static="true">
				<comment>
					<description>The level at which a missing parameter is reported.
 &lt;p&gt;
 Value is one of &lt;code&gt;IMarker.SEVERITY_ERROR, IMarker.SEVERITY_WARNING, IMarker.SEVERITY_INFO&lt;/code&gt;
 &lt;/p&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;CHECK_XPATHS&quot;" const="CHECK_XPATHS" name="XPATHS" static="true">
				<comment>
					<description>The level at which an invalid XPath is reported.
 &lt;p&gt;
 Value is one of &lt;code&gt;IMarker.SEVERITY_ERROR, IMarker.SEVERITY_WARNING, IMarker.SEVERITY_INFO&lt;/code&gt;
 &lt;/p&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;CHECK_CALL_TEMPLATES&quot;" const="CHECK_CALL_TEMPLATES" name="CALL_TEMPLATES" static="true">
				<comment>
					<description>The level at which an unresolved called template is reported. 
 &lt;p&gt;
 Value is one of &lt;code&gt;IMarker.SEVERITY_ERROR, IMarker.SEVERITY_WARNING, IMarker.SEVERITY_INFO&lt;/code&gt;
 &lt;/p&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;EMPTY_PARAM&quot;" const="EMPTY_PARAM" name="EMPTY_PARAM" static="true">
				<comment>
					<description>The level at which a parameter that does not have a default value and does not specify a value is reported.
 &lt;p&gt;
 Value is one of &lt;code&gt;IMarker.SEVERITY_ERROR, IMarker.SEVERITY_WARNING, IMarker.SEVERITY_INFO&lt;/code&gt;
 &lt;/p&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;MISSING_INCLUDE&quot;" const="MISSING_INCLUDE" name="MISSING_INCLUDE" static="true">
				<comment>
					<description>The level at which an unresolved import or included is reported.
 &lt;p&gt;
 Value is one of &lt;code&gt;IMarker.SEVERITY_ERROR, IMarker.SEVERITY_WARNING, IMarker.SEVERITY_INFO&lt;/code&gt;
 &lt;/p&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;CIRCULAR_REF&quot;" const="CIRCULAR_REF" name="CIRCULAR_REF" static="true">
				<comment>
					<description>The level at which an include/import circular references is reported.
 &lt;p&gt;
 Value is one of &lt;code&gt;IMarker.SEVERITY_ERROR, IMarker.SEVERITY_WARNING, IMarker.SEVERITY_INFO&lt;/code&gt;
 &lt;/p&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;TEMPLATE_CONFLICT&quot;" const="TEMPLATE_CONFLICT" name="TEMPLATE_CONFLICT" static="true">
				<comment>
					<description>The level at which a template conflict is reported.
 &lt;p&gt;
 Value is one of &lt;code&gt;IMarker.SEVERITY_ERROR, IMarker.SEVERITY_WARNING, IMarker.SEVERITY_INFO&lt;/code&gt;
 &lt;/p&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;NAME_ATTRIBUTE_MISSING&quot;" const="NAME_ATTRIBUTE_MISSING" name="NAME_ATTRIBUTE_MISSING" static="true">
				<comment>
					<description>The level at which a parameter without a name attribute is reported.
 &lt;p&gt;
 Value is one of &lt;code&gt;IMarker.SEVERITY_ERROR, IMarker.SEVERITY_WARNING, IMarker.SEVERITY_INFO&lt;/code&gt;
 &lt;/p&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;NAME_ATTRIBUTE_EMPTY&quot;" const="NAME_ATTRIBUTE_EMPTY" name="NAME_ATTRIBUTE_EMPTY" static="true">
				<comment>
					<description>The level at which a parameter with an empty name attribute is reported.
 &lt;p&gt;
 Value is one of &lt;code&gt;IMarker.SEVERITY_ERROR, IMarker.SEVERITY_WARNING, IMarker.SEVERITY_INFO&lt;/code&gt;
 &lt;/p&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;DUPLICATE_PARAMETER&quot;" const="DUPLICATE_PARAMETER" name="DUPLICATE_PARAMETER" static="true">
				<comment>
					<description>The level at which a duplicate parameter is reported.
 &lt;p&gt;
 Value is one of &lt;code&gt;IMarker.SEVERITY_ERROR, IMarker.SEVERITY_WARNING, IMarker.SEVERITY_INFO&lt;/code&gt;
 &lt;/p&gt;</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="ValidationPreferences" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.XSLCore" type="XSLCore" package="org.eclipse.wst.xsl.core">
		<comment>
			<description>The interface to all aspects of the XSL core functionality.
 &lt;p&gt;
 This is responsible for building and maintaining the cache of built XSL models.
 &lt;/p&gt;</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;http://www.w3.org/1999/XSL/Transform&quot;" const="http://www.w3.org/1999/XSL/Transform" name="XSL_NAMESPACE_URI" static="true">
				<comment>
					<description>The XSL namespace URI (= http://www.w3.org/1999/XSL/Transform)</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xml.core.xslsource&quot;" const="org.eclipse.wst.xml.core.xslsource" name="XSL_CONTENT_TYPE" static="true">
				<comment>
					<description>The XSL content type (= org.eclipse.wst.xml.core.xslsource)</description>
				</comment>
			</field>
		</fields>
		<methods>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.model.StylesheetModel" returncomment="source file, or null if could not be built" type="StylesheetModel" synchronized="true" name="getStylesheet">
				<comment>
					<description>Get the cached stylesheet, or build it if it has not yet been built.</description>
					<attribute name="@param">
						<description>file</description>
					</attribute>
					<attribute name="@return">
						<description>source file, or null if could not be built</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="" name="file" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.model.StylesheetModel" returncomment="the stylesheet model, or null if it could not be created." type="StylesheetModel" synchronized="true" name="buildStylesheet">
				<comment>
					<description>Completely rebuild the source file from its DOM</description>
					<attribute name="@param">
						<description>file</description>
					</attribute>
					<attribute name="@return">
						<description>the stylesheet model, or null if it could not be created.</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="" name="file" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="clean">
				<comment>
					<description>Clean all of the stylesheets from the given project.</description>
					<attribute name="@param">
						<description>project the project to be cleaned</description>
					</attribute>
					<attribute name="@param">
						<description>monitor a progress monitor to track the clean progress</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IProject" type="IProject" comment="the project to be cleaned" name="project" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" comment="a progress monitor to track the clean progress" name="monitor" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.XSLCore" returncomment="the &lt;code&gt;XSLCore&lt;/code&gt; instance" type="XSLCore" synchronized="true" name="getInstance" static="true">
				<comment>
					<description>Get the singleton &lt;code&gt;XSLCore&lt;/code&gt; instance.</description>
					<attribute name="@return">
						<description>the &lt;code&gt;XSLCore&lt;/code&gt; instance</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="IFile" returncomment="the file at the URI relative to this &lt;code&gt;currentFile&lt;/code&gt;" type="IFile" name="resolveFile" static="true">
				<comment>
					<description>Locates a file for the given current file and URI.</description>
					<attribute name="@param">
						<description>currentFile the file to resolve relative to</description>
					</attribute>
					<attribute name="@param">
						<description>uri the relative URI</description>
					</attribute>
					<attribute name="@return">
						<description>the file at the URI relative to this &lt;code&gt;currentFile&lt;/code&gt;</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="the file to resolve relative to" name="currentFile" />
					<param fulltype="java.lang.String" type="String" comment="the relative URI" name="uri" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" returncomment="true if this file is an XML file" type="boolean" name="isXMLFile" static="true">
				<comment>
					<description>Determine whether the given file is an XML file by inspecting its content types.</description>
					<attribute name="@param">
						<description>file the file to inspect</description>
					</attribute>
					<attribute name="@return">
						<description>true if this file is an XML file</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="the file to inspect" name="file" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" returncomment="true if this file is an XSL file" type="boolean" name="isXSLFile" static="true">
				<comment>
					<description>Determine whether the given file is an XSL file by inspecting its content types.</description>
					<attribute name="@param">
						<description>file the file to inspect</description>
					</attribute>
					<attribute name="@return">
						<description>true if this file is an XSL file</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="the file to inspect" name="file" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="isXSLNamespace" static="true">
				<params>
					<param fulltype="IDOMNode" type="IDOMNode" name="node" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xsl.core.internal.Messages" type="Messages" package="org.eclipse.wst.xsl.core.internal">
		<comment>
			<attribute name="@author">
				<description>Jesper Steen</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLCorePlugin_parserConfiguration" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLCorePlugin_badInitializationData" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLCorePlugin_coreError" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="Messages" />
			<method visibility="public" fulltype="void" type="void" name="reloadMessages" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Plugin" visibility="public" superclassfulltype="Plugin" fulltype="org.eclipse.wst.xsl.core.internal.XSLCorePlugin" type="XSLCorePlugin" package="org.eclipse.wst.xsl.core.internal">
		<comment>
			<description>The activator class controls the plug-in life cycle</description>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.core&quot;" const="org.eclipse.wst.xsl.core" name="PLUGIN_ID" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="XSLCorePlugin">
				<comment>
					<description>The constructor</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="start">
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stop">
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.XSLCorePlugin" returncomment="the shared instance" type="XSLCorePlugin" name="getDefault" static="true">
				<comment>
					<description>Returns the shared instance</description>
					<attribute name="@return">
						<description>the shared instance</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="javax.xml.parsers.SAXParserFactory" returncomment="returns a SAXParserFactory" type="SAXParserFactory" name="getFactory">
				<comment>
					<description>Return the registered SAX parser factory or null if one
 does not exist.	 * @return</description>
					<attribute name="@return">
						<description>returns a SAXParserFactory</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="log" static="true">
				<comment>
					<description>Logs the specified status with this plug-in&apos;s log.</description>
					<attribute name="@param">
						<description>status status to log</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IStatus" type="IStatus" comment="status to log" name="status" />
				</params>
			</method>
			<method visibility="public" fulltype="IStatus" returncomment="a new error status" type="IStatus" name="newErrorStatus" static="true">
				<comment>
					<description>Returns a new error status for this plug-in with the given message</description>
					<attribute name="@param">
						<description>message the message to be included in the status</description>
					</attribute>
					<attribute name="@param">
						<description>exception the exception to be included in the status or &lt;code&gt;null&lt;/code&gt; if none</description>
					</attribute>
					<attribute name="@return">
						<description>a new error status</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the message to be included in the status" name="message" />
					<param fulltype="java.lang.Throwable" type="Throwable" comment="the exception to be included in the status or &lt;code&gt;null&lt;/code&gt; if none" name="exception" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xsl.core.internal.ant.Messages" type="Messages" package="org.eclipse.wst.xsl.core.internal.ant">
		<comment>
			<description>The XInclude message properties for string externalization</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XIncludeTask_0" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XIncludeTask_1" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XIncludeTask_2" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XIncludeTask_3" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XIncludeTask_4" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XIncludeTask_5" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XIncludeTask_6" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XIncludeTask_7" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XIncludeTask_8" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XIncludeTask_9" static="true">
				<comment>
					<description>TODO: Add JavaDoc</description>
				</comment>
			</field>
		</fields>
	</jelclass>
	<jelclass superclass="Task" visibility="public" superclassfulltype="org.apache.tools.ant.Task" fulltype="org.eclipse.wst.xsl.core.internal.ant.XIncludeTask" type="XIncludeTask" package="org.eclipse.wst.xsl.core.internal.ant">
		<comment>
			<description>TODO: Add Java Doc</description>
			<attribute name="@author">
				<description>Lars Vogel</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XIncludeTask" />
			<method visibility="public" fulltype="void" type="void" name="setIn">
				<comment>
					<description>TODO: Add JavaDoc</description>
					<attribute name="@param">
						<description>inFile</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="" name="inFile" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setOut">
				<comment>
					<description>TODO: Add JavaDoc</description>
					<attribute name="@param">
						<description>outFile</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="" name="outFile" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="execute" />
			<method visibility="public" fulltype="java.util.Collection" returncomment="" type="Collection" name="listFiles">
				<comment>
					<description>TODO: Add JavaDoc</description>
					<attribute name="@param">
						<description>directory</description>
					</attribute>
					<attribute name="@param">
						<description>recurse</description>
					</attribute>
					<attribute name="@return" />
				</comment>
				<params>
					<param fulltype="java.io.File" type="File" comment="" name="directory" />
					<param fulltype="boolean" type="boolean" comment="" name="recurse" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSLElement" visibility="public" superclassfulltype="org.eclipse.wst.xsl.core.internal.model.XSLElement" fulltype="org.eclipse.wst.xsl.core.internal.model.CallTemplate" type="CallTemplate" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>The &lt;code&gt;xsl:call-template&lt;/code&gt; model element.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="parameters" />
		</fields>
		<methods>
			<constructor visibility="public" name="CallTemplate">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>stylesheet the stylesheet that this belongs to</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" comment="the stylesheet that this belongs to" name="stylesheet" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="addParameter">
				<comment>
					<description>Add a parameter to this.</description>
					<attribute name="@param">
						<description>parameter the parameter to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Parameter" type="Parameter" comment="the parameter to add" name="parameter" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the template name, or null" type="String" name="getName">
				<comment>
					<description>Get the value of the &lt;code&gt;name&lt;/code&gt; attribute if one exists.</description>
					<attribute name="@return">
						<description>the template name, or null</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="a list of parameters" type="List" name="getParameters">
				<comment>
					<description>Get the list of parameters associated with this.</description>
					<attribute name="@return">
						<description>a list of parameters</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Include" visibility="public" superclassfulltype="org.eclipse.wst.xsl.core.internal.model.Include" fulltype="org.eclipse.wst.xsl.core.internal.model.Import" type="Import" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>The &lt;code&gt;xsl:import&lt;/code&gt; model element.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="Import">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>stylesheet the stylesheet that this belongs to</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" comment="the stylesheet that this belongs to" name="stylesheet" />
				</params>
			</constructor>
		</methods>
	</jelclass>
	<jelclass superclass="XSLElement" visibility="public" superclassfulltype="org.eclipse.wst.xsl.core.internal.model.XSLElement" fulltype="org.eclipse.wst.xsl.core.internal.model.Include" type="Include" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>The &lt;code&gt;xsl:include&lt;/code&gt; model element.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="INCLUDE" static="true">
				<comment>
					<description>Constant indicating that this is an &lt;code&gt;Include&lt;/code&gt;.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="IMPORT" static="true">
				<comment>
					<description>Constant indicating that this is an &lt;code&gt;Import&lt;/code&gt;.</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="Include">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>stylesheet the stylesheet that this belongs to</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" comment="the stylesheet that this belongs to" name="stylesheet" />
				</params>
			</constructor>
			<constructor visibility="protected" name="Include">
				<comment>
					<description>Create a new instance of this, specifying whether an &lt;code&gt;Include&lt;/code&gt; or an &lt;code&gt;Import&lt;/code&gt;.</description>
					<attribute name="@param">
						<description>stylesheet the stylesheet that this belongs to</description>
					</attribute>
					<attribute name="@param">
						<description>type one of the constants &lt;code&gt;INCLUDE&lt;/code&gt; or &lt;code&gt;IMPORT&lt;/code&gt;</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" comment="the stylesheet that this belongs to" name="stylesheet" />
					<param fulltype="int" type="int" comment="one of the constants &lt;code&gt;INCLUDE&lt;/code&gt; or &lt;code&gt;IMPORT&lt;/code&gt;" name="type" />
				</params>
			</constructor>
			<method visibility="public" fulltype="int" returncomment="one of the constants &lt;code&gt;INCLUDE&lt;/code&gt; or &lt;code&gt;IMPORT&lt;/code&gt;" type="int" name="getIncludeType">
				<comment>
					<description>Get the type of include, whether an &lt;code&gt;Include&lt;/code&gt; or an &lt;code&gt;Import&lt;/code&gt;.</description>
					<attribute name="@return">
						<description>one of the constants &lt;code&gt;INCLUDE&lt;/code&gt; or &lt;code&gt;IMPORT&lt;/code&gt;</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the &lt;code&gt;href&lt;/code&gt; value, or null" type="String" name="getHref">
				<comment>
					<description>Get the value of the &lt;code&gt;href&lt;/code&gt; attribute if one exists.</description>
					<attribute name="@return">
						<description>the &lt;code&gt;href&lt;/code&gt; value, or null</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="IFile" returncomment="the included file, or null" type="IFile" name="getHrefAsFile">
				<comment>
					<description>Gets the included file as a source file, if possible (returned file may be null and need not exist).</description>
					<attribute name="@return">
						<description>the included file, or null</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Variable" visibility="public" superclassfulltype="org.eclipse.wst.xsl.core.internal.model.Variable" fulltype="org.eclipse.wst.xsl.core.internal.model.Parameter" type="Parameter" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>The &lt;code&gt;xsl:parameter&lt;/code&gt; or &lt;code&gt;xsl:with-param&lt;/code&gt; model element.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="Parameter">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>stylesheet the stylesheet that this belongs to</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" comment="the stylesheet that this belongs to" name="stylesheet" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="setValue">
				<comment>
					<description>Set whether this has a value.</description>
					<attribute name="@param">
						<description>valueSet &lt;code&gt;true&lt;/code&gt; if this has a value</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="boolean" type="boolean" comment="&lt;code&gt;true&lt;/code&gt; if this has a value" name="valueSet" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" returncomment="&lt;code&gt;true&lt;/code&gt; if this has a value" type="boolean" name="isValue">
				<comment>
					<description>Get whether this has a value.</description>
					<attribute name="@return">
						<description>&lt;code&gt;true&lt;/code&gt; if this has a value</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSLElement" visibility="public" superclassfulltype="org.eclipse.wst.xsl.core.internal.model.XSLElement" fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>The &lt;code&gt;xsl:stylesheet&lt;/code&gt; model element.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="package-private" fulltype="IFile" type="IFile" final="true" name="file" />
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="includes" />
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="imports" />
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="templates" />
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="calledTemplates" />
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="globalVariables" />
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="elements" />
		</fields>
		<methods>
			<constructor visibility="public" name="Stylesheet">
				<comment>
					<description>Create an instance of this.</description>
					<attribute name="@param">
						<description>file the file that this represents</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="the file that this represents" name="file" />
				</params>
			</constructor>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" name="getStylesheet" />
			<method visibility="public" fulltype="void" type="void" name="addInclude">
				<comment>
					<description>Add an &lt;code&gt;Include&lt;/code&gt; to this.</description>
					<attribute name="@param">
						<description>include the include to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Include" type="Include" comment="the include to add" name="include" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addImport">
				<comment>
					<description>Add an &lt;code&gt;Import&lt;/code&gt; to this.</description>
					<attribute name="@param">
						<description>include the import to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Import" type="Import" comment="the import to add" name="include" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addTemplate">
				<comment>
					<description>Add a &lt;code&gt;Template&lt;/code&gt; to this.</description>
					<attribute name="@param">
						<description>template the template to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Template" type="Template" comment="the template to add" name="template" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addCalledTemplate">
				<comment>
					<description>Add a &lt;code&gt;CallTemplate&lt;/code&gt; to this.</description>
					<attribute name="@param">
						<description>template the template to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.CallTemplate" type="CallTemplate" comment="the template to add" name="template" />
				</params>
			</method>
			<method visibility="public" fulltype="IFile" returncomment="the file that this represents" type="IFile" name="getFile">
				<comment>
					<description>Get the file that this represents.</description>
					<attribute name="@return">
						<description>the file that this represents</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the list of includes" type="List" name="getIncludes">
				<comment>
					<description>Get the list of includes for this.</description>
					<attribute name="@return">
						<description>the list of includes</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the list of imports" type="List" name="getImports">
				<comment>
					<description>Get the list of imports for this.</description>
					<attribute name="@return">
						<description>the list of imports</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the list of templates" type="List" name="getTemplates">
				<comment>
					<description>Get the list of templates for this.</description>
					<attribute name="@return">
						<description>the list of templates</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the list of called templates" type="List" name="getCalledTemplates">
				<comment>
					<description>Get the list of called templates for this.</description>
					<attribute name="@return">
						<description>the list of called templates</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addGlobalVariable">
				<comment>
					<description>Add a global variable to this.</description>
					<attribute name="@param">
						<description>var the variable to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Variable" type="Variable" comment="the variable to add" name="var" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.internal.model.StylesheetBuilder" type="StylesheetBuilder" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>A builder that creates and maintains a cache of &lt;code&gt;Stylesheet&lt;/code&gt;&apos;s.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" returncomment="the &lt;code&gt;Stylesheet&lt;/code&gt;" type="Stylesheet" name="getStylesheet">
				<comment>
					<description>Get the &lt;code&gt;Stylesheet&lt;/code&gt; associated with the given file. If either
 the &lt;code&gt;Stylesheet&lt;/code&gt; has not yet been created or
 &lt;code&gt;force&lt;/code&gt; is specified then the &lt;code&gt;Stylesheet&lt;/code&gt; is
 built.</description>
					<attribute name="@param">
						<description>file
            the XSL file</description>
					</attribute>
					<attribute name="@param">
						<description>force
            &lt;code&gt;true&lt;/code&gt; to force a parse of the file</description>
					</attribute>
					<attribute name="@return">
						<description>the &lt;code&gt;Stylesheet&lt;/code&gt;</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="the XSL file" name="file" />
					<param fulltype="boolean" type="boolean" comment="&lt;code&gt;true&lt;/code&gt; to force a parse of the file" name="force" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.model.StylesheetBuilder" returncomment="the &lt;code&gt;StylesheetBuilder&lt;/code&gt; instance" type="StylesheetBuilder" synchronized="true" name="getInstance" static="true">
				<comment>
					<description>Get the singleton &lt;code&gt;StylesheetBuilder&lt;/code&gt; instance.</description>
					<attribute name="@return">
						<description>the &lt;code&gt;StylesheetBuilder&lt;/code&gt; instance</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.internal.model.StylesheetModel" type="StylesheetModel" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>The composed stylesheet, consisting of all templates and variables available
 via imports and includes.
 
 &lt;p&gt;
 The &lt;code&gt;fix()&lt;/code&gt; method does the actual work of populating the fields
 of this, so it must be called before calling any of the other methods.
 &lt;/p&gt;
 
 &lt;p&gt;
 Note that this model may not be valid - for instance there may be more than
 one named template for a given name or more than one global variable with a
 given name.
 &lt;/p&gt;</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="package-private" fulltype="boolean" type="boolean" name="circularReference" />
			<field visibility="package-private" fulltype="java.util.Set" type="Set" final="true" name="files" />
			<field visibility="package-private" fulltype="java.util.Set" type="Set" final="true" name="stylesheets" />
			<field visibility="package-private" fulltype="java.util.Set" type="Set" final="true" name="templateSet" />
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="templates" />
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="globalVariables" />
		</fields>
		<methods>
			<constructor visibility="public" name="StylesheetModel">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>stylesheet
            the stylesheet that this is the model for</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" comment="the stylesheet that this is the model for" name="stylesheet" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.util.Set" returncomment="the set of stylesheets in the entire hierarchy" type="Set" name="getIncludedStylesheets">
				<comment>
					<description>Get all stylesheets that are included in this stylesheet anywhere in the
 hierarchy via either import or include.</description>
					<attribute name="@return">
						<description>the set of stylesheets in the entire hierarchy</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.Set" returncomment="the set of files in the entire hierarchy" type="Set" name="getFileDependencies">
				<comment>
					<description>Get all files that are included in this stylesheet anywhere in the
 hierarchy via either import or include.</description>
					<attribute name="@return">
						<description>the set of files in the entire hierarchy</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" returncomment="the stylesheet that this is the model for" type="Stylesheet" name="getStylesheet">
				<comment>
					<description>Get the stylesheet that this is the model for.</description>
					<attribute name="@return">
						<description>the stylesheet that this is the model for</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the set of files in the entire hierarchy" type="List" name="getGlobalVariables">
				<comment>
					<description>Get all global variables that are included in this stylesheet anywhere in
 the hierarchy via either import or include.</description>
					<attribute name="@return">
						<description>the set of files in the entire hierarchy</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the set of templates in the entire hierarchy" type="List" name="getTemplates">
				<comment>
					<description>Get all templates that are included in this stylesheet anywhere in the
 hierarchy via either import or include.</description>
					<attribute name="@return">
						<description>the set of templates in the entire hierarchy</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the set of named templates with the given name" type="List" name="getTemplatesByName">
				<comment>
					<description>Get all named templates that are included in this stylesheet anywhere in
 the hierarchy via either import or include which have the given name.</description>
					<attribute name="@param">
						<description>name
            the template name</description>
					</attribute>
					<attribute name="@return">
						<description>the set of named templates with the given name</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the template name" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the set of templates that match" type="List" name="findMatching">
				<comment>
					<description>Get all templates that match the given template (determined from
 &lt;code&gt;Template.equals()&lt;/code&gt;).</description>
					<attribute name="@param">
						<description>toMatch
            the template to match</description>
					</attribute>
					<attribute name="@return">
						<description>the set of templates that match</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Template" type="Template" comment="the template to match" name="toMatch" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" returncomment="&lt;code&gt;true&lt;/code&gt; if this has a circular reference" type="boolean" name="hasCircularReference">
				<comment>
					<description>Get whether this has a circular reference anywhere in its import/included
 hierarchy.</description>
					<attribute name="@return">
						<description>&lt;code&gt;true&lt;/code&gt; if this has a circular reference</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="fix">
				<comment>
					<description>Perform the process of traversing the hierarchy to determine all of the
 properties of this. Note that this method may force other
 &lt;code&gt;StylesheetModel&lt;/code&gt;&apos;s to be built during the process of fixing.</description>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSLElement" visibility="public" superclassfulltype="org.eclipse.wst.xsl.core.internal.model.XSLElement" fulltype="org.eclipse.wst.xsl.core.internal.model.Template" type="Template" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>The &lt;code&gt;xsl:template&lt;/code&gt; model element.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="variables" />
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="parameters" />
		</fields>
		<methods>
			<constructor visibility="public" name="Template">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>stylesheet the stylesheet that this belongs to</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" comment="the stylesheet that this belongs to" name="stylesheet" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="addParameter">
				<comment>
					<description>Add a parameter to this.</description>
					<attribute name="@param">
						<description>parameter the parameter to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Parameter" type="Parameter" comment="the parameter to add" name="parameter" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addVariable">
				<comment>
					<description>Add a variable to this.</description>
					<attribute name="@param">
						<description>var the variable to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Variable" type="Variable" comment="the variable to add" name="var" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the template name, or null" type="String" name="getName">
				<comment>
					<description>Get the value of the &lt;code&gt;name&lt;/code&gt; attribute if one exists.</description>
					<attribute name="@return">
						<description>the template name, or null</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the match value, or null" type="String" name="getMatch">
				<comment>
					<description>Get the value of the &lt;code&gt;match&lt;/code&gt; attribute if one exists.</description>
					<attribute name="@return">
						<description>the match value, or null</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the mode value, or null" type="String" name="getMode">
				<comment>
					<description>Get the value of the &lt;code&gt;mode&lt;/code&gt; attribute if one exists.</description>
					<attribute name="@return">
						<description>the mode value, or null</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the priority value, or null" type="String" name="getPriority">
				<comment>
					<description>Get the value of the &lt;code&gt;priority&lt;/code&gt; attribute if one exists.</description>
					<attribute name="@return">
						<description>the priority value, or null</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the list of parameters" type="List" name="getParameters">
				<comment>
					<description>Get the list of parameters of this.</description>
					<attribute name="@return">
						<description>the list of parameters</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="int" type="int" name="hashCode" />
			<method visibility="public" fulltype="boolean" type="boolean" name="equals">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="obj" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="toString" />
		</methods>
	</jelclass>
	<jelclass superclass="XSLElement" visibility="public" superclassfulltype="org.eclipse.wst.xsl.core.internal.model.XSLElement" fulltype="org.eclipse.wst.xsl.core.internal.model.Variable" type="Variable" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>The &lt;code&gt;xsl:variable&lt;/code&gt; model element.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="Variable">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>stylesheet the stylesheet that this belongs to</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" comment="the stylesheet that this belongs to" name="stylesheet" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" returncomment="the variable name, or null" type="String" name="getName">
				<comment>
					<description>Get the value of the &lt;code&gt;name&lt;/code&gt; attribute if one exists.</description>
					<attribute name="@return">
						<description>the variable name, or null</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the select value, or null" type="String" name="getSelect">
				<comment>
					<description>Get the value of the &lt;code&gt;select&lt;/code&gt; attribute if one exists.</description>
					<attribute name="@return">
						<description>the select value, or null</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSLNode" visibility="public" superclassfulltype="org.eclipse.wst.xsl.core.internal.model.XSLNode" fulltype="org.eclipse.wst.xsl.core.internal.model.XSLAttribute" type="XSLAttribute" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>An attribute of an element in the XSL namespace.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="package-private" fulltype="java.lang.String" type="String" final="true" name="name" />
			<field visibility="package-private" fulltype="java.lang.String" type="String" final="true" name="value" />
		</fields>
		<methods>
			<constructor visibility="public" name="XSLAttribute">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>element the element this belongs to</description>
					</attribute>
					<attribute name="@param">
						<description>name the name of the attribute</description>
					</attribute>
					<attribute name="@param">
						<description>value the value of the attribute</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.XSLElement" type="XSLElement" comment="the element this belongs to" name="element" />
					<param fulltype="java.lang.String" type="String" comment="the name of the attribute" name="name" />
					<param fulltype="java.lang.String" type="String" comment="the value of the attribute" name="value" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" returncomment="the attribute&apos;s name" type="String" name="getName">
				<comment>
					<description>Get the name of this.</description>
					<attribute name="@return">
						<description>the attribute&apos;s name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the attribute&apos;s value" type="String" name="getValue">
				<comment>
					<description>Get the value of this.</description>
					<attribute name="@return">
						<description>the attribute&apos;s value</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSLNode" visibility="public" superclassfulltype="org.eclipse.wst.xsl.core.internal.model.XSLNode" fulltype="org.eclipse.wst.xsl.core.internal.model.XSLElement" type="XSLElement" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>An element in the XSL namespace.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="package-private" fulltype="java.util.Map" type="Map" final="true" name="attributes" />
			<field visibility="package-private" fulltype="java.util.List" type="List" final="true" name="childElements" />
		</fields>
		<methods>
			<constructor visibility="public" name="XSLElement">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>stylesheet the stylesheet that this belongs to</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" comment="the stylesheet that this belongs to" name="stylesheet" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="setAttribute">
				<comment>
					<description>Add an attribute of this</description>
					<attribute name="@param">
						<description>attribute the attribute to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.XSLAttribute" type="XSLAttribute" comment="the attribute to add" name="attribute" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.model.XSLAttribute" returncomment="the attribute" type="XSLAttribute" name="getAttribute">
				<comment>
					<description>Get the attribute with the given name.</description>
					<attribute name="@param">
						<description>name the name of the attribute</description>
					</attribute>
					<attribute name="@return">
						<description>the attribute</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the name of the attribute" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="java.util.Map" returncomment="the map of attribute names and instances" type="Map" name="getAttributes">
				<comment>
					<description>Get the attributes keyed by their names.</description>
					<attribute name="@return">
						<description>the map of attribute names and instances</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the attribute value" type="String" name="getAttributeValue">
				<comment>
					<description>Get the value of the attribute with the given name.</description>
					<attribute name="@param">
						<description>name the name of the attribute</description>
					</attribute>
					<attribute name="@return">
						<description>the attribute value</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the name of the attribute" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addChild">
				<comment>
					<description>Add a child element of this.</description>
					<attribute name="@param">
						<description>element the chold element</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.XSLElement" type="XSLElement" comment="the chold element" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the list of children" type="List" name="getChildElements">
				<comment>
					<description>Get the list of child elements</description>
					<attribute name="@return">
						<description>the list of children</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="PlatformObject" visibility="public" superclassfulltype="PlatformObject" fulltype="org.eclipse.wst.xsl.core.internal.model.XSLNode" type="XSLNode" abstract="true" package="org.eclipse.wst.xsl.core.internal.model">
		<comment>
			<description>A node in the XSL namespace.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="short" type="short" final="true" constexpr="1" const="1" name="ELEMENT_NODE" static="true">
				<comment>
					<description>A constant for the element node (= &lt;code&gt;org.w3c.dom.Node.ELEMENT_NODE&lt;/code&gt;)</description>
				</comment>
			</field>
			<field visibility="public" fulltype="short" type="short" final="true" constexpr="2" const="2" name="ATTRIBUTE_NODE" static="true">
				<comment>
					<description>A constant for the attribute node (= &lt;code&gt;org.w3c.dom.Node.ATTRIBUTE_NODE&lt;/code&gt;)</description>
				</comment>
			</field>
			<field visibility="package-private" fulltype="int" type="int" name="lineNumber" />
			<field visibility="package-private" fulltype="int" type="int" name="columnNumber" />
		</fields>
		<methods>
			<constructor visibility="public" name="XSLNode">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>stylesheet the stylesheet this belongs to</description>
					</attribute>
					<attribute name="@param">
						<description>type one of &lt;code&gt;ELEMENT_NODE&lt;/code&gt; or &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt;</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" type="Stylesheet" comment="the stylesheet this belongs to" name="stylesheet" />
					<param fulltype="short" type="short" comment="one of &lt;code&gt;ELEMENT_NODE&lt;/code&gt; or &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt;" name="type" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="setLineNumber">
				<comment>
					<description>Set the line number where this node occurs in the XSL file.</description>
					<attribute name="@param">
						<description>lineNumber the line number</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="int" type="int" comment="the line number" name="lineNumber" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setColumnNumber">
				<comment>
					<description>Set the columns number where this node occurs in the XSL file.</description>
					<attribute name="@param">
						<description>columnNumber the column number</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="int" type="int" comment="the column number" name="columnNumber" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.model.Stylesheet" returncomment="the stylesheet" type="Stylesheet" name="getStylesheet">
				<comment>
					<description>Get the stylesheet that this belongs to.</description>
					<attribute name="@return">
						<description>the stylesheet</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="int" returncomment="the line number where this node occurs in the XSL file." type="int" name="getLineNumber">
				<comment>
					<description>Set the line number where this node occurs in the XSL file.</description>
					<attribute name="@return">
						<description>the line number where this node occurs in the XSL file.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="int" returncomment="the column number where this node occurs in the XSL file." type="int" name="getColumnNumber">
				<comment>
					<description>Set the column number where this node occurs in the XSL file.</description>
					<attribute name="@return">
						<description>the column number where this node occurs in the XSL file.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setOffset">
				<comment>
					<description>Set the document offset where this node occurs.</description>
					<attribute name="@param">
						<description>offset the document offset</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="int" type="int" comment="the document offset" name="offset" />
				</params>
			</method>
			<method visibility="public" fulltype="int" returncomment="the document offset" type="int" name="getOffset">
				<comment>
					<description>Get the document offset where this node occurs.</description>
					<attribute name="@return">
						<description>the document offset</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setLength">
				<comment>
					<description>Set the length of this node.</description>
					<attribute name="@param">
						<description>length the node length</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="int" type="int" comment="the node length" name="length" />
				</params>
			</method>
			<method visibility="public" fulltype="int" returncomment="the node length" type="int" name="getLength">
				<comment>
					<description>Get the length of this node.</description>
					<attribute name="@return">
						<description>the node length</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="short" returncomment="one of &lt;code&gt;ELEMENT_NODE&lt;/code&gt; or &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt;" type="short" name="getNodeType">
				<comment>
					<description>Get the type of node.</description>
					<attribute name="@return">
						<description>one of &lt;code&gt;ELEMENT_NODE&lt;/code&gt; or &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt;</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="toString" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractPreferenceInitializer" visibility="public" superclassfulltype="AbstractPreferenceInitializer" fulltype="org.eclipse.wst.xsl.core.internal.preferences.PreferenceInitializer" type="PreferenceInitializer" package="org.eclipse.wst.xsl.core.internal.preferences">
		<comment>
			<description>Preferences initializer for XSL core preferences.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="PreferenceInitializer" />
			<method visibility="public" fulltype="void" type="void" name="initializeDefaultPreferences" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.internal.util.Debug" type="Debug" final="true" package="org.eclipse.wst.xsl.core.internal.util">
		<comment>
			<description>Debug Class is used to determine when Debugging output to system out.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="checkForMemoryLeaks" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="collectStats" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="DEBUG" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="DEBUG_THREADLOCAL" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugBreakpoints" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugCaretMediator" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugDisplayTreePositions" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugMediator" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugNotification" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugNotificationAndEvents" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugNotifyDeferred" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugReconciling" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugRtfFormatProvider" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugStructuredDocument" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugTaglibs" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugTokenizer" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugLauncher" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugXSLModel" static="true">
				<comment>
					<description>Output Modeling Messages.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugTreeModel" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="debugUpdateTreePositions" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="displayInfo" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="true" const="true" name="displayToConsole" static="true">
				<comment>
					<description>effects output of Logger</description>
				</comment>
			</field>
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="displayWarnings" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="headParsing" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="jsDebugContextAssist" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="jsDebugSyntaxColoring" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="LOCKS" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="perfTest" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="perfTestAdapterClassLoading" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="perfTestFormat" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="perfTestRawStructuredDocumentOnly" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="perfTestStructuredDocumentEventOnly" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="perfTestStructuredDocumentOnly" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="syntaxHighlighting" static="true" />
			<field visibility="public" fulltype="boolean" type="boolean" final="true" constexpr="false" const="false" name="useStandardEolInWidget" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="Debug">
				<comment>
					<description>Debug constructor comment.</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="void" type="void" final="true" name="dump" static="true">
				<comment>
					<description>For tests and debug only</description>
				</comment>
				<params>
					<param fulltype="IStructuredDocument" type="IStructuredDocument" name="structuredDocument" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="dump" static="true">
				<params>
					<param fulltype="IStructuredDocument" type="IStructuredDocument" name="structuredDocument" />
					<param fulltype="boolean" type="boolean" name="verbose" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" synchronized="true" final="true" name="println" static="true">
				<comment>
					<description>Simple utility to make sure println&apos;s are some what in order</description>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" name="msg" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" final="true" name="toStringUtil" static="true">
				<params>
					<param fulltype="IStructuredDocument" type="IStructuredDocument" name="object" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.internal.util.FileUtil" type="FileUtil" package="org.eclipse.wst.xsl.core.internal.util">
		<comment>
			<description>This is a general file utility class.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="FileUtil" />
			<method visibility="public" fulltype="boolean" returncomment="True if it is a XML file, false otherwise." type="boolean" name="isXMLFile" static="true">
				<comment>
					<description>Determines if a file is one of the valid XML content types.</description>
					<attribute name="@param">
						<description>file The input IFile to check</description>
					</attribute>
					<attribute name="@return">
						<description>True if it is a XML file, false otherwise.</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="The input IFile to check" name="file" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" returncomment="True if it is a XSLT file, false otherwise." type="boolean" name="isXSLFile" static="true">
				<comment>
					<description>Determines if a file is a XSLT File.</description>
					<attribute name="@param">
						<description>file The input IFile to check.</description>
					</attribute>
					<attribute name="@return">
						<description>True if it is a XSLT file, false otherwise.</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="The input IFile to check." name="file" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.internal.util.StructuredDocumentUtil" type="StructuredDocumentUtil" package="org.eclipse.wst.xsl.core.internal.util">
		<comment>
			<description>General Purpose utility classes to convert from StructuredDocument to DOM.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="StructuredDocumentUtil" />
			<method visibility="public" fulltype="IDOMNode" returncomment="IDOMNode" type="IDOMNode" name="getNode" static="true">
				<comment>
					<description>Given a StructuredDocumentRegion and a TextRegion, return a
 IDOMNode for that particular position in the StructuredDocument</description>
					<attribute name="@param">
						<description>documentRegion</description>
					</attribute>
					<attribute name="@param">
						<description>textRegion</description>
					</attribute>
					<attribute name="@return">
						<description>IDOMNode</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" comment="" name="documentRegion" />
					<param fulltype="ITextRegion" type="ITextRegion" comment="" name="textRegion" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Exception" visibility="public" superclassfulltype="java.lang.Exception" fulltype="org.eclipse.wst.xsl.core.internal.validation.MaxErrorsExceededException" type="MaxErrorsExceededException" serializable="true" package="org.eclipse.wst.xsl.core.internal.validation">
		<comment>
			<description>An exception used to indicate whether the maximum number of errors has been reached 
 for a given Stylesheet validation.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="MaxErrorsExceededException" />
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xsl.core.internal.validation.Messages" type="Messages" package="org.eclipse.wst.xsl.core.internal.validation">
		<comment>
			<description>Messages for the validator.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_1" static="true">
				<comment>
					<description>Invalid xpath.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_10" static="true">
				<comment>
					<description>Stylesheet importing itself</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_11" static="true">
				<comment>
					<description>Template conflict (internal)</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_12" static="true">
				<comment>
					<description>Template conflict (included)</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_13" static="true">
				<comment>
					<description>Template conflict (external)</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_14" static="true">
				<comment>
					<description>Parameter missing name attribute</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_15" static="true">
				<comment>
					<description>Parameter with empty name attribute</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_16" static="true">
				<comment>
					<description>Duplicate parameter</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_18" static="true">
				<comment>
					<description>Unresolved named template</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_2" static="true">
				<comment>
					<description>Circular reference</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_20" static="true">
				<comment>
					<description>Parameter without default value</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_22" static="true">
				<comment>
					<description>Parameter does not exist</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_23" static="true">
				<comment>
					<description>href attribute is required</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_3" static="true">
				<comment>
					<description>Missing parameter</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_4" static="true">
				<comment>
					<description>Unresolved include</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_6" static="true">
				<comment>
					<description>Stylesheet includes itself</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLValidator_8" static="true">
				<comment>
					<description>Unresolved import</description>
				</comment>
			</field>
		</fields>
	</jelclass>
	<jelclass superclass="ValidationMessage" visibility="public" superclassfulltype="ValidationMessage" fulltype="org.eclipse.wst.xsl.core.internal.validation.XSLValidationMessage" type="XSLValidationMessage" package="org.eclipse.wst.xsl.core.internal.validation">
		<comment>
			<description>A validation message specific to the XSL validator which adds the ability 
 to specify the XSL node.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
			<attribute name="@see">
				<description>org.eclipse.wst.xml.core.internal.validation.core.ValidationMessage</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLValidationMessage">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>message
            The message for the validation message.</description>
					</attribute>
					<attribute name="@param">
						<description>lineNumber
            The line location of the message.</description>
					</attribute>
					<attribute name="@param">
						<description>columnNumber
            The column location of the message.</description>
					</attribute>
					<attribute name="@param">
						<description>uri
            The uri of the file the message is for.</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="The message for the validation message." name="message" />
					<param fulltype="int" type="int" comment="The line location of the message." name="lineNumber" />
					<param fulltype="int" type="int" comment="The column location of the message." name="columnNumber" />
					<param fulltype="java.lang.String" type="String" comment="The uri of the file the message is for." name="uri" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="setNode">
				<comment>
					<description>Set the node that this message applies to.</description>
					<attribute name="@param">
						<description>node the node</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.XSLNode" type="XSLNode" comment="the node" name="node" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.model.XSLNode" returncomment="the node" type="XSLNode" name="getNode">
				<comment>
					<description>Get the node that this message applies to.</description>
					<attribute name="@return">
						<description>the node</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="toString" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.internal.validation.XSLValidationReport" type="XSLValidationReport" package="org.eclipse.wst.xsl.core.internal.validation">
		<comment>
			<description>A validation report for the XSL validator.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
			<attribute name="@see">
				<description>org.eclipse.wst.xml.core.internal.validation.core.ValidationReport</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLValidationReport">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>uri
            the URI of the entity that this report applies to</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the URI of the entity that this report applies to" name="uri" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.util.List" returncomment="error level validation messages" type="List" name="getErrors">
				<comment>
					<description>Get the error level validation messages.</description>
					<attribute name="@return">
						<description>error level validation messages</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="warn level validation messages" type="List" name="getWarnings">
				<comment>
					<description>Get the warn level validation messages.</description>
					<attribute name="@return">
						<description>warn level validation messages</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="ValidationMessage" returncomment="the validation message created" type="ValidationMessage" name="addError">
				<comment>
					<description>Add an error message for the given XSL node.</description>
					<attribute name="@param">
						<description>node
            the node the error applies to</description>
					</attribute>
					<attribute name="@param">
						<description>message
            the message to associate with the node</description>
					</attribute>
					<attribute name="@return">
						<description>the validation message created</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.XSLNode" type="XSLNode" comment="the node the error applies to" name="node" />
					<param fulltype="java.lang.String" type="String" comment="the message to associate with the node" name="message" />
				</params>
			</method>
			<method visibility="public" fulltype="ValidationMessage" returncomment="the validation message created" type="ValidationMessage" name="addWarning">
				<comment>
					<description>Add an warning message for the given XSL node.</description>
					<attribute name="@param">
						<description>node
            the node the warning applies to</description>
					</attribute>
					<attribute name="@param">
						<description>message
            the message to associate with the node</description>
					</attribute>
					<attribute name="@return">
						<description>the validation message created</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.XSLNode" type="XSLNode" comment="the node the warning applies to" name="node" />
					<param fulltype="java.lang.String" type="String" comment="the message to associate with the node" name="message" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the URI" type="String" name="getFileURI">
				<comment>
					<description>Get the URI that this report applies to.</description>
					<attribute name="@return">
						<description>the URI</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.HashMap" returncomment="null" type="HashMap" name="getNestedMessages">
				<comment>
					<attribute name="@see">
						<description>org.eclipse.wst.xml.core.internal.validation.core.getNestedMessages</description>
					</attribute>
					<attribute name="@return">
						<description>null</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="ValidationMessage[]" returncomment="An array of validation messages." type="ValidationMessage" name="getValidationMessages">
				<comment>
					<description>Returns an array of validation messages.</description>
					<attribute name="@return">
						<description>An array of validation messages.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="boolean" returncomment="True if the file is valid, false otherwise." type="boolean" name="isValid">
				<comment>
					<description>Returns whether the file is valid. The file may have warnings associated with it.</description>
					<attribute name="@return">
						<description>True if the file is valid, false otherwise.</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.internal.validation.XSLValidator" type="XSLValidator" package="org.eclipse.wst.xsl.core.internal.validation">
		<comment>
			<description>The XSL validator for workspace XSL files.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="ValidationReport" returncomment="the validation report" type="ValidationReport" name="validate">
				<comment>
					<description>Validate the given XSL file. Same as &lt;code&gt;validate(xslFile,report,forceBuild)&lt;/code&gt; except a new report is created and returned.</description>
					<attribute name="@param">
						<description>xslFile the XSL file</description>
					</attribute>
					<attribute name="@param">
						<description>forceBuild true if build should always be forced</description>
					</attribute>
					<attribute name="@return">
						<description>the validation report</description>
					</attribute>
					<attribute name="@throws">
						<description>CoreException if any exception occurs while validating</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="the XSL file" name="xslFile" />
					<param fulltype="boolean" type="boolean" comment="true if build should always be forced" name="forceBuild" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" comment="if any exception occurs while validating" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" returncomment="the validation report" type="void" name="validate">
				<comment>
					<description>Validate the given XSL file using the specified report.</description>
					<attribute name="@param">
						<description>xslFile the XSL file</description>
					</attribute>
					<attribute name="@param">
						<description>report the report to use for reporting validation errors</description>
					</attribute>
					<attribute name="@param">
						<description>forceBuild true if build should always be forced</description>
					</attribute>
					<attribute name="@return">
						<description>the validation report</description>
					</attribute>
					<attribute name="@throws">
						<description>CoreException if any exception occurs while validating</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IFile" type="IFile" comment="the XSL file" name="xslFile" />
					<param fulltype="org.eclipse.wst.xsl.core.internal.validation.XSLValidationReport" type="XSLValidationReport" comment="the report to use for reporting validation errors" name="report" />
					<param fulltype="boolean" type="boolean" comment="true if build should always be forced" name="forceBuild" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" comment="if any exception occurs while validating" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.validation.XSLValidator" returncomment="the singleson XSLValidator instance" type="XSLValidator" name="getInstance" static="true">
				<comment>
					<description>Get the singleton XSLValidator instance.</description>
					<attribute name="@return">
						<description>the singleson XSLValidator instance</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractNestedValidator" visibility="public" superclassfulltype="AbstractNestedValidator" fulltype="org.eclipse.wst.xsl.core.internal.validation.eclipse.Validator" type="Validator" package="org.eclipse.wst.xsl.core.internal.validation.eclipse">
		<comment>
			<description>The XSL validator extends the XML &lt;code&gt;AbstractNestedValidator&lt;/code&gt;.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="Validator" />
			<method visibility="public" fulltype="void" type="void" name="clean">
				<params>
					<param fulltype="IProject" type="IProject" name="project" />
					<param fulltype="ValidationState" type="ValidationState" name="state" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" name="monitor" />
				</params>
			</method>
			<method visibility="public" fulltype="ValidationResult" type="ValidationResult" name="validate">
				<params>
					<param fulltype="IResource" type="IResource" name="resource" />
					<param fulltype="int" type="int" name="kind" />
					<param fulltype="ValidationState" type="ValidationState" name="state" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" name="monitor" />
				</params>
			</method>
			<method visibility="public" fulltype="IStatus" type="IStatus" name="validateInJob">
				<params>
					<param fulltype="IValidationContext" type="IValidationContext" name="context" />
					<param fulltype="IReporter" type="IReporter" name="reporter" />
				</params>
				<exceptions>
					<exception fulltype="ValidationException" type="ValidationException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="ValidationReport" type="ValidationReport" name="validate">
				<params>
					<param fulltype="java.lang.String" type="String" name="uri" />
					<param fulltype="java.io.InputStream" type="InputStream" name="inputstream" />
					<param fulltype="NestedValidatorContext" type="NestedValidatorContext" name="context" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="addInfoToMessage">
				<params>
					<param fulltype="ValidationMessage" type="ValidationMessage" name="validationMessage" />
					<param fulltype="IMessage" type="IMessage" name="message" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractValidator" visibility="public" superclassfulltype="AbstractValidator" fulltype="org.eclipse.wst.xsl.core.internal.validation.eclipse.Validator2" type="Validator2" package="org.eclipse.wst.xsl.core.internal.validation.eclipse">
		<comment>
			<description>Validator for both build validation (AbstractValidator) and as-you-type validation (IValidatorJob).</description>
			<attribute name="@author">
				<description>Doug</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="Validator2" />
			<method visibility="public" fulltype="void" type="void" name="clean">
				<params>
					<param fulltype="IProject" type="IProject" name="project" />
					<param fulltype="ValidationState" type="ValidationState" name="state" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" name="monitor" />
				</params>
			</method>
			<method visibility="public" fulltype="ValidationResult" type="ValidationResult" name="validate">
				<params>
					<param fulltype="IResource" type="IResource" name="resource" />
					<param fulltype="int" type="int" name="kind" />
					<param fulltype="ValidationState" type="ValidationState" name="state" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" name="monitor" />
				</params>
			</method>
			<method visibility="public" fulltype="ISchedulingRule" type="ISchedulingRule" name="getSchedulingRule">
				<params>
					<param fulltype="IValidationContext" type="IValidationContext" name="helper" />
				</params>
			</method>
			<method visibility="public" fulltype="IStatus" type="IStatus" name="validateInJob">
				<params>
					<param fulltype="IValidationContext" type="IValidationContext" name="helper" />
					<param fulltype="IReporter" type="IReporter" name="reporter" />
				</params>
				<exceptions>
					<exception fulltype="ValidationException" type="ValidationException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="cleanup">
				<params>
					<param fulltype="IReporter" type="IReporter" name="reporter" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="validate">
				<params>
					<param fulltype="IValidationContext" type="IValidationContext" name="helper" />
					<param fulltype="IReporter" type="IReporter" name="reporter" />
				</params>
				<exceptions>
					<exception fulltype="ValidationException" type="ValidationException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.internal.xinclude.XIncluder" type="XIncluder" package="org.eclipse.wst.xsl.core.internal.xinclude">
		<comment>
			<description>XIncluder will read an XML file, that has elements from the XInclude
 namespace and follows the W3C XInclude specification (http://www.w3.org/TR/xinclude/).
 It will output a merged file.</description>
			<attribute name="@author">
				<description>Lars Vogel</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XIncluder" />
			<method visibility="public" fulltype="void" type="void" name="extractXMLFile">
				<comment>
					<description>extracXMLFile merges the files referenced by xinclude include elements.</description>
					<attribute name="@param">
						<description>in  The full path to the input XML file</description>
					</attribute>
					<attribute name="@param">
						<description>out The full path to the merged XML file</description>
					</attribute>
					<attribute name="@throws">
						<description>Exception</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="The full path to the input XML file" name="in" />
					<param fulltype="java.lang.String" type="String" comment="The full path to the merged XML file" name="out" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" comment="" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.resolver.ResolverExtension" type="ResolverExtension" package="org.eclipse.wst.xsl.core.resolver">
		<comment>
			<description>TODO: Javadoc</description>
			<attribute name="@author">
				<description>Jesper Steen Moeller</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="ResolverExtension" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="resolve">
				<params>
					<param fulltype="IFile" type="IFile" name="file" />
					<param fulltype="java.lang.String" type="String" name="baseLocation" />
					<param fulltype="java.lang.String" type="String" name="publicId" />
					<param fulltype="java.lang.String" type="String" name="systemId" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="DefaultHandler" visibility="public" superclassfulltype="org.xml.sax.helpers.DefaultHandler" fulltype="org.eclipse.wst.xsl.core.resolver.XSLVersionHandler" type="XSLVersionHandler" final="true" package="org.eclipse.wst.xsl.core.resolver">
		<implements>
			<interface fulltype="org.xml.sax.ext.LexicalHandler" type="LexicalHandler" />
			<interface fulltype="org.xml.sax.ErrorHandler" type="ErrorHandler" />
		</implements>
		<comment>
			<description>A simple XML parser to find the XSL version of a given XML file, expectedly a XSLT stylesheet.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLVersionHandler">
				<comment>
					<description>TODO: Add Javadoc</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="void" type="void" final="true" name="comment">
				<params>
					<param fulltype="char[]" type="char" name="ch" />
					<param fulltype="int" type="int" name="start" />
					<param fulltype="int" type="int" name="length" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="endCDATA" />
			<method visibility="public" fulltype="void" type="void" final="true" name="endDTD" />
			<method visibility="public" fulltype="void" type="void" final="true" name="endEntity">
				<params>
					<param fulltype="java.lang.String" type="String" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="" type="String" name="getVersionAttribute">
				<comment>
					<description>TODO: Add Javadoc</description>
					<attribute name="@return" />
				</comment>
			</method>
			<method visibility="public" fulltype="boolean" returncomment="" type="boolean" name="parseContents">
				<comment>
					<description>TODO: Add Javadoc</description>
					<attribute name="@param">
						<description>contents</description>
					</attribute>
					<attribute name="@return" />
					<attribute name="@throws">
						<description>IOException</description>
					</attribute>
					<attribute name="@throws">
						<description>ParserConfigurationException</description>
					</attribute>
					<attribute name="@throws">
						<description>SAXException</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.xml.sax.InputSource" type="InputSource" comment="" name="contents" />
				</params>
				<exceptions>
					<exception fulltype="java.io.IOException" type="IOException" comment="" />
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" comment="" />
					<exception fulltype="org.xml.sax.SAXException" type="SAXException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.xml.sax.InputSource" type="InputSource" name="resolveEntity">
				<params>
					<param fulltype="java.lang.String" type="String" name="publicId" />
					<param fulltype="java.lang.String" type="String" name="systemId" />
				</params>
				<exceptions>
					<exception fulltype="org.xml.sax.SAXException" type="SAXException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="startCDATA" />
			<method visibility="public" fulltype="void" type="void" final="true" name="startDTD">
				<params>
					<param fulltype="java.lang.String" type="String" name="name" />
					<param fulltype="java.lang.String" type="String" name="publicId" />
					<param fulltype="java.lang.String" type="String" name="systemId" />
				</params>
				<exceptions>
					<exception fulltype="org.xml.sax.SAXException" type="SAXException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="startElement">
				<params>
					<param fulltype="java.lang.String" type="String" name="uri" />
					<param fulltype="java.lang.String" type="String" name="elementName" />
					<param fulltype="java.lang.String" type="String" name="qualifiedName" />
					<param fulltype="org.xml.sax.Attributes" type="Attributes" name="attributes" />
				</params>
				<exceptions>
					<exception fulltype="org.xml.sax.SAXException" type="SAXException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="startEntity">
				<params>
					<param fulltype="java.lang.String" type="String" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="warning">
				<params>
					<param fulltype="org.xml.sax.SAXParseException" type="SAXParseException" name="e" />
				</params>
				<exceptions>
					<exception fulltype="org.xml.sax.SAXException" type="SAXException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="error">
				<params>
					<param fulltype="org.xml.sax.SAXParseException" type="SAXParseException" name="e" />
				</params>
				<exceptions>
					<exception fulltype="org.xml.sax.SAXException" type="SAXException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="fatalError">
				<params>
					<param fulltype="org.xml.sax.SAXParseException" type="SAXParseException" name="e" />
				</params>
				<exceptions>
					<exception fulltype="org.xml.sax.SAXException" type="SAXException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractDocumentLoader" visibility="public" superclassfulltype="AbstractDocumentLoader" fulltype="org.eclipse.wst.xsl.core.internal.encoding.XSLDocumentLoader" type="XSLDocumentLoader" package="org.eclipse.wst.xsl.core.internal.encoding">
		<comment>
			<description>This class reads an XSL file and creates an XML Structured Model.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLDocumentLoader" />
			<method visibility="public" fulltype="IDocumentPartitioner" type="IDocumentPartitioner" name="getDefaultDocumentPartitioner" />
			<method visibility="public" fulltype="IDocumentCharsetDetector" type="IDocumentCharsetDetector" name="getDocumentEncodingDetector" />
			<method visibility="public" fulltype="RegionParser" type="RegionParser" name="getParser" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getSpecDefaultEncoding" />
			<method visibility="protected" fulltype="IEncodedDocument" type="IEncodedDocument" name="newEncodedDocument" />
			<method visibility="public" fulltype="IDocumentLoader" type="IDocumentLoader" name="newInstance" />
		</methods>
	</jelclass>
	<jelclass superclass="ModelHandlerForXML" visibility="public" superclassfulltype="ModelHandlerForXML" fulltype="org.eclipse.wst.xsl.core.internal.modelhandler.ModelHandlerForXSL" type="ModelHandlerForXSL" package="org.eclipse.wst.xsl.core.internal.modelhandler">
		<comment>
			<description>Provides generic XML model handling. It is also marked as the default
 content type handler. There should be only one implementation of the
 default.</description>
		</comment>
		<fields>
			<field visibility="package-private" fulltype="java.lang.String" type="String" name="AssociatedContentTypeID" static="true">
				<comment>
					<description>Needs to match what&apos;s in plugin registry. In fact, can be overwritten
 at run time with what&apos;s in registry! (so should never be &apos;final&apos;)</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="ModelHandlerForXSL" />
			<method visibility="public" fulltype="IDocumentLoader" type="IDocumentLoader" name="getDocumentLoader" />
			<method visibility="public" fulltype="IDocumentCharsetDetector" type="IDocumentCharsetDetector" name="getEncodingDetector" />
			<method visibility="public" fulltype="IModelLoader" type="IModelLoader" name="getModelLoader" />
		</methods>
	</jelclass>
	<jelclass superclass="XMLModelLoader" visibility="public" superclassfulltype="XMLModelLoader" fulltype="org.eclipse.wst.xsl.core.internal.modelhandler.XSLModelLoader" type="XSLModelLoader" package="org.eclipse.wst.xsl.core.internal.modelhandler">
		<comment>
			<description>This class reads an XML file and creates an XML Structured Model.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLModelLoader">
				<comment>
					<description>XMLLoader constructor comment.</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="IDocumentLoader" type="IDocumentLoader" name="getDocumentLoader" />
			<method visibility="public" fulltype="IModelLoader" type="IModelLoader" name="newInstance" />
			<method visibility="public" fulltype="IStructuredModel" type="IStructuredModel" name="newModel" />
			<method visibility="protected" fulltype="void" type="void" name="preLoadAdapt">
				<params>
					<param fulltype="IStructuredModel" type="IStructuredModel" name="structuredModel" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XMLSourceParser" visibility="public" superclassfulltype="XMLSourceParser" fulltype="org.eclipse.wst.xsl.core.internal.parser.XSLSourceParser" type="XSLSourceParser" package="org.eclipse.wst.xsl.core.internal.parser">
		<methods>
			<constructor visibility="public" name="XSLSourceParser" />
			<method visibility="public" fulltype="RegionParser" type="RegionParser" name="newInstance" />
			<method visibility="protected" fulltype="void" type="void" name="setTokenizer">
				<params>
					<param fulltype="BlockTokenizer" type="BlockTokenizer" name="newTokenizer" />
				</params>
			</method>
			<method visibility="protected" fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" name="parseNodes" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.core.internal.parser.regions.XPathSeparatorRegion" type="XPathSeparatorRegion" package="org.eclipse.wst.xsl.core.internal.parser.regions">
		<methods>
			<constructor visibility="public" name="XPathSeparatorRegion" />
			<constructor visibility="public" name="XPathSeparatorRegion">
				<params>
					<param fulltype="int" type="int" name="start" />
					<param fulltype="int" type="int" name="textLength" />
					<param fulltype="int" type="int" name="length" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="adjustLength">
				<params>
					<param fulltype="int" type="int" name="i" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="adjustStart">
				<params>
					<param fulltype="int" type="int" name="i" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="adjustTextLength">
				<params>
					<param fulltype="int" type="int" name="i" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="equatePositions">
				<params>
					<param fulltype="ITextRegion" type="ITextRegion" name="region" />
				</params>
			</method>
			<method visibility="public" fulltype="int" type="int" name="getEnd" />
			<method visibility="public" fulltype="int" type="int" name="getLength" />
			<method visibility="public" fulltype="int" type="int" name="getStart" />
			<method visibility="public" fulltype="int" type="int" name="getTextEnd" />
			<method visibility="public" fulltype="int" type="int" name="getTextLength" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getType" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="toString" />
			<method visibility="public" fulltype="StructuredDocumentEvent" type="StructuredDocumentEvent" name="updateRegion">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="requester" />
					<param fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" name="parent" />
					<param fulltype="java.lang.String" type="String" name="changes" />
					<param fulltype="int" type="int" name="requestStart" />
					<param fulltype="int" type="int" name="lengthToReplace" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.regions.XPathRegionContext" type="XPathRegionContext" abstract="true" interface="true" package="org.eclipse.wst.xsl.core.internal.regions">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;BLOCK_TEXT&quot;" const="BLOCK_TEXT" name="BLOCK_TEXT" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;UNDEFINED&quot;" const="UNDEFINED" name="UNDEFINED" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;WHITE_SPACE&quot;" const="WHITE_SPACE" name="WHITE_SPACE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;XPATH_CONTENT&quot;" const="XPATH_CONTENT" name="XPATH_CONTENT" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;XPATH_SEPARATOR_DIV&quot;" const="XPATH_SEPARATOR_DIV" name="XPATH_SEPARATOR_DIV" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;XPATH_FUNCTION_PARAMETERS_OPEN&quot;" const="XPATH_FUNCTION_PARAMETERS_OPEN" name="XPATH_FUNCTION_PARAMETERS_OPEN" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;XPATH_FUNCTION_PARAMETERS_CLOSE&quot;" const="XPATH_FUNCTION_PARAMETERS_CLOSE" name="XPATH_FUNCTION_PARAMETERS_CLOSE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;XPATH_FUNCTION_NAME&quot;" const="XPATH_FUNCTION_NAME" name="XPATH_FUNCTION_NAME" static="true" />
		</fields>
	</jelclass>
	<jelclass superclass="XMLParserRegionFactory" visibility="public" superclassfulltype="XMLParserRegionFactory" fulltype="org.eclipse.wst.xsl.core.internal.regions.XSLParserRegionFactory" type="XSLParserRegionFactory" package="org.eclipse.wst.xsl.core.internal.regions">
		<methods>
			<constructor visibility="public" name="XSLParserRegionFactory" />
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.text.IXSLPartitions" type="IXSLPartitions" abstract="true" interface="true" package="org.eclipse.wst.xsl.core.internal.text">
		<comment>
			<description>This interface is not intended to be implemented.
 It defines the partition types for XSL.
 Clients should reference the partition type Strings defined here directly.</description>
			<attribute name="@since">
				<description>0.5M7</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.XSL_XPATH&quot;" const="org.eclipse.wst.xsl.XSL_XPATH" name="XSL_XPATH" static="true" />
		</fields>
	</jelclass>
	<jelclass superclass="StructuredTextPartitionerForXML" visibility="public" superclassfulltype="StructuredTextPartitionerForXML" fulltype="org.eclipse.wst.xsl.core.internal.text.rules.StructuredTextPartitionerForXSL" type="StructuredTextPartitionerForXSL" package="org.eclipse.wst.xsl.core.internal.text.rules">
		<comment>
			<description>Contains information specific to setting up Structured Document Partions 
 in XSL documents.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="StructuredTextPartitionerForXSL">
				<comment>
					<description>The StructuredTextPartitionerForXSL adds the necessary
 Partition types to help Identify potential XPath areas.
 This is also used for Line Styling and Content Assistance.</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getPartitionType">
				<params>
					<param fulltype="ITextRegion" type="ITextRegion" name="region" />
					<param fulltype="int" type="int" name="offset" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String[]" type="String" name="getConfiguredContentTypes" static="true" />
			<method visibility="public" fulltype="IDocumentPartitioner" type="IDocumentPartitioner" name="newInstance" />
		</methods>
	</jelclass>
	<jelclass superclass="Lexer" visibility="public" superclassfulltype="Lexer" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.XPathParserLexer" type="XPathParserLexer" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="26" const="26" name="LT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="8" const="8" name="STAR" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="5" const="5" name="DOUBLE_SLASH" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="19" const="19" name="DOLLAR_SIGN" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="33" const="33" name="MOD" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="23" const="23" name="KW_AND" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="13" const="13" name="LEFT_BRACKET" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="29" const="29" name="GTE" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="18" const="18" name="NUMBER" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="17" const="17" name="LITERAL" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="24" const="24" name="EQUALS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="31" const="31" name="MINUS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="38" const="38" name="Tokens" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="-1" const="-1" name="EOF" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="28" const="28" name="LTE" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="25" const="25" name="NOT_EQUALS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="7" const="7" name="COLON" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="12" const="12" name="AT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="10" const="10" name="RIGHT_PAREN" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="36" const="36" name="SINGLE_QUOTE_STRING" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="SLASH" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="34" const="34" name="WS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="11" const="11" name="DOUBLE_COLON" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="20" const="20" name="COMMA" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="22" const="22" name="KW_OR" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="37" const="37" name="DOUBLE_QUOTE_STRING" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="6" const="6" name="IDENTIFIER" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="14" const="14" name="RIGHT_BRACKET" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="9" const="9" name="LEFT_PAREN" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="27" const="27" name="GT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="21" const="21" name="PIPE" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="30" const="30" name="PLUS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="35" const="35" name="DIGIT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="32" const="32" name="DIV" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="15" const="15" name="DOT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="16" const="16" name="DOT_DOT" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="XPathParserLexer" />
			<constructor visibility="public" name="XPathParserLexer">
				<params>
					<param fulltype="CharStream" type="CharStream" name="input" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getGrammarFileName" />
			<method visibility="public" fulltype="void" type="void" final="true" name="mWS">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDIGIT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mSINGLE_QUOTE_STRING">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOUBLE_QUOTE_STRING">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mLITERAL">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mNUMBER">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mIDENTIFIER">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mLEFT_PAREN">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mRIGHT_PAREN">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mLEFT_BRACKET">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mRIGHT_BRACKET">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mPIPE">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOT_DOT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mAT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mCOMMA">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOUBLE_COLON">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mCOLON">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mSLASH">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOUBLE_SLASH">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOLLAR_SIGN">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mPLUS">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mMINUS">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mEQUALS">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mNOT_EQUALS">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mLT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mLTE">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mGT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mGTE">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mSTAR">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDIV">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mMOD">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="mTokens">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Lexer" visibility="public" superclassfulltype="Lexer" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathLexer" type="xpathLexer" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="28" const="28" name="LT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="12" const="12" name="STAR" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="9" const="9" name="DOUBLE_SLASH" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="23" const="23" name="DOLLAR_SIGN" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="7" const="7" name="MOD" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="5" const="5" name="KW_AND" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="17" const="17" name="LEFT_BRACKET" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="31" const="31" name="GTE" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="22" const="22" name="NUMBER" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="21" const="21" name="LITERAL" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="26" const="26" name="EQUALS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="33" const="33" name="MINUS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="38" const="38" name="Tokens" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="-1" const="-1" name="EOF" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="30" const="30" name="LTE" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="27" const="27" name="NOT_EQUALS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="11" const="11" name="COLON" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="16" const="16" name="AT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="14" const="14" name="RIGHT_PAREN" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="36" const="36" name="SINGLE_QUOTE_STRING" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="8" const="8" name="SLASH" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="34" const="34" name="WS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="15" const="15" name="DOUBLE_COLON" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="KW_OR" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="24" const="24" name="COMMA" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="37" const="37" name="DOUBLE_QUOTE_STRING" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="10" const="10" name="IDENTIFIER" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="18" const="18" name="RIGHT_BRACKET" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="13" const="13" name="LEFT_PAREN" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="29" const="29" name="GT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="25" const="25" name="PIPE" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="32" const="32" name="PLUS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="35" const="35" name="DIGIT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="6" const="6" name="DIV" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="19" const="19" name="DOT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="20" const="20" name="DOT_DOT" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathLexer" />
			<constructor visibility="public" name="xpathLexer">
				<params>
					<param fulltype="CharStream" type="CharStream" name="input" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getGrammarFileName" />
			<method visibility="public" fulltype="void" type="void" final="true" name="mKW_OR">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mKW_AND">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDIV">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mMOD">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mWS">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDIGIT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mSINGLE_QUOTE_STRING">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOUBLE_QUOTE_STRING">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mLITERAL">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mNUMBER">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mIDENTIFIER">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mLEFT_PAREN">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mRIGHT_PAREN">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mLEFT_BRACKET">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mRIGHT_BRACKET">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mPIPE">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOT_DOT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mAT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mCOMMA">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOUBLE_COLON">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mCOLON">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mSLASH">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOUBLE_SLASH">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mDOLLAR_SIGN">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mPLUS">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mMINUS">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mEQUALS">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mNOT_EQUALS">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mLT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mLTE">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mGT">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mGTE">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="mSTAR">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="mTokens">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="DebugParser" visibility="public" superclassfulltype="DebugParser" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser" type="xpathParser" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="public" fulltype="java.lang.String[]" type="String" final="true" name="tokenNames" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="28" const="28" name="LT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="9" const="9" name="DOUBLE_SLASH" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="12" const="12" name="STAR" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="23" const="23" name="DOLLAR_SIGN" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="7" const="7" name="MOD" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="5" const="5" name="KW_AND" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="17" const="17" name="LEFT_BRACKET" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="31" const="31" name="GTE" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="22" const="22" name="NUMBER" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="21" const="21" name="LITERAL" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="26" const="26" name="EQUALS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="33" const="33" name="MINUS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="-1" const="-1" name="EOF" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="30" const="30" name="LTE" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="27" const="27" name="NOT_EQUALS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="11" const="11" name="COLON" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="16" const="16" name="AT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="14" const="14" name="RIGHT_PAREN" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="36" const="36" name="SINGLE_QUOTE_STRING" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="34" const="34" name="WS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="8" const="8" name="SLASH" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="37" const="37" name="DOUBLE_QUOTE_STRING" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="24" const="24" name="COMMA" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="4" const="4" name="KW_OR" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="15" const="15" name="DOUBLE_COLON" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="10" const="10" name="IDENTIFIER" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="18" const="18" name="RIGHT_BRACKET" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="13" const="13" name="LEFT_PAREN" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="29" const="29" name="GT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="32" const="32" name="PLUS" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="25" const="25" name="PIPE" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="35" const="35" name="DIGIT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="6" const="6" name="DIV" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="19" const="19" name="DOT" static="true" />
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="20" const="20" name="DOT_DOT" static="true" />
			<field visibility="public" fulltype="java.lang.String[]" type="String" final="true" name="ruleNames" static="true" />
			<field visibility="public" fulltype="int" type="int" name="ruleLevel" />
			<field visibility="protected" fulltype="DebugTreeAdaptor" type="DebugTreeAdaptor" name="adaptor" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_union_expr_in_xpath75" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_absolute_location_path_in_location_path96" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_relative_location_path_in_location_path102" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_SLASH_in_absolute_location_path117" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_DOUBLE_SLASH_in_absolute_location_path124" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_i_relative_location_path_in_absolute_location_path147" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_i_relative_location_path_in_relative_location_path169" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_step_in_i_relative_location_path182" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_SLASH_in_i_relative_location_path190" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_DOUBLE_SLASH_in_i_relative_location_path198" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_step_in_i_relative_location_path207" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_axis_in_step247" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_IDENTIFIER_in_step287" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_COLON_in_step289" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_set_in_step301" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_special_step_in_step351" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_predicate_in_step367" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_abbr_step_in_step384" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_predicate_in_step395" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_IDENTIFIER_in_special_step417" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_LEFT_PAREN_in_special_step419" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_IDENTIFIER_in_special_step427" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_RIGHT_PAREN_in_special_step438" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_IDENTIFIER_in_special_step448" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_LEFT_PAREN_in_special_step450" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_RIGHT_PAREN_in_special_step452" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_IDENTIFIER_in_axis467" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_DOUBLE_COLON_in_axis469" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_AT_in_axis476" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_LEFT_BRACKET_in_predicate500" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_predicate_expr_in_predicate503" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_RIGHT_BRACKET_in_predicate505" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_expr_in_predicate_expr521" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_set_in_abbr_step0" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_AT_in_abbr_axis_specifier560" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_or_expr_in_expr589" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_variable_reference_in_primary_expr605" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_LEFT_PAREN_in_primary_expr611" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_expr_in_primary_expr614" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_RIGHT_PAREN_in_primary_expr616" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_literal_in_primary_expr623" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_number_in_primary_expr629" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_function_call_in_primary_expr635" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_LITERAL_in_literal648" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_NUMBER_in_number662" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_DOLLAR_SIGN_in_variable_reference676" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_IDENTIFIER_in_variable_reference679" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_IDENTIFIER_in_function_call699" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_LEFT_PAREN_in_function_call701" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_arg_list_in_function_call706" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_RIGHT_PAREN_in_function_call711" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_argument_in_arg_list727" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_COMMA_in_arg_list735" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_argument_in_arg_list737" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_expr_in_argument755" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_path_expr_in_union_expr775" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_PIPE_in_union_expr782" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_path_expr_in_union_expr785" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_location_path_in_path_expr831" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_filter_expr_in_path_expr849" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_absolute_location_path_in_path_expr857" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_location_path_in_path_expr889" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_filter_expr_in_path_expr900" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_absolute_location_path_in_path_expr908" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_primary_expr_in_filter_expr930" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_predicate_in_filter_expr937" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_and_expr_in_or_expr964" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_KW_OR_in_or_expr968" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_and_expr_in_or_expr981" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_equality_expr_in_and_expr1002" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_KW_AND_in_and_expr1006" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_equality_expr_in_and_expr1020" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_relational_expr_in_equality_expr1038" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_EQUALS_in_equality_expr1044" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_NOT_EQUALS_in_equality_expr1059" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_relational_expr_in_equality_expr1080" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_additive_expr_in_relational_expr1105" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_LT_in_relational_expr1111" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_GT_in_relational_expr1126" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_LTE_in_relational_expr1139" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_GTE_in_relational_expr1153" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_additive_expr_in_relational_expr1175" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_mult_expr_in_additive_expr1213" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_PLUS_in_additive_expr1219" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_MINUS_in_additive_expr1232" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_mult_expr_in_additive_expr1251" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_unary_expr_in_mult_expr1275" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_STAR_in_mult_expr1281" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_DIV_in_mult_expr1294" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_MOD_in_mult_expr1307" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_unary_expr_in_mult_expr1327" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_union_expr_in_unary_expr1352" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_MINUS_in_unary_expr1361" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_unary_expr_in_unary_expr1363" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_set_in_synpred1135" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_IDENTIFIER_in_synpred2237" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_DOUBLE_COLON_in_synpred2239" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_AT_in_synpred2243" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_IDENTIFIER_in_synpred3821" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_LEFT_PAREN_in_synpred3823" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_IDENTIFIER_in_synpred4841" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_LEFT_PAREN_in_synpred4843" static="true" />
			<field visibility="public" fulltype="BitSet" type="BitSet" final="true" name="FOLLOW_set_in_synpred5872" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser">
				<params>
					<param fulltype="TokenStream" type="TokenStream" name="input" />
					<param fulltype="int" type="int" name="port" />
				</params>
			</constructor>
			<constructor visibility="public" name="xpathParser">
				<params>
					<param fulltype="TokenStream" type="TokenStream" name="input" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="boolean" type="boolean" name="evalPredicate">
				<params>
					<param fulltype="boolean" type="boolean" name="result" />
					<param fulltype="java.lang.String" type="String" name="predicate" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setTreeAdaptor">
				<params>
					<param fulltype="TreeAdaptor" type="TreeAdaptor" name="adaptor" />
				</params>
			</method>
			<method visibility="public" fulltype="TreeAdaptor" type="TreeAdaptor" name="getTreeAdaptor" />
			<method visibility="public" fulltype="java.lang.String[]" type="String" name="getTokenNames" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getGrammarFileName" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.xpath_return" type="xpathParser.xpath_return" final="true" name="xpath">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.location_path_return" type="xpathParser.location_path_return" final="true" name="location_path">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.absolute_location_path_return" type="xpathParser.absolute_location_path_return" final="true" name="absolute_location_path">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.relative_location_path_return" type="xpathParser.relative_location_path_return" final="true" name="relative_location_path">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.i_relative_location_path_return" type="xpathParser.i_relative_location_path_return" final="true" name="i_relative_location_path">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.step_return" type="xpathParser.step_return" final="true" name="step">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.special_step_return" type="xpathParser.special_step_return" final="true" name="special_step">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.axis_return" type="xpathParser.axis_return" final="true" name="axis">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.predicate_return" type="xpathParser.predicate_return" final="true" name="predicate">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.predicate_expr_return" type="xpathParser.predicate_expr_return" final="true" name="predicate_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.abbr_step_return" type="xpathParser.abbr_step_return" final="true" name="abbr_step">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.abbr_axis_specifier_return" type="xpathParser.abbr_axis_specifier_return" final="true" name="abbr_axis_specifier">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.expr_return" type="xpathParser.expr_return" final="true" name="expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.primary_expr_return" type="xpathParser.primary_expr_return" final="true" name="primary_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.literal_return" type="xpathParser.literal_return" final="true" name="literal">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.number_return" type="xpathParser.number_return" final="true" name="number">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.variable_reference_return" type="xpathParser.variable_reference_return" final="true" name="variable_reference">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.function_call_return" type="xpathParser.function_call_return" final="true" name="function_call">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.arg_list_return" type="xpathParser.arg_list_return" final="true" name="arg_list">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.argument_return" type="xpathParser.argument_return" final="true" name="argument">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.union_expr_return" type="xpathParser.union_expr_return" final="true" name="union_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.path_expr_return" type="xpathParser.path_expr_return" final="true" name="path_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.filter_expr_return" type="xpathParser.filter_expr_return" final="true" name="filter_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.or_expr_return" type="xpathParser.or_expr_return" final="true" name="or_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.and_expr_return" type="xpathParser.and_expr_return" final="true" name="and_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.equality_expr_return" type="xpathParser.equality_expr_return" final="true" name="equality_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.relational_expr_return" type="xpathParser.relational_expr_return" final="true" name="relational_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.additive_expr_return" type="xpathParser.additive_expr_return" final="true" name="additive_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.mult_expr_return" type="xpathParser.mult_expr_return" final="true" name="mult_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.unary_expr_return" type="xpathParser.unary_expr_return" final="true" name="unary_expr">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="synpred1_fragment">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="synpred2_fragment">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="synpred3_fragment">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="synpred4_fragment">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" final="true" name="synpred5_fragment">
				<exceptions>
					<exception fulltype="RecognitionException" type="RecognitionException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" final="true" name="synpred5" />
			<method visibility="public" fulltype="boolean" type="boolean" final="true" name="synpred1" />
			<method visibility="public" fulltype="boolean" type="boolean" final="true" name="synpred2" />
			<method visibility="public" fulltype="boolean" type="boolean" final="true" name="synpred3" />
			<method visibility="public" fulltype="boolean" type="boolean" final="true" name="synpred4" />
		</methods>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.xpath_return" type="xpathParser.xpath_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.xpath_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.location_path_return" type="xpathParser.location_path_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.location_path_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.absolute_location_path_return" type="xpathParser.absolute_location_path_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.absolute_location_path_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.relative_location_path_return" type="xpathParser.relative_location_path_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.relative_location_path_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.i_relative_location_path_return" type="xpathParser.i_relative_location_path_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.i_relative_location_path_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.step_return" type="xpathParser.step_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.step_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.special_step_return" type="xpathParser.special_step_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.special_step_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.axis_return" type="xpathParser.axis_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.axis_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.predicate_return" type="xpathParser.predicate_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.predicate_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.predicate_expr_return" type="xpathParser.predicate_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.predicate_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.abbr_step_return" type="xpathParser.abbr_step_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.abbr_step_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.abbr_axis_specifier_return" type="xpathParser.abbr_axis_specifier_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.abbr_axis_specifier_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.expr_return" type="xpathParser.expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.primary_expr_return" type="xpathParser.primary_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.primary_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.literal_return" type="xpathParser.literal_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.literal_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.number_return" type="xpathParser.number_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.number_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.variable_reference_return" type="xpathParser.variable_reference_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.variable_reference_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.function_call_return" type="xpathParser.function_call_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.function_call_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.arg_list_return" type="xpathParser.arg_list_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.arg_list_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.argument_return" type="xpathParser.argument_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.argument_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.union_expr_return" type="xpathParser.union_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.union_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.path_expr_return" type="xpathParser.path_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.path_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.filter_expr_return" type="xpathParser.filter_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.filter_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.or_expr_return" type="xpathParser.or_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.or_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.and_expr_return" type="xpathParser.and_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.and_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.equality_expr_return" type="xpathParser.equality_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.equality_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.relational_expr_return" type="xpathParser.relational_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.relational_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.additive_expr_return" type="xpathParser.additive_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.additive_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.mult_expr_return" type="xpathParser.mult_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.mult_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
		<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.unary_expr_return" type="xpathParser.unary_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
			<fields>
				<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
			</fields>
			<methods>
				<constructor visibility="public" name="xpathParser.unary_expr_return" />
				<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
			</methods>
		</jelclass>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.xpath_return" type="xpathParser.xpath_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.xpath_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.location_path_return" type="xpathParser.location_path_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.location_path_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.absolute_location_path_return" type="xpathParser.absolute_location_path_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.absolute_location_path_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.relative_location_path_return" type="xpathParser.relative_location_path_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.relative_location_path_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.i_relative_location_path_return" type="xpathParser.i_relative_location_path_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.i_relative_location_path_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.step_return" type="xpathParser.step_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.step_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.special_step_return" type="xpathParser.special_step_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.special_step_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.axis_return" type="xpathParser.axis_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.axis_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.predicate_return" type="xpathParser.predicate_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.predicate_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.predicate_expr_return" type="xpathParser.predicate_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.predicate_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.abbr_step_return" type="xpathParser.abbr_step_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.abbr_step_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.abbr_axis_specifier_return" type="xpathParser.abbr_axis_specifier_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.abbr_axis_specifier_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.expr_return" type="xpathParser.expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.primary_expr_return" type="xpathParser.primary_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.primary_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.literal_return" type="xpathParser.literal_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.literal_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.number_return" type="xpathParser.number_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.number_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.variable_reference_return" type="xpathParser.variable_reference_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.variable_reference_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.function_call_return" type="xpathParser.function_call_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.function_call_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.arg_list_return" type="xpathParser.arg_list_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.arg_list_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.argument_return" type="xpathParser.argument_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.argument_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.union_expr_return" type="xpathParser.union_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.union_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.path_expr_return" type="xpathParser.path_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.path_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.filter_expr_return" type="xpathParser.filter_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.filter_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.or_expr_return" type="xpathParser.or_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.or_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.and_expr_return" type="xpathParser.and_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.and_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.equality_expr_return" type="xpathParser.equality_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.equality_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.relational_expr_return" type="xpathParser.relational_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.relational_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.additive_expr_return" type="xpathParser.additive_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.additive_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.mult_expr_return" type="xpathParser.mult_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.mult_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="ParserRuleReturnScope" visibility="public" superclassfulltype="ParserRuleReturnScope" fulltype="org.eclipse.wst.xsl.core.internal.xpath.parser.xpathParser.unary_expr_return" type="xpathParser.unary_expr_return" package="org.eclipse.wst.xsl.core.internal.xpath.parser">
		<fields>
			<field visibility="package-private" fulltype="java.lang.Object" type="Object" name="tree" />
		</fields>
		<methods>
			<constructor visibility="public" name="xpathParser.unary_expr_return" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getTree" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.debug.internal.util.XSLDebugPluginImages" type="XSLDebugPluginImages" package="org.eclipse.wst.xsl.debug.internal.util">
		<comment>
			<description>Bundle of most images used by the XSL Debug Plugins</description>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/xslt_processor.gif&quot;" const="icons/xslt_processor.gif" name="IMG_PROCESSOR_TAB" static="true">
				<comment>
					<description>Path to the XSLT Processor  Images used for launch configurations</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/xslt_output.gif&quot;" const="icons/xslt_output.gif" name="IMG_OUTPUT_TAB" static="true">
				<comment>
					<description>Path to the XSLT Output Images used for launch configurations</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/xslt_launch.gif&quot;" const="icons/xslt_launch.gif" name="IMG_MAIN_TAB" static="true">
				<comment>
					<description>Path to the XSLT Launch Images used for launch configurations</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="XSLDebugPluginImages" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.debug.internal.util.XSLPluginImageHelper" type="XSLPluginImageHelper" package="org.eclipse.wst.xsl.debug.internal.util">
		<comment>
			<description>Helper class to handle images provided by this plug-in.
 
 NOTE: For internal use only. For images used externally, please use the
 Shared***ImageHelper class instead.</description>
			<attribute name="@author">
				<description>david carver based on work by amywu</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLPluginImageHelper" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.debug.internal.util.XSLPluginImageHelper" returncomment="Returns a XMLEditorPluginImageHelper" type="XSLPluginImageHelper" synchronized="true" name="getInstance" static="true">
				<comment>
					<description>Gets the instance.</description>
					<attribute name="@return">
						<description>Returns a XMLEditorPluginImageHelper</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" returncomment="Image the image associated with resource or null if one could
         not be found" type="Image" name="getImage">
				<comment>
					<description>Retrieves the image associated with resource from the image registry.
 If the image cannot be retrieved, attempt to find and load the image at
 the location specified in resource.</description>
					<attribute name="@param">
						<description>resource
            the image to retrieve</description>
					</attribute>
					<attribute name="@return">
						<description>Image the image associated with resource or null if one could
         not be found</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the image to retrieve" name="resource" />
				</params>
			</method>
			<method visibility="public" fulltype="ImageDescriptor" returncomment="ImageDescriptor the image descriptor assocated with resource or
         the default &quot;missing&quot; image descriptor if one could not be
         found" type="ImageDescriptor" name="getImageDescriptor">
				<comment>
					<description>Retrieves the image descriptor associated with resource from the image
 descriptor registry. If the image descriptor cannot be retrieved,
 attempt to find and load the image descriptor at the location specified
 in resource.</description>
					<attribute name="@param">
						<description>resource
            the image descriptor to retrieve</description>
					</attribute>
					<attribute name="@return">
						<description>ImageDescriptor the image descriptor assocated with resource or
         the default &quot;missing&quot; image descriptor if one could not be
         found</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the image descriptor to retrieve" name="resource" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractLaunchConfigurationTab" visibility="public" superclassfulltype="AbstractLaunchConfigurationTab" fulltype="org.eclipse.wst.xsl.internal.debug.ui.AbstractTableBlock" type="AbstractTableBlock" abstract="true" package="org.eclipse.wst.xsl.internal.debug.ui">
		<comment>
			<description>An &lt;code&gt;AbstractLaunchConfigurationTab&lt;/code&gt; specialised for blocks that
 contain a table. This abstract class conveniently saves and restores the table&apos;s
 column settings.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="AbstractTableBlock" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Table" type="Table" abstract="true" name="getTable" />
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" abstract="true" name="getDialogSettings" />
			<method visibility="protected" fulltype="java.lang.String" type="String" abstract="true" name="getQualifier" />
			<method visibility="protected" fulltype="void" type="void" name="setSortColumn">
				<params>
					<param fulltype="int" type="int" name="column" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="saveColumnSettings">
				<comment>
					<description>Persist table settings into the give dialog store, prefixed with the
 given key.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="restoreColumnSettings">
				<comment>
					<description>Restore table settings from the given dialog store using the given key.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.Messages" type="Messages" package="org.eclipse.wst.xsl.internal.debug.ui">
		<comment>
			<description>Messages for the debug.ui package.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="java.lang.String" returncomment="the message" type="String" name="getString" static="true">
				<comment>
					<description>Get the message for the given key.</description>
					<attribute name="@param">
						<description>key the message key</description>
					</attribute>
					<attribute name="@return">
						<description>the message</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the message key" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractLaunchConfigurationTab" visibility="public" superclassfulltype="AbstractLaunchConfigurationTab" fulltype="org.eclipse.wst.xsl.internal.debug.ui.ResourceSelectionBlock" type="ResourceSelectionBlock" abstract="true" package="org.eclipse.wst.xsl.internal.debug.ui">
		<comment>
			<description>A block that shows a text box with buttons for browsing workspace or the filesystem
 in order to populate the text box with a file path.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="1" const="1" name="ERROR_DIRECTORY_NOT_SPECIFIED" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="2" const="2" name="ERROR_DIRECTORY_DOES_NOT_EXIST" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="3" const="3" name="GROUP_NAME" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="4" const="4" name="USE_DEFAULT_RADIO" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="5" const="5" name="USE_OTHER_RADIO" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="6" const="6" name="DIRECTORY_DIALOG_MESSAGE" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="7" const="7" name="WORKSPACE_DIALOG_MESSAGE" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="8" const="8" name="VARIABLES_BUTTON" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="9" const="9" name="FILE_SYSTEM_BUTTON" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="10" const="10" name="WORKSPACE_BUTTON" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="11" const="11" name="WORKSPACE_DIALOG_TITLE" static="true" />
			<field visibility="protected" fulltype="org.eclipse.swt.widgets.Button" type="Button" name="fWorkspaceButton" />
			<field visibility="protected" fulltype="org.eclipse.swt.widgets.Button" type="Button" name="fFileSystemButton" />
			<field visibility="protected" fulltype="org.eclipse.swt.widgets.Button" type="Button" name="fVariablesButton" />
			<field visibility="protected" fulltype="org.eclipse.swt.widgets.Button" type="Button" name="useDefaultCheckButton" />
			<field visibility="protected" fulltype="org.eclipse.swt.widgets.Text" type="Text" name="resourceText" />
			<field visibility="protected" fulltype="org.eclipse.wst.xsl.internal.debug.ui.ResourceSelectionBlock.WidgetListener" type="ResourceSelectionBlock.WidgetListener" name="widgetListener" />
			<field visibility="protected" fulltype="boolean" type="boolean" final="true" name="showDefault" />
			<field visibility="protected" fulltype="boolean" type="boolean" name="required" />
			<field visibility="protected" fulltype="java.lang.String" type="String" name="defaultOutputFile" />
			<field visibility="protected" fulltype="java.lang.String" type="String" name="outputFile" />
			<field visibility="protected" fulltype="java.lang.String" type="String" name="fileLabel" />
		</fields>
		<methods>
			<constructor visibility="public" name="ResourceSelectionBlock">
				<comment>
					<description>Same as &lt;code&gt;new ResourceSelectionBlock(true)&lt;/code&gt;</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="ResourceSelectionBlock">
				<comment>
					<description>Same as &lt;code&gt;new ResourceSelectionBlock(IResource.FOLDER,showDefault)&lt;/code&gt;</description>
					<attribute name="@param">
						<description>showDefault true if this should have a &apos;Show Default&apos; button</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="boolean" type="boolean" comment="true if this should have a &apos;Show Default&apos; button" name="showDefault" />
				</params>
			</constructor>
			<constructor visibility="public" name="ResourceSelectionBlock">
				<comment>
					<description>Same as &lt;code&gt;new ResourceSelectionBlock(resourceType,showDefault,true)&lt;/code&gt;</description>
					<attribute name="@param">
						<description>resourceType the type of resource to select - IResource.FOLDER or IResource.FILE</description>
					</attribute>
					<attribute name="@param">
						<description>showDefault true if this should have a &apos;Show Default&apos; button</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="int" type="int" comment="the type of resource to select - IResource.FOLDER or IResource.FILE" name="resourceType" />
					<param fulltype="boolean" type="boolean" comment="true if this should have a &apos;Show Default&apos; button" name="showDefault" />
				</params>
			</constructor>
			<constructor visibility="public" name="ResourceSelectionBlock">
				<comment>
					<description>Same as &lt;code&gt;new ResourceSelectionBlock(resourceType,showDefault,required,true)&lt;/code&gt;</description>
					<attribute name="@param">
						<description>resourceType the type of resource to select - IResource.FOLDER or IResource.FILE</description>
					</attribute>
					<attribute name="@param">
						<description>showDefault true if this should have a &apos;Show Default&apos; button</description>
					</attribute>
					<attribute name="@param">
						<description>required true if a blank text box is invalid</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="int" type="int" comment="the type of resource to select - IResource.FOLDER or IResource.FILE" name="resourceType" />
					<param fulltype="boolean" type="boolean" comment="true if this should have a &apos;Show Default&apos; button" name="showDefault" />
					<param fulltype="boolean" type="boolean" comment="true if a blank text box is invalid" name="required" />
				</params>
			</constructor>
			<constructor visibility="public" name="ResourceSelectionBlock">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>resourceType the type of resource to select - IResource.FOLDER or IResource.FILE</description>
					</attribute>
					<attribute name="@param">
						<description>showDefault true if this should have a &apos;Show Default&apos; button</description>
					</attribute>
					<attribute name="@param">
						<description>required true if a blank text box is invalid</description>
					</attribute>
					<attribute name="@param">
						<description>mustExist true of the selected resource must already exist</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="int" type="int" comment="the type of resource to select - IResource.FOLDER or IResource.FILE" name="resourceType" />
					<param fulltype="boolean" type="boolean" comment="true if this should have a &apos;Show Default&apos; button" name="showDefault" />
					<param fulltype="boolean" type="boolean" comment="true if a blank text box is invalid" name="required" />
					<param fulltype="boolean" type="boolean" comment="true of the selected resource must already exist" name="mustExist" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="createContainer">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createContents">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createCheckboxAndText">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createButtons">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="updateResourceText">
				<params>
					<param fulltype="boolean" type="boolean" name="useDefault" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="protected" fulltype="void" type="void" name="handleExternalResourceBrowseButtonSelected" />
			<method visibility="protected" fulltype="java.lang.String[]" type="String" name="getFileExtensions" />
			<method visibility="protected" fulltype="void" type="void" name="handleWorkspaceResourceBrowseButtonSelected" />
			<method visibility="protected" fulltype="IPath" type="IPath" name="openWorkspaceResourceDialog" />
			<method visibility="protected" fulltype="ViewerFilter" type="ViewerFilter" name="getResourceFilter" />
			<method visibility="protected" fulltype="IResource" type="IResource" name="getResource">
				<comment>
					<description>Returns the selected workspace container,or &lt;code&gt;null&lt;/code&gt;</description>
				</comment>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="handleResourceVariablesButtonSelected" />
			<method visibility="protected" fulltype="void" type="void" abstract="true" name="setDefaultResource" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isValid">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="config" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="validateResource">
				<params>
					<param fulltype="java.lang.String" type="String" name="workingDirPath" />
				</params>
			</method>
			<method visibility="protected" fulltype="java.lang.String" type="String" abstract="true" name="getMessage">
				<params>
					<param fulltype="int" type="int" name="type" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="textModified" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getText" />
			<method visibility="protected" fulltype="void" type="void" name="setText">
				<params>
					<param fulltype="java.lang.String" type="String" name="text" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setLaunchConfiguration">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="config" />
				</params>
			</method>
			<method visibility="protected" fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="getLaunchConfiguration" />
		</methods>
		<jelclass superclass="SelectionAdapter" visibility="package-private" superclassfulltype="org.eclipse.swt.events.SelectionAdapter" fulltype="org.eclipse.wst.xsl.internal.debug.ui.ResourceSelectionBlock.WidgetListener" type="ResourceSelectionBlock.WidgetListener" package="org.eclipse.wst.xsl.internal.debug.ui">
			<implements>
				<interface fulltype="org.eclipse.swt.events.ModifyListener" type="ModifyListener" />
			</implements>
			<methods>
				<constructor visibility="package-private" name="ResourceSelectionBlock.WidgetListener" />
				<method visibility="public" fulltype="void" type="void" name="modifyText">
					<params>
						<param fulltype="org.eclipse.swt.events.ModifyEvent" type="ModifyEvent" name="e" />
					</params>
				</method>
				<method visibility="public" fulltype="void" type="void" name="widgetSelected">
					<params>
						<param fulltype="org.eclipse.swt.events.SelectionEvent" type="SelectionEvent" name="e" />
					</params>
				</method>
			</methods>
		</jelclass>
	</jelclass>
	<jelclass superclass="SelectionAdapter" visibility="package-private" superclassfulltype="org.eclipse.swt.events.SelectionAdapter" fulltype="org.eclipse.wst.xsl.internal.debug.ui.ResourceSelectionBlock.WidgetListener" type="ResourceSelectionBlock.WidgetListener" package="org.eclipse.wst.xsl.internal.debug.ui">
		<implements>
			<interface fulltype="org.eclipse.swt.events.ModifyListener" type="ModifyListener" />
		</implements>
		<methods>
			<constructor visibility="package-private" name="ResourceSelectionBlock.WidgetListener" />
			<method visibility="public" fulltype="void" type="void" name="modifyText">
				<params>
					<param fulltype="org.eclipse.swt.events.ModifyEvent" type="ModifyEvent" name="e" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="widgetSelected">
				<params>
					<param fulltype="org.eclipse.swt.events.SelectionEvent" type="SelectionEvent" name="e" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLConsoleLineTracker" type="XSLConsoleLineTracker" package="org.eclipse.wst.xsl.internal.debug.ui">
		<comment>
			<description>&lt;p&gt;
 A console line tracker for XSL launches.
 &lt;/p&gt;
 
 &lt;p&gt;
 Note: It is actually configured to run for all Java launches in
 &lt;code&gt;plugin.xml&lt;/code&gt;, but it only really becomes enabled when the
 launch configuration type is
 &lt;code&gt;org.eclipse.wst.xsl.launching.launchConfigurationType&lt;/code&gt;.
 &lt;/p&gt;</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLConsoleLineTracker" />
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IConsole" type="IConsole" name="console" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="lineAppended">
				<params>
					<param fulltype="IRegion" type="IRegion" name="line" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLDebugUIConstants" type="XSLDebugUIConstants" package="org.eclipse.wst.xsl.internal.debug.ui">
		<comment>
			<description>Constants for the XSL Debug UI.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.debug.ui.PROCESSOR_DETAILS_DIALOG&quot;" const="org.eclipse.wst.xsl.debug.ui.PROCESSOR_DETAILS_DIALOG" name="PROCESSOR_DETAILS_DIALOG" static="true">
				<comment>
					<description>Constant used to store column setting preferences for the &lt;code&gt;InstalledProcessorsBlock&lt;/code&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.debug.ui.MAIN_PARAMATERS_BLOCK&quot;" const="org.eclipse.wst.xsl.debug.ui.MAIN_PARAMATERS_BLOCK" name="MAIN_PARAMATERS_BLOCK" static="true">
				<comment>
					<description>Constant used to store column setting preferences for the &lt;code&gt;ParametersBlock&lt;/code&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.debug.ui.MAIN_TRANSFORMS_BLOCK&quot;" const="org.eclipse.wst.xsl.debug.ui.MAIN_TRANSFORMS_BLOCK" name="MAIN_TRANSFORMS_BLOCK" static="true">
				<comment>
					<description>Constant used to store column setting preferences for the &lt;code&gt;TransformsBlock&lt;/code&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.debug.ui.FEATURES_BLOCK&quot;" const="org.eclipse.wst.xsl.debug.ui.FEATURES_BLOCK" name="FEATURES_BLOCK" static="true">
				<comment>
					<description>Constant used to store column setting preferences for the &lt;code&gt;FeaturesBlock&lt;/code&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.debug.ui.OUTPUT_BLOCK&quot;" const="org.eclipse.wst.xsl.debug.ui.OUTPUT_BLOCK" name="OUTPUT_BLOCK" static="true">
				<comment>
					<description>Constant used to store column setting preferences for the &lt;code&gt;OutputBlock&lt;/code&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.debug.ui.FEATURES_LAUNCH_BLOCK&quot;" const="org.eclipse.wst.xsl.debug.ui.FEATURES_LAUNCH_BLOCK" name="FEATURES_LAUNCH_BLOCK" static="true">
				<comment>
					<description>Constant used to store column setting preferences for the &lt;code&gt;FeaturesBlock&lt;/code&gt;</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.ui.XSLEditor&quot;" const="org.eclipse.wst.xsl.ui.XSLEditor" name="XSL_EDITOR_ID" static="true">
				<comment>
					<description>The id of the XSL editor</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="XSLDebugUIConstants" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractUIPlugin" visibility="public" superclassfulltype="AbstractUIPlugin" fulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLDebugUIPlugin" type="XSLDebugUIPlugin" package="org.eclipse.wst.xsl.internal.debug.ui">
		<comment>
			<description>The XSL Debug UI plugin.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.debug.ui&quot;" const="org.eclipse.wst.xsl.debug.ui" name="PLUGIN_ID" static="true">
				<comment>
					<description>The id of this.</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="XSLDebugUIPlugin">
				<comment>
					<description>Create a new instance of this.</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="start">
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stop">
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLDebugUIPlugin" returncomment="the singleton" type="XSLDebugUIPlugin" name="getDefault" static="true">
				<comment>
					<description>Get the singleton instance of this.</description>
					<attribute name="@return">
						<description>the singleton</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="ImageDescriptor" returncomment="the ImageDescriptor" type="ImageDescriptor" name="getImageDescriptor" static="true">
				<comment>
					<description>Get an ImageDescriptor from a path in this bundle.</description>
					<attribute name="@param">
						<description>path the path to the image</description>
					</attribute>
					<attribute name="@return">
						<description>the ImageDescriptor</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the path to the image" name="path" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="showPreferencePage" static="true">
				<comment>
					<description>Convenience method for opening a given preference page.</description>
					<attribute name="@param">
						<description>id the id of the preference page</description>
					</attribute>
					<attribute name="@param">
						<description>page the preference page to show</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the id of the preference page" name="id" />
					<param fulltype="IPreferencePage" type="IPreferencePage" comment="the preference page to show" name="page" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.widgets.Display" returncomment="the current or default Display" type="Display" name="getStandardDisplay" static="true">
				<comment>
					<description>Get the current Display if possible, or else the default Display.</description>
					<attribute name="@return">
						<description>the current or default Display</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="IWorkbenchWindow" returncomment="the active workbench window" type="IWorkbenchWindow" name="getActiveWorkbenchWindow" static="true">
				<comment>
					<description>Get the active workbench window from the workbench.</description>
					<attribute name="@return">
						<description>the active workbench window</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.widgets.Shell" returncomment="the active workbench shell" type="Shell" name="getActiveWorkbenchShell" static="true">
				<comment>
					<description>Get the shell of the active workbench window.</description>
					<attribute name="@return">
						<description>the active workbench shell</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="IWorkbenchPage" returncomment="the active page" type="IWorkbenchPage" name="getActivePage" static="true">
				<comment>
					<description>Get the active page of the active workbench window.</description>
					<attribute name="@return">
						<description>the active page</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="log" static="true">
				<comment>
					<description>Log the given exception by creating a new Status.</description>
					<attribute name="@param">
						<description>e the exception to log</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.Exception" type="Exception" comment="the exception to log" name="e" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractLaunchConfigurationTab" visibility="public" superclassfulltype="AbstractLaunchConfigurationTab" fulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLLaunchConfigurationTab" type="XSLLaunchConfigurationTab" abstract="true" package="org.eclipse.wst.xsl.internal.debug.ui">
		<comment>
			<description>The base class for XSL launch configuration tabs which allows a number of &apos;blocks&apos; to be added.
 Each block must itself fully implement &lt;code&gt;ILaunchConfigurationTab&lt;/code&gt;.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLLaunchConfigurationTab" />
			<method visibility="protected" fulltype="void" type="void" name="setBlocks">
				<params>
					<param fulltype="ILaunchConfigurationTab[]" type="ILaunchConfigurationTab" name="blocks" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setLaunchConfigurationDialog">
				<params>
					<param fulltype="ILaunchConfigurationDialog" type="ILaunchConfigurationDialog" name="dialog" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="public" fulltype="void" type="void" name="activated">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="workingCopy" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="isValid">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getErrorMessage" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getMessage" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLLaunchShortcut" type="XSLLaunchShortcut" package="org.eclipse.wst.xsl.internal.debug.ui">
		<comment>
			<description>&lt;table border=1&gt;
 	&lt;th&gt;
 		&lt;tr&gt;
 			&lt;td&gt;XML Files&lt;/td&gt;
  		&lt;td&gt;XSL Files&lt;/td&gt;			
 			&lt;td&gt;Action&lt;/td&gt;
 		&lt;/tr&gt;
  &lt;/th&gt;
  &lt;tbody&gt;
  	&lt;tr&gt;
 			&lt;td&gt;1&lt;/td&gt;
 			&lt;td&gt;0&lt;/td&gt;
 			&lt;td&gt;Launch assuming embedded stylesheet instruction&lt;/td&gt;
  	&lt;/tr&gt;
  	&lt;tr&gt;
 			&lt;td&gt;0&lt;/td&gt;
 			&lt;td&gt;&amp;gt;=1&lt;/td&gt;
 			&lt;td&gt;Open dialog - prompt for input file&lt;/td&gt;
  	&lt;/tr&gt;
  	&lt;tr&gt;
 			&lt;td&gt;1&lt;/td&gt;
 			&lt;td&gt;&amp;gt;=1&lt;/td&gt;
 			&lt;td&gt;Launch&lt;/td&gt;
  	&lt;/tr&gt;
  &lt;/tbody&gt;
 &lt;/table&gt;
 
 &lt;p&gt;The launch shortcut should not appear in the menu for any other combination of files&lt;/p&gt;
 &lt;p&gt;In all cases, a check must be performed to find any existing launch configuration that uses the selected files.&lt;/p&gt;</description>
			<attribute name="@author">
				<description>Doug</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLLaunchShortcut" />
			<method visibility="public" fulltype="void" type="void" name="launch">
				<params>
					<param fulltype="ISelection" type="ISelection" name="selection" />
					<param fulltype="java.lang.String" type="String" name="mode" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="getShell" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractLaunchConfigurationTabGroup" visibility="public" superclassfulltype="AbstractLaunchConfigurationTabGroup" fulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLTTabGroup" type="XSLTTabGroup" package="org.eclipse.wst.xsl.internal.debug.ui">
		<comment>
			<description>The tab group for the XSL tabs.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLTTabGroup">
				<comment>
					<description>Create a new instance of this.</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="createTabs">
				<params>
					<param fulltype="ILaunchConfigurationDialog" type="ILaunchConfigurationDialog" name="dialog" />
					<param fulltype="java.lang.String" type="String" name="mode" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="SelectionListenerAction" visibility="public" superclassfulltype="SelectionListenerAction" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractParameterAction" type="AbstractParameterAction" abstract="true" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>A convenient base class for add/remove parameter actions.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="protected" name="AbstractParameterAction">
				<params>
					<param fulltype="java.lang.String" type="String" name="text" />
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.ParameterViewer" type="ParameterViewer" name="viewer" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="setViewer">
				<comment>
					<description>Set the viewer.</description>
					<attribute name="@param">
						<description>viewer the parametere viewer</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.ParameterViewer" type="ParameterViewer" comment="the parametere viewer" name="viewer" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.ParameterViewer" type="ParameterViewer" name="getViewer" />
			<method visibility="public" fulltype="void" type="void" name="setButton">
				<comment>
					<description>Set the button associated with the action.</description>
					<attribute name="@param">
						<description>button the button</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.swt.widgets.Button" type="Button" comment="the button" name="button" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setEnabled">
				<params>
					<param fulltype="boolean" type="boolean" name="enabled" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="update" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="getShell" />
			<method visibility="public" fulltype="void" type="void" name="setShell">
				<comment>
					<description>Set the shell that will be used for opening a dialog.</description>
					<attribute name="@param">
						<description>shell the shell to use</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.swt.widgets.Shell" type="Shell" comment="the shell to use" name="shell" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="updateSelection">
				<params>
					<param fulltype="IStructuredSelection" type="IStructuredSelection" name="selection" />
				</params>
			</method>
			<method visibility="protected" fulltype="int" type="int" name="getActionType" />
		</methods>
	</jelclass>
	<jelclass superclass="SelectionListenerAction" visibility="public" superclassfulltype="SelectionListenerAction" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractStylesheetAction" type="AbstractStylesheetAction" abstract="true" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>A convenient base class for actions associated with the stylesheet viewer.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="0" const="0" name="DEFAULT" static="true">
				<comment>
					<description>The default action type.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="1" const="1" name="ADD" static="true">
				<comment>
					<description>The action type for add actions.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="2" const="2" name="REMOVE" static="true">
				<comment>
					<description>The action type for remove actions.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="int" type="int" final="true" constexpr="3" const="3" name="MOVE" static="true">
				<comment>
					<description>The action type for move actions.</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="protected" name="AbstractStylesheetAction">
				<params>
					<param fulltype="java.lang.String" type="String" name="text" />
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" name="viewer" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="addTransforms">
				<comment>
					<description>Add an array of LaunchTransform&apos;s to the viewer.</description>
					<attribute name="@param">
						<description>res launch transforms to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform[]" type="LaunchTransform" comment="launch transforms to add" name="res" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setViewer">
				<comment>
					<description>Set the viewer associated with this action.</description>
					<attribute name="@param">
						<description>viewer the viewer</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" comment="the viewer" name="viewer" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" name="getViewer" />
			<method visibility="public" fulltype="void" type="void" name="setButton">
				<comment>
					<description>Set the button associated with this action.</description>
					<attribute name="@param">
						<description>button the button</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.swt.widgets.Button" type="Button" comment="the button" name="button" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setEnabled">
				<params>
					<param fulltype="boolean" type="boolean" name="enabled" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="update" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="getShell" />
			<method visibility="public" fulltype="void" type="void" name="setShell">
				<comment>
					<description>Set the shell to be used for opening a dialog.</description>
					<attribute name="@param">
						<description>shell the shell to use</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.swt.widgets.Shell" type="Shell" comment="the shell to use" name="shell" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="updateSelection">
				<params>
					<param fulltype="IStructuredSelection" type="IStructuredSelection" name="selection" />
				</params>
			</method>
			<method visibility="protected" fulltype="int" type="int" name="getActionType" />
			<method visibility="protected" fulltype="java.util.List" type="List" name="getOrderedSelection" />
			<method visibility="protected" fulltype="java.util.List" type="List" name="getEntriesAsList" />
			<method visibility="protected" fulltype="void" type="void" name="setEntries">
				<params>
					<param fulltype="java.util.List" type="List" name="list" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="isIndexSelected">
				<params>
					<param fulltype="IStructuredSelection" type="IStructuredSelection" name="selection" />
					<param fulltype="int" type="int" name="index" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.ActionMessages" type="ActionMessages" final="true" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>Messages for the debug UI actions.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="RemoveAction_Text" static="true">
				<comment>
					<description>A name for the remove action.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddWorkspaceFileAction_Text" static="true">
				<comment>
					<description>A name for the &lt;code&gt;AddWorkspaceFileAction&lt;/code&gt; action.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddExternalFileAction_Text" static="true">
				<comment>
					<description>A name for the &lt;code&gt;AddExternalFileAction&lt;/code&gt; action.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="MoveDownAction_Text" static="true">
				<comment>
					<description>A name for the &lt;code&gt;MoveDownAction&lt;/code&gt; action.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="MoveUpAction_Text" static="true">
				<comment>
					<description>A name for the &lt;code&gt;MoveUpAction&lt;/code&gt; action.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddExternalFileAction_Selection_3" static="true">
				<comment>
					<description>A heading for the &lt;code&gt;AddExternalFileAction&lt;/code&gt; dialog.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddWorkspaceFileAction_DialogMessage" static="true">
				<comment>
					<description>A message for the &lt;code&gt;AddWorkspaceFileAction&lt;/code&gt; dialog.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddWorkspaceFileAction_DialogTitle" static="true">
				<comment>
					<description>A title for the &lt;code&gt;AddWorkspaceFileAction&lt;/code&gt; dialog.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddParameterAction" static="true">
				<comment>
					<description>A name for the &lt;code&gt;AddParameterAction&lt;/code&gt; action.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="RemoveParameterAction" static="true">
				<comment>
					<description>A name for the &lt;code&gt;RemoveParameterAction&lt;/code&gt; action.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="VariablesFieldButton_Text" static="true">
				<comment>
					<description>A label for the Variables button.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddParameterAction_Dialog" static="true">
				<comment>
					<description>A title for the &lt;code&gt;AddParameterAction&lt;/code&gt; dialog.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddParameterAction_Dialog_Name" static="true">
				<comment>
					<description>A label for the &lt;code&gt;AddParameterAction&lt;/code&gt; name text box.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddParameterAction_Dialog_Type" static="true">
				<comment>
					<description>A label for the &lt;code&gt;AddParameterAction&lt;/code&gt; type combo.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddParameterAction_Dialog_Value" static="true">
				<comment>
					<description>A label for the &lt;code&gt;AddParameterAction&lt;/code&gt; value text box.</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="ActionMessages" />
		</methods>
	</jelclass>
	<jelclass superclass="OpenDialogAction" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.OpenDialogAction" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AddExternalFileAction" type="AddExternalFileAction" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>An action that opens a dialog to allow the user to select a file from the file system.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="AddExternalFileAction">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>viewer the stylesheet viewer</description>
					</attribute>
					<attribute name="@param">
						<description>dialogSettingsPrefix a prefix to use for saving dialog preferences</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" comment="the stylesheet viewer" name="viewer" />
					<param fulltype="java.lang.String" type="String" comment="a prefix to use for saving dialog preferences" name="dialogSettingsPrefix" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="run" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractParameterAction" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractParameterAction" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AddParameterAction" type="AddParameterAction" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>An action that opens a dialog to allow the user to add a parameter to a transform.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="package-private" fulltype="java.lang.String[]" type="String" final="true" name="types" />
		</fields>
		<methods>
			<constructor visibility="public" name="AddParameterAction">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>viewer teh viewer</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.ParameterViewer" type="ParameterViewer" comment="teh viewer" name="viewer" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="run" />
			<method visibility="public" fulltype="void" type="void" name="setEnabled">
				<params>
					<param fulltype="boolean" type="boolean" name="enabled" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractStylesheetAction" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractStylesheetAction" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AddWorkspaceFileAction" type="AddWorkspaceFileAction" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>An action that opens a dialog to allow the user to select a file in the workspace.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="AddWorkspaceFileAction">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>viewer the viewer</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" comment="the viewer" name="viewer" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="run" />
			<method visibility="protected" fulltype="int" type="int" name="getActionType" />
		</methods>
	</jelclass>
	<jelclass superclass="AccessibleAdapter" visibility="public" superclassfulltype="org.eclipse.swt.accessibility.AccessibleAdapter" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.ControlAccessibleListener" type="ControlAccessibleListener" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>Used to help with accessibility.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="void" type="void" name="getName">
				<params>
					<param fulltype="org.eclipse.swt.accessibility.AccessibleEvent" type="AccessibleEvent" name="e" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addListener" static="true">
				<comment>
					<description>Helper for adding an instance of this to the given control.</description>
					<attribute name="@param">
						<description>comp the control to add this to</description>
					</attribute>
					<attribute name="@param">
						<description>name the name for this</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.swt.widgets.Control" type="Control" comment="the control to add this to" name="comp" />
					<param fulltype="java.lang.String" type="String" comment="the name for this" name="name" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractStylesheetAction" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractStylesheetAction" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.MoveDownAction" type="MoveDownAction" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>The action for moving a stylesheet further down in the transformation pipeline.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="MoveDownAction">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>viewer</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" comment="" name="viewer" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="run" />
			<method visibility="protected" fulltype="boolean" type="boolean" name="updateSelection">
				<params>
					<param fulltype="IStructuredSelection" type="IStructuredSelection" name="selection" />
				</params>
			</method>
			<method visibility="protected" fulltype="int" type="int" name="getActionType" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractStylesheetAction" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractStylesheetAction" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.MoveUpAction" type="MoveUpAction" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>The action for moving a stylesheet further up in the transformation pipeline.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="MoveUpAction">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>viewer</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" comment="" name="viewer" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="run" />
			<method visibility="protected" fulltype="boolean" type="boolean" name="updateSelection">
				<params>
					<param fulltype="IStructuredSelection" type="IStructuredSelection" name="selection" />
				</params>
			</method>
			<method visibility="protected" fulltype="int" type="int" name="getActionType" />
		</methods>
	</jelclass>
	<jelclass superclass="Dialog" visibility="public" superclassfulltype="Dialog" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.MultipleInputDialog" type="MultipleInputDialog" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>A dialog with handy methods for adding simple controls to itself.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;FIELD_NAME&quot;" const="FIELD_NAME" name="FIELD_NAME" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="100" const="100" name="TEXT" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="101" const="101" name="BROWSE" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="102" const="102" name="VARIABLE" static="true" />
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="103" const="103" name="COMBO" static="true" />
			<field visibility="protected" fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="panel" />
			<field visibility="protected" fulltype="java.util.List" type="List" name="fieldList" />
			<field visibility="protected" fulltype="java.util.List" type="List" name="controlList" />
			<field visibility="protected" fulltype="java.util.List" type="List" name="validators" />
			<field visibility="protected" fulltype="java.util.Map" type="Map" name="valueMap" />
		</fields>
		<methods>
			<constructor visibility="public" name="MultipleInputDialog">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>shell the shell to open the dialog on</description>
					</attribute>
					<attribute name="@param">
						<description>title the title for the dialog</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.swt.widgets.Shell" type="Shell" comment="the shell to open the dialog on" name="shell" />
					<param fulltype="java.lang.String" type="String" comment="the title for the dialog" name="title" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="void" type="void" name="configureShell">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="shell" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createButtonBar">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createDialogArea">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addBrowseField">
				<comment>
					<description>Add a label, text box and button for browsing the for a file.</description>
					<attribute name="@param">
						<description>labelText the label</description>
					</attribute>
					<attribute name="@param">
						<description>initialValue the initial value</description>
					</attribute>
					<attribute name="@param">
						<description>allowsEmpty true if the text box can be empty</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the label" name="labelText" />
					<param fulltype="java.lang.String" type="String" comment="the initial value" name="initialValue" />
					<param fulltype="boolean" type="boolean" comment="true if the text box can be empty" name="allowsEmpty" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addTextField">
				<comment>
					<description>Add a label and a text box.</description>
					<attribute name="@param">
						<description>labelText the label</description>
					</attribute>
					<attribute name="@param">
						<description>initialValue the initial value</description>
					</attribute>
					<attribute name="@param">
						<description>allowsEmpty true if the text box can be empty</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the label" name="labelText" />
					<param fulltype="java.lang.String" type="String" comment="the initial value" name="initialValue" />
					<param fulltype="boolean" type="boolean" comment="true if the text box can be empty" name="allowsEmpty" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addVariablesField">
				<comment>
					<description>Add a label, a text box and a button for selecting variables.</description>
					<attribute name="@param">
						<description>labelText the label</description>
					</attribute>
					<attribute name="@param">
						<description>initialValue the initial value</description>
					</attribute>
					<attribute name="@param">
						<description>allowsEmpty true if the text box can be empty</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the label" name="labelText" />
					<param fulltype="java.lang.String" type="String" comment="the initial value" name="initialValue" />
					<param fulltype="boolean" type="boolean" comment="true if the text box can be empty" name="allowsEmpty" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addComboField">
				<comment>
					<description>Add a label and a combo.</description>
					<attribute name="@param">
						<description>labelText the label</description>
					</attribute>
					<attribute name="@param">
						<description>initialIndex the initial selection index</description>
					</attribute>
					<attribute name="@param">
						<description>items the array of items for the combo</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the label" name="labelText" />
					<param fulltype="int" type="int" comment="the initial selection index" name="initialIndex" />
					<param fulltype="java.lang.String[]" type="String" comment="the array of items for the combo" name="items" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createTextField">
				<params>
					<param fulltype="java.lang.String" type="String" name="labelText" />
					<param fulltype="java.lang.String" type="String" name="initialValue" />
					<param fulltype="boolean" type="boolean" name="allowEmpty" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createVariablesField">
				<params>
					<param fulltype="java.lang.String" type="String" name="labelText" />
					<param fulltype="java.lang.String" type="String" name="initialValue" />
					<param fulltype="boolean" type="boolean" name="allowEmpty" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createComboField">
				<params>
					<param fulltype="java.lang.String" type="String" name="labelText" />
					<param fulltype="int" type="int" name="initialValue" />
					<param fulltype="java.lang.String[]" type="String" name="items" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="okPressed" />
			<method visibility="public" fulltype="int" type="int" name="open" />
			<method visibility="protected" fulltype="java.lang.Object" type="Object" name="getValue">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getStringValue">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
			<method visibility="protected" fulltype="int" type="int" name="getIntValue">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="validateFields" />
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogBoundsSettings" />
		</methods>
		<jelclass superclass="Object" visibility="protected" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.MultipleInputDialog.FieldSummary" type="MultipleInputDialog.FieldSummary" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
			<fields>
				<field visibility="package-private" fulltype="int" type="int" name="initialIndex" />
				<field visibility="package-private" fulltype="int" type="int" name="type" />
				<field visibility="package-private" fulltype="java.lang.String" type="String" name="name" />
				<field visibility="package-private" fulltype="java.lang.String" type="String" name="initialValue" />
				<field visibility="package-private" fulltype="boolean" type="boolean" name="allowsEmpty" />
				<field visibility="package-private" fulltype="java.lang.String[]" type="String" name="items" />
			</fields>
			<methods>
				<constructor visibility="public" name="MultipleInputDialog.FieldSummary">
					<params>
						<param fulltype="int" type="int" name="type" />
						<param fulltype="java.lang.String" type="String" name="name" />
						<param fulltype="java.lang.String" type="String" name="initialValue" />
						<param fulltype="boolean" type="boolean" name="allowsEmpty" />
					</params>
				</constructor>
				<constructor visibility="public" name="MultipleInputDialog.FieldSummary">
					<params>
						<param fulltype="int" type="int" name="type" />
						<param fulltype="java.lang.String" type="String" name="name" />
						<param fulltype="java.lang.String[]" type="String" name="items" />
						<param fulltype="int" type="int" name="initialIndex" />
					</params>
				</constructor>
			</methods>
		</jelclass>
		<jelclass superclass="Object" visibility="protected" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.MultipleInputDialog.Validator" type="MultipleInputDialog.Validator" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
			<methods>
				<constructor visibility="protected" name="MultipleInputDialog.Validator" />
				<method visibility="package-private" fulltype="boolean" type="boolean" name="validate" />
			</methods>
		</jelclass>
	</jelclass>
	<jelclass superclass="Object" visibility="protected" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.MultipleInputDialog.FieldSummary" type="MultipleInputDialog.FieldSummary" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<fields>
			<field visibility="package-private" fulltype="int" type="int" name="initialIndex" />
			<field visibility="package-private" fulltype="int" type="int" name="type" />
			<field visibility="package-private" fulltype="java.lang.String" type="String" name="name" />
			<field visibility="package-private" fulltype="java.lang.String" type="String" name="initialValue" />
			<field visibility="package-private" fulltype="boolean" type="boolean" name="allowsEmpty" />
			<field visibility="package-private" fulltype="java.lang.String[]" type="String" name="items" />
		</fields>
		<methods>
			<constructor visibility="public" name="MultipleInputDialog.FieldSummary">
				<params>
					<param fulltype="int" type="int" name="type" />
					<param fulltype="java.lang.String" type="String" name="name" />
					<param fulltype="java.lang.String" type="String" name="initialValue" />
					<param fulltype="boolean" type="boolean" name="allowsEmpty" />
				</params>
			</constructor>
			<constructor visibility="public" name="MultipleInputDialog.FieldSummary">
				<params>
					<param fulltype="int" type="int" name="type" />
					<param fulltype="java.lang.String" type="String" name="name" />
					<param fulltype="java.lang.String[]" type="String" name="items" />
					<param fulltype="int" type="int" name="initialIndex" />
				</params>
			</constructor>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="protected" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.MultipleInputDialog.Validator" type="MultipleInputDialog.Validator" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<methods>
			<constructor visibility="protected" name="MultipleInputDialog.Validator" />
			<method visibility="package-private" fulltype="boolean" type="boolean" name="validate" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractStylesheetAction" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractStylesheetAction" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.OpenDialogAction" type="OpenDialogAction" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>An action that opens a dialog.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;LAST_PATH_SETTING&quot;" const="LAST_PATH_SETTING" name="LAST_PATH_SETTING" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="OpenDialogAction">
				<comment>
					<description>Create a new instance of this</description>
					<attribute name="@param">
						<description>label the dialog title</description>
					</attribute>
					<attribute name="@param">
						<description>viewer a viewer that this dialog is associated with</description>
					</attribute>
					<attribute name="@param">
						<description>dialogSettingsPrefix the prefix to use for saving dialog preferences</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the dialog title" name="label" />
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" comment="a viewer that this dialog is associated with" name="viewer" />
					<param fulltype="java.lang.String" type="String" comment="the prefix to use for saving dialog preferences" name="dialogSettingsPrefix" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getDialogSettingsPrefix" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getDialogSetting">
				<params>
					<param fulltype="java.lang.String" type="String" name="settingName" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setDialogSetting">
				<params>
					<param fulltype="java.lang.String" type="String" name="settingName" />
					<param fulltype="java.lang.String" type="String" name="value" />
				</params>
			</method>
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogSettings" />
			<method visibility="protected" fulltype="int" type="int" name="getActionType" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractStylesheetAction" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractStylesheetAction" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.RemoveAction" type="RemoveAction" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>An action that removes a selection from a viewer.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="RemoveAction">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>viewer the viewer that will have its selection removed</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" comment="the viewer that will have its selection removed" name="viewer" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="run" />
			<method visibility="protected" fulltype="boolean" type="boolean" name="updateSelection">
				<params>
					<param fulltype="IStructuredSelection" type="IStructuredSelection" name="selection" />
				</params>
			</method>
			<method visibility="protected" fulltype="int" type="int" name="getActionType" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractParameterAction" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractParameterAction" fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.RemoveParameterAction" type="RemoveParameterAction" package="org.eclipse.wst.xsl.internal.debug.ui.actions">
		<comment>
			<description>An action that removes a selection from a viewer.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="RemoveParameterAction">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@param">
						<description>viewer the viewer that will have its selection removed</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.ParameterViewer" type="ParameterViewer" comment="the viewer that will have its selection removed" name="viewer" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="run" />
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xsl.internal.debug.ui.breakpoint.Messages" type="Messages" package="org.eclipse.wst.xsl.internal.debug.ui.breakpoint">
		<comment>
			<description>Messages for the debug UI breakpoints.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLBreakpointProvider_0" static="true">
				<comment>
					<description>Error message for null breakpoints.</description>
				</comment>
			</field>
		</fields>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.breakpoint.XSLBreakpointProvider" type="XSLBreakpointProvider" package="org.eclipse.wst.xsl.internal.debug.ui.breakpoint">
		<comment>
			<description>An SSE &lt;code&gt;IBreakpointProvider&lt;/code&gt; for XSL files.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLBreakpointProvider" />
			<method visibility="public" fulltype="IStatus" type="IStatus" name="addBreakpoint">
				<params>
					<param fulltype="IDocument" type="IDocument" name="document" />
					<param fulltype="IEditorInput" type="IEditorInput" name="input" />
					<param fulltype="int" type="int" name="editorLineNumber" />
					<param fulltype="int" type="int" name="offset" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IResource" type="IResource" name="getResource">
				<params>
					<param fulltype="IEditorInput" type="IEditorInput" name="input" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setInitializationData">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="config" />
					<param fulltype="java.lang.String" type="String" name="propertyName" />
					<param fulltype="java.lang.Object" type="Object" name="data" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setSourceEditingTextTools">
				<params>
					<param fulltype="ISourceEditingTextTools" type="ISourceEditingTextTools" name="tools" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.model.XSLBreakpointAdapterFactory" type="XSLBreakpointAdapterFactory" package="org.eclipse.wst.xsl.internal.debug.ui.model">
		<comment>
			<description>Creates a toggle breakpoint adapter</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLBreakpointAdapterFactory" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getAdapter">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="adaptableObject" />
					<param fulltype="java.lang.Class" type="Class" name="adapterType" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.Class[]" type="Class" name="getAdapterList" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.model.XSLLineBreakpointAdapter" type="XSLLineBreakpointAdapter" package="org.eclipse.wst.xsl.internal.debug.ui.model">
		<comment>
			<description>An &lt;code&gt;IToggleBreakpointsTarget&lt;/code&gt; for XSL breakpoints.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLLineBreakpointAdapter" />
			<method visibility="public" fulltype="void" type="void" name="toggleLineBreakpoints">
				<params>
					<param fulltype="IWorkbenchPart" type="IWorkbenchPart" name="part" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canToggleLineBreakpoints">
				<params>
					<param fulltype="IWorkbenchPart" type="IWorkbenchPart" name="part" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="toggleMethodBreakpoints">
				<params>
					<param fulltype="IWorkbenchPart" type="IWorkbenchPart" name="part" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canToggleMethodBreakpoints">
				<params>
					<param fulltype="IWorkbenchPart" type="IWorkbenchPart" name="part" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="toggleWatchpoints">
				<params>
					<param fulltype="IWorkbenchPart" type="IWorkbenchPart" name="part" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canToggleWatchpoints">
				<params>
					<param fulltype="IWorkbenchPart" type="IWorkbenchPart" name="part" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="LabelProvider" visibility="public" superclassfulltype="LabelProvider" fulltype="org.eclipse.wst.xsl.internal.debug.ui.model.XSLModelPresentation" type="XSLModelPresentation" package="org.eclipse.wst.xsl.internal.debug.ui.model">
		<comment>
			<description>An &lt;code&gt;IDebugModelPresentation&lt;/code&gt; for XSL debugging.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLModelPresentation" />
			<method visibility="public" fulltype="void" type="void" name="setAttribute">
				<params>
					<param fulltype="java.lang.String" type="String" name="attribute" />
					<param fulltype="java.lang.Object" type="Object" name="value" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getImage">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getText">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="public" fulltype="void" type="void" name="computeDetail">
				<params>
					<param fulltype="IValue" type="IValue" name="value" />
					<param fulltype="IValueDetailListener" type="IValueDetailListener" name="listener" />
				</params>
			</method>
			<method visibility="public" fulltype="IEditorInput" type="IEditorInput" name="getEditorInput">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getEditorId">
				<params>
					<param fulltype="IEditorInput" type="IEditorInput" name="input" />
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="StatusDialog" visibility="public" superclassfulltype="StatusDialog" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.AddProcessorDialog" type="AddProcessorDialog" package="org.eclipse.wst.xsl.internal.debug.ui.preferences">
		<methods>
			<constructor visibility="public" name="AddProcessorDialog">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.InstalledProcessorsBlock" type="InstalledProcessorsBlock" name="block" />
					<param fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="parent" />
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorType[]" type="IProcessorType" name="types" />
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="install" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="void" type="void" name="configureShell">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="newShell" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createDialogFields">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createFieldListeners" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getProcessorName" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createDialogArea">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="ancestor" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="create" />
			<method visibility="protected" fulltype="IStatus" type="IStatus" name="validateVersionStatus" />
			<method visibility="protected" fulltype="void" type="void" name="updateStatusLine" />
			<method visibility="protected" fulltype="void" type="void" name="okPressed" />
			<method visibility="protected" fulltype="void" type="void" name="setFieldValuesToProcessor">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.InstallStandin" type="InstallStandin" name="processor" />
				</params>
			</method>
			<method visibility="protected" fulltype="java.io.File" type="File" name="getAbsoluteFileOrEmpty">
				<params>
					<param fulltype="java.lang.String" type="String" name="path" />
				</params>
			</method>
			<method visibility="protected" fulltype="IStatus" type="IStatus" name="getSystemLibraryStatus" />
			<method visibility="protected" fulltype="void" type="void" name="setSystemLibraryStatus">
				<params>
					<param fulltype="IStatus" type="IStatus" name="status" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setVersionStatus">
				<params>
					<param fulltype="IStatus" type="IStatus" name="status" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="updateButtonsEnableState">
				<params>
					<param fulltype="IStatus" type="IStatus" name="status" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setButtonLayoutData">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Button" type="Button" name="button" />
				</params>
			</method>
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getDialogSettingsSectionName" />
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogBoundsSettings" />
		</methods>
	</jelclass>
	<jelclass superclass="PreferencePage" visibility="public" superclassfulltype="PreferencePage" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.BasePreferencePage" type="BasePreferencePage" package="org.eclipse.wst.xsl.internal.debug.ui.preferences">
		<methods>
			<constructor visibility="public" name="BasePreferencePage" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createContents">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IWorkbench" type="IWorkbench" name="workbench" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractTableBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.AbstractTableBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.FeaturesBlock" type="FeaturesBlock" package="org.eclipse.wst.xsl.internal.debug.ui.preferences">
		<methods>
			<constructor visibility="public" name="FeaturesBlock">
				<params>
					<param fulltype="DialogPage" type="DialogPage" name="dialogPage" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogSettings" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getQualifier" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Table" type="Table" name="getTable" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setInput">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IFeature[]" type="IFeature" name="input" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setFeatureValues">
				<params>
					<param fulltype="java.util.Map" type="Map" name="map" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setErrorMessage">
				<params>
					<param fulltype="java.lang.String" type="String" name="errorMessage" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="PreferencePage" visibility="public" superclassfulltype="PreferencePage" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.FeaturesPreferencePage" type="FeaturesPreferencePage" package="org.eclipse.wst.xsl.internal.debug.ui.preferences">
		<methods>
			<constructor visibility="public" name="FeaturesPreferencePage" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createContents">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="package-private" fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="getInitialType" static="true" />
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IWorkbench" type="IWorkbench" name="workbench" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="performDefaults" />
			<method visibility="public" fulltype="boolean" type="boolean" name="performOk" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractTableBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.AbstractTableBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.InstalledProcessorsBlock" type="InstalledProcessorsBlock" package="org.eclipse.wst.xsl.internal.debug.ui.preferences">
		<methods>
			<constructor visibility="public" name="InstalledProcessorsBlock" />
			<method visibility="public" fulltype="void" type="void" name="addSelectionChangedListener">
				<params>
					<param fulltype="ISelectionChangedListener" type="ISelectionChangedListener" name="listener" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeSelectionChangedListener">
				<params>
					<param fulltype="ISelectionChangedListener" type="ISelectionChangedListener" name="listener" />
				</params>
			</method>
			<method visibility="public" fulltype="ISelection" type="ISelection" name="getSelection" />
			<method visibility="public" fulltype="void" type="void" name="setSelection">
				<params>
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="ancestor" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="fillWithWorkspaceProcessors" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Button" type="Button" name="createPushButton">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
					<param fulltype="java.lang.String" type="String" name="label" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="getControl" />
			<method visibility="protected" fulltype="void" type="void" name="setProcessors">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall[]" type="IProcessorInstall" name="vms" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall[]" type="IProcessorInstall" name="getProcessors" />
			<method visibility="public" fulltype="void" type="void" name="processorAdded">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="install" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="isDuplicateName">
				<params>
					<param fulltype="java.lang.String" type="String" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeProcessors">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall[]" type="IProcessorInstall" name="theInstalls" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setCheckedInstall">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="install" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="getCheckedInstall" />
			<method visibility="protected" fulltype="void" type="void" name="setSortColumn">
				<params>
					<param fulltype="int" type="int" name="column" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Table" type="Table" name="getTable" />
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogSettings" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getQualifier" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.Messages" type="Messages" package="org.eclipse.wst.xsl.internal.debug.ui.preferences">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getString" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractTableBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.AbstractTableBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.OutputBlock" type="OutputBlock" package="org.eclipse.wst.xsl.internal.debug.ui.preferences">
		<methods>
			<constructor visibility="public" name="OutputBlock" />
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogSettings" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getQualifier" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Table" type="Table" name="getTable" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addSelectionChangedListener">
				<params>
					<param fulltype="ISelectionChangedListener" type="ISelectionChangedListener" name="listener" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="refresh" />
			<method visibility="public" fulltype="void" type="void" name="setOutputPropertyValues">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="type" />
					<param fulltype="java.util.Properties" type="Properties" name="properties" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setInput">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IOutputProperty[]" type="IOutputProperty" name="keys" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="PreferencePage" visibility="public" superclassfulltype="PreferencePage" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.OutputPreferencePage" type="OutputPreferencePage" package="org.eclipse.wst.xsl.internal.debug.ui.preferences">
		<methods>
			<constructor visibility="public" name="OutputPreferencePage" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createContents">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IWorkbench" type="IWorkbench" name="workbench" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="performDefaults" />
			<method visibility="public" fulltype="boolean" type="boolean" name="performOk" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.ProcessorLibraryBlock" type="ProcessorLibraryBlock" package="org.eclipse.wst.xsl.internal.debug.ui.preferences">
		<implements>
			<interface fulltype="org.eclipse.swt.events.SelectionListener" type="SelectionListener" />
		</implements>
		<fields>
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;LAST_PATH_SETTING&quot;" const="LAST_PATH_SETTING" name="LAST_PATH_SETTING" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;LAST_WORKSPACE_PATH_SETTING&quot;" const="LAST_WORKSPACE_PATH_SETTING" name="LAST_WORKSPACE_PATH_SETTING" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;ProcessorLibraryBlock&quot;" const="ProcessorLibraryBlock" name="DIALOG_SETTINGS_PREFIX" static="true" />
			<field visibility="protected" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.InstallStandin" type="InstallStandin" name="install" />
			<field visibility="protected" fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="installType" />
			<field visibility="protected" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.AddProcessorDialog" type="AddProcessorDialog" name="addDialog" />
			<field visibility="protected" fulltype="TableViewer" type="TableViewer" name="tableViewer" />
		</fields>
		<methods>
			<constructor visibility="public" name="ProcessorLibraryBlock">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.AddProcessorDialog" type="AddProcessorDialog" name="dialog" />
				</params>
			</constructor>
			<method visibility="public" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Button" type="Button" name="createPushButton">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
					<param fulltype="java.lang.String" type="String" name="label" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createVerticalSpacer">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="comp" />
					<param fulltype="int" type="int" name="colSpan" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.InstallStandin" type="InstallStandin" name="standin" />
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="type" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="update">
				<comment>
					<description>Updates buttons and status based on current libraries</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.InstallStandin" type="InstallStandin" name="standin" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="getVMInstall" />
			<method visibility="protected" fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="getVMInstallType" />
			<method visibility="public" fulltype="void" type="void" name="widgetSelected">
				<params>
					<param fulltype="org.eclipse.swt.events.SelectionEvent" type="SelectionEvent" name="e" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="widgetDefaultSelected">
				<params>
					<param fulltype="org.eclipse.swt.events.SelectionEvent" type="SelectionEvent" name="e" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="selectionChanged">
				<params>
					<param fulltype="SelectionChangedEvent" type="SelectionChangedEvent" name="event" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="PreferencePage" visibility="public" superclassfulltype="PreferencePage" fulltype="org.eclipse.wst.xsl.internal.debug.ui.preferences.ProcessorsPreferencePage" type="ProcessorsPreferencePage" package="org.eclipse.wst.xsl.internal.debug.ui.preferences">
		<methods>
			<constructor visibility="public" name="ProcessorsPreferencePage" />
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IWorkbench" type="IWorkbench" name="workbench" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createContents">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="ancestor" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="performOk" />
		</methods>
	</jelclass>
	<jelclass superclass="XSLLaunchConfigurationTab" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLLaunchConfigurationTab" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.formatter.FOFormatterTab" type="FOFormatterTab" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.formatter">
		<methods>
			<constructor visibility="public" name="FOFormatterTab" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="protected" fulltype="void" type="void" name="handleSelectionChanged" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.formatter.Messages" type="Messages" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.formatter">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getString" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="ResourceSelectionBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.ResourceSelectionBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.formatter.RendererConfigurationBlock" type="RendererConfigurationBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.formatter">
		<methods>
			<constructor visibility="public" name="RendererConfigurationBlock" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getMessage">
				<params>
					<param fulltype="int" type="int" name="type" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setDefaultResource" />
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.formatter.RendererTabMessages" type="RendererTabMessages" final="true" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.formatter">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLFOComboBlock_XSLFOGroupTitle" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLFOComboBlock_None" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLFOComboBlock_SpecificXSLFOProcessor" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLFOComboBlock_ManageXSLFOProcessor" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputBlock_XMLButton" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputBlock_FOButton" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputBlock_HTMLButton" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputBlock_OutputFilesGroupTitle" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputBlock_OutputTypeGroupTitle" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_Working_Directory_8" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="RendererTabMessages" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.formatter.XSLFOComboBlock" type="XSLFOComboBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.formatter">
		<methods>
			<constructor visibility="public" name="XSLFOComboBlock" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="ancestor" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="getControl" />
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.IParametersChangedListener" type="IParametersChangedListener" abstract="true" interface="true" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<methods>
			<method visibility="public" fulltype="void" type="void" name="parametersChanged">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.ParameterViewer" type="ParameterViewer" name="viewer" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.IStylesheetEntriesChangedListener" type="IStylesheetEntriesChangedListener" abstract="true" interface="true" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<methods>
			<method visibility="public" fulltype="void" type="void" name="entriesChanged">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" name="viewer" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="ResourceSelectionBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.ResourceSelectionBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.InputFileBlock" type="InputFileBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<fields>
			<field visibility="package-private" fulltype="IContentTypeManager" type="IContentTypeManager" name="contentTypeManager" />
		</fields>
		<methods>
			<constructor visibility="public" name="InputFileBlock">
				<params>
					<param fulltype="IFile" type="IFile" name="defaultFile" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="java.lang.String[]" type="String" name="getFileExtensions" />
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="protected" fulltype="void" type="void" name="setDefaultResource" />
			<method visibility="protected" fulltype="void" type="void" name="textModified" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getMessage">
				<params>
					<param fulltype="int" type="int" name="type" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="updateResourceText">
				<params>
					<param fulltype="boolean" type="boolean" name="useDefault" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.MainTabMessages" type="MainTabMessages" final="true" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLMainTab_LabelText" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="StylesheetEntryLabelProvider_Invalid_path" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLMainTab_Project_Group" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLMainTab_Browse_Projects" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLMainTab_Project_Does_Not_Exist" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLMainTab_Project_Closed" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLMainTab_Project_Name_Invalid" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLMainTab_Choose_Project_Dialog_Title" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLMainTab_Choose_Project_Dialog_Message" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLMainTab_Transforms_Group" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="TransformsBlock_0" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="TransformsBlock_Name" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_DIRECTORY_NOT_SPECIFIED" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_DIRECTORY_DOES_NOT_EXIST" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_GROUP_NAME" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_DEFAULT_RADIO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_OTHER_RADIO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_DIALOG_MESSAGE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_WORKSPACE_DIALOG_MESSAGE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_VARIABLES_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_FILE_SYSTEM_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_WORKSPACE_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_Name" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_Exception_occurred_reading_configuration" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_WORKSPACE_DIALOG_TITLE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="XSLMainTab_TabName" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_Exception_occurred_saving_configuration" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputTypeBlock_Group_Name" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_0" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_7" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_8" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_9" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_DIRECTORY_NOT_SPECIFIED" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_DIRECTORY_DOES_NOT_EXIST" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_GROUP_NAME" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_DEFAULT_RADIO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_OTHER_RADIO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_DIALOG_MESSAGE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_WORKSPACE_DIALOG_MESSAGE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_VARIABLES_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_FILE_SYSTEM_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_WORKSPACE_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_Name" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_Exception_occurred_reading_configuration" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_WORKSPACE_DIALOG_TITLE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFileBlock_Exception_occurred_saving_configuration" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_DIRECTORY_NOT_SPECIFIED" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_DIRECTORY_DOES_NOT_EXIST" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_GROUP_NAME" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_DEFAULT_RADIO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_OTHER_RADIO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_DIALOG_MESSAGE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_WORKSPACE_DIALOG_MESSAGE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_VARIABLES_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_FILE_SYSTEM_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_WORKSPACE_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_Name" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_Exception_occurred_reading_configuration" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_WORKSPACE_DIALOG_TITLE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputFOFileBlock_Exception_occurred_saving_configuration" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="TransformsBlock_ParametersLabel" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="TransformsBlock_StylesheetsLabel" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="MainTabMessages" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.Messages" type="Messages" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getString" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="TableViewer" visibility="public" superclassfulltype="TableViewer" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.ParameterViewer" type="ParameterViewer" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<methods>
			<constructor visibility="public" name="ParameterViewer">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Table" type="Table" name="table" />
				</params>
			</constructor>
			<method visibility="public" fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="getShell" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isEnabled" />
			<method visibility="public" fulltype="boolean" type="boolean" name="updateSelection">
				<params>
					<param fulltype="int" type="int" name="actionType" />
					<param fulltype="IStructuredSelection" type="IStructuredSelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="IStructuredSelection" type="IStructuredSelection" name="getSelectedEntries" />
			<method visibility="public" fulltype="void" type="void" name="addParameter">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchAttribute" type="LaunchAttribute" name="parameter" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeEntries">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchAttribute[]" type="LaunchAttribute" name="entries" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchAttribute[]" type="LaunchAttribute" name="getParameters" />
			<method visibility="public" fulltype="void" type="void" name="addParametersChangedListener">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.IParametersChangedListener" type="IParametersChangedListener" name="listener" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeParametersChangedListener">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.IParametersChangedListener" type="IParametersChangedListener" name="listener" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractTableBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.AbstractTableBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.ParametersBlock" type="ParametersBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<methods>
			<constructor visibility="public" name="ParametersBlock">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.TransformsBlock" type="TransformsBlock" name="transformsBlock" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="void" type="void" name="setTransform">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform" type="LaunchTransform" name="transform" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="updateEnabled" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Button" type="Button" name="createButton">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="pathButtonComp" />
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractParameterAction" type="AbstractParameterAction" name="action" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setSortColumn">
				<params>
					<param fulltype="int" type="int" name="column" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Table" type="Table" name="getTable" />
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogSettings" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getQualifier" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.ParametersContentProvider" type="ParametersContentProvider" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<methods>
			<constructor visibility="public" name="ParametersContentProvider" />
			<method visibility="public" fulltype="java.lang.Object[]" type="Object" name="getElements">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="inputElement" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="inputChanged">
				<params>
					<param fulltype="Viewer" type="Viewer" name="viewer" />
					<param fulltype="java.lang.Object" type="Object" name="oldInput" />
					<param fulltype="java.lang.Object" type="Object" name="newInput" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchAttribute[]" type="LaunchAttribute" name="getParameters" />
			<method visibility="public" fulltype="void" type="void" name="removeParameters">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchAttribute[]" type="LaunchAttribute" name="entries" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addParameter">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchAttribute" type="LaunchAttribute" name="parameter" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.ParametersLabelProvider" type="ParametersLabelProvider" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<methods>
			<constructor visibility="public" name="ParametersLabelProvider" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getColumnText">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
					<param fulltype="int" type="int" name="columnIndex" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getColumnImage">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
					<param fulltype="int" type="int" name="columnIndex" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addListener">
				<params>
					<param fulltype="ILabelProviderListener" type="ILabelProviderListener" name="listener" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isLabelProperty">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
					<param fulltype="java.lang.String" type="String" name="property" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeListener">
				<params>
					<param fulltype="ILabelProviderListener" type="ILabelProviderListener" name="listener" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetContentProvider" type="StylesheetContentProvider" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<methods>
			<constructor visibility="public" name="StylesheetContentProvider" />
			<method visibility="public" fulltype="java.lang.Object[]" type="Object" name="getElements">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="inputElement" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="inputChanged">
				<params>
					<param fulltype="Viewer" type="Viewer" name="viewer" />
					<param fulltype="java.lang.Object" type="Object" name="oldInput" />
					<param fulltype="java.lang.Object" type="Object" name="newInput" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="public" fulltype="void" type="void" name="setEntries">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform[]" type="LaunchTransform" name="transforms" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addEntries">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform[]" type="LaunchTransform" name="res" />
					<param fulltype="java.lang.Object" type="Object" name="beforeElement" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeEntries">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform[]" type="LaunchTransform" name="res" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="LabelProvider" visibility="public" superclassfulltype="LabelProvider" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetLabelProvider" type="StylesheetLabelProvider" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<methods>
			<constructor visibility="public" name="StylesheetLabelProvider" />
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getImage">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getText">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="TableViewer" visibility="public" superclassfulltype="TableViewer" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<methods>
			<constructor visibility="public" name="StylesheetViewer">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="setEntries">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform[]" type="LaunchTransform" name="transforms" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform[]" type="LaunchTransform" name="getEntries" />
			<method visibility="public" fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="getShell" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isEnabled" />
			<method visibility="public" fulltype="boolean" type="boolean" name="updateSelection">
				<params>
					<param fulltype="int" type="int" name="actionType" />
					<param fulltype="IStructuredSelection" type="IStructuredSelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="IStructuredSelection" type="IStructuredSelection" name="getSelectedEntries" />
			<method visibility="public" fulltype="void" type="void" name="addTransforms">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform[]" type="LaunchTransform" name="res" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeEntries">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform[]" type="LaunchTransform" name="entries" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addEntriesChangedListener">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.IStylesheetEntriesChangedListener" type="IStylesheetEntriesChangedListener" name="listener" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeEntriesChangedListener">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.IStylesheetEntriesChangedListener" type="IStylesheetEntriesChangedListener" name="listener" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractTableBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.AbstractTableBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.TransformsBlock" type="TransformsBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.IStylesheetEntriesChangedListener" type="IStylesheetEntriesChangedListener" />
		</implements>
		<fields>
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" name="DIALOG_SETTINGS_PREFIX" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="TransformsBlock" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="Viewer" type="Viewer" name="getStylesheetViewer" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Button" type="Button" name="createArrowButton">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="pathButtonComp" />
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractStylesheetAction" type="AbstractStylesheetAction" name="action" />
					<param fulltype="int" type="int" name="updown" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Button" type="Button" name="createButton">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="pathButtonComp" />
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.actions.AbstractStylesheetAction" type="AbstractStylesheetAction" name="action" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="setPipeline">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchPipeline" type="LaunchPipeline" name="pipeline" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="entriesChanged">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.StylesheetViewer" type="StylesheetViewer" name="viewer" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setSortColumn">
				<params>
					<param fulltype="int" type="int" name="column" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Table" type="Table" name="getTable" />
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogSettings" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getQualifier" />
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="XSLLaunchConfigurationTab" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLLaunchConfigurationTab" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.XSLMainTab" type="XSLMainTab" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.main">
		<fields>
			<field visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchPipeline" type="LaunchPipeline" name="pipeline" />
		</fields>
		<methods>
			<constructor visibility="public" name="XSLMainTab" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getImage" />
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.output.Messages" type="Messages" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.output">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputPropertiesBlock_0" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputPropertiesBlock_1" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputPropertiesBlock_13" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputPropertiesBlock_3" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputPropertiesBlock_4" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputPropertiesBlock_5" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputPropertiesBlock_7" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputPropertiesBlock_8" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputPropertiesBlock_9" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputTab_0" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="OutputTab_1" static="true" />
		</fields>
	</jelclass>
	<jelclass superclass="ResourceSelectionBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.ResourceSelectionBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.output.OutputFileBlock" type="OutputFileBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.output">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;&lt;Default&gt;&quot;" const="&lt;Default&gt;" name="OUTPUT_METHOD_DEFAULT" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;xml&quot;" const="xml" name="OUTPUT_METHOD_XML" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;xhtml&quot;" const="xhtml" name="OUTPUT_METHOD_XHTML" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;html&quot;" const="html" name="OUTPUT_METHOD_HTML" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;text&quot;" const="text" name="OUTPUT_METHOD_TEXT" static="true" />
			<field visibility="public" fulltype="java.lang.String[]" type="String" final="true" name="OUTPUT_METHODS" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="OutputFileBlock" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getMessage">
				<params>
					<param fulltype="int" type="int" name="type" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setDefaultResource" />
			<method visibility="protected" fulltype="void" type="void" name="createContents">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createButtons">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractTableBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.AbstractTableBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.output.OutputPropertiesBlock" type="OutputPropertiesBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.output">
		<methods>
			<constructor visibility="public" name="OutputPropertiesBlock">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.XSLMainTab" type="XSLMainTab" name="main" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogSettings" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getQualifier" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Table" type="Table" name="getTable" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSLLaunchConfigurationTab" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLLaunchConfigurationTab" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.output.OutputTab" type="OutputTab" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.output">
		<methods>
			<constructor visibility="public" name="OutputTab">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.main.XSLMainTab" type="XSLMainTab" name="main" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getImage" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractTableBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.AbstractTableBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.FeaturesBlock" type="FeaturesBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor">
		<methods>
			<constructor visibility="public" name="FeaturesBlock" />
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogSettings" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getQualifier" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Table" type="Table" name="getTable" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setProcessorType">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="processorType" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="ProcessorInstall" visibility="public" superclassfulltype="org.eclipse.wst.xsl.launching.ProcessorInstall" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.InstallStandin" type="InstallStandin" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor">
		<methods>
			<constructor visibility="public" name="InstallStandin">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="install" />
				</params>
			</constructor>
			<constructor visibility="public" name="InstallStandin">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
					<param fulltype="java.lang.String" type="String" name="name" />
					<param fulltype="java.lang.String" type="String" name="typeId" />
					<param fulltype="java.lang.String" type="String" name="debuggerId" />
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorJar[]" type="IProcessorJar" name="jars" />
				</params>
			</constructor>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.JarContentProvider" type="JarContentProvider" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor">
		<methods>
			<constructor visibility="public" name="JarContentProvider" />
			<method visibility="public" fulltype="java.lang.Object[]" type="Object" name="getElements">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="inputElement" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
			<method visibility="public" fulltype="void" type="void" name="inputChanged">
				<params>
					<param fulltype="Viewer" type="Viewer" name="viewer" />
					<param fulltype="java.lang.Object" type="Object" name="oldInput" />
					<param fulltype="java.lang.Object" type="Object" name="newInput" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="LabelProvider" visibility="public" superclassfulltype="LabelProvider" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.JarLabelProvider" type="JarLabelProvider" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor">
		<methods>
			<constructor visibility="public" name="JarLabelProvider" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getText">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="element" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.Messages" type="Messages" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getString" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractLaunchConfigurationTab" visibility="public" superclassfulltype="AbstractLaunchConfigurationTab" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.ProcessorBlock" type="ProcessorBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor">
		<methods>
			<constructor visibility="public" name="ProcessorBlock">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.FeaturesBlock" type="FeaturesBlock" name="featuresBlock" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.ProcessorDescriptor" type="ProcessorDescriptor" abstract="true" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor">
		<methods>
			<constructor visibility="public" name="ProcessorDescriptor" />
			<method visibility="public" fulltype="java.lang.String" type="String" abstract="true" name="getDescription" />
		</methods>
	</jelclass>
	<jelclass superclass="Dialog" visibility="public" superclassfulltype="Dialog" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.ProcessorDetailsDialog" type="ProcessorDetailsDialog" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor">
		<methods>
			<constructor visibility="public" name="ProcessorDetailsDialog">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="shell" />
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="install" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="void" type="void" name="configureShell">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Shell" type="Shell" name="newShell" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createDialogArea">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="ancestor" />
				</params>
			</method>
			<method visibility="protected" fulltype="java.lang.String" returncomment="String" type="String" name="getDialogSettingsSectionName">
				<comment>
					<description>Returns the name of the section that this dialog stores its settings in</description>
					<attribute name="@return">
						<description>String</description>
					</attribute>
				</comment>
			</method>
			<method visibility="protected" fulltype="IDialogSettings" type="IDialogSettings" name="getDialogBoundsSettings" />
			<method visibility="protected" fulltype="void" type="void" name="createButtonsForButtonBar">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="NLS" visibility="public" superclassfulltype="NLS" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.ProcessorMessages" type="ProcessorMessages" final="true" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorBlock_0" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorBlock_1" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorBlock_2" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorBlock_4" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorBlock_6" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorBlock_7" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorsComboBlock" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorsComboBlock_0" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorsComboBlock_1" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="SpecificProcessor" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InputFileBlock_WORKSPACE_DIALOG_TITLE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InstalledProcessorsBlock_0" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InstalledProcessorsBlock_1" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InstalledProcessorsBlock_2" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InstalledProcessorsBlock_3" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InstalledProcessorsBlock_4" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InstalledProcessorsBlock_5" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InstalledProcessorsBlock_6" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InstalledProcessorsBlock_7" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="InstalledProcessorsBlock_8" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorDetailsDialog_Title" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorDetailsDialog_installName" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorDetailsDialog_installType" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorDetailsDialog_installClasspath" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_1" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_7" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_Edit_Title" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_Add_Title" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_jars" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_features" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_processorName" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_processorType" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorLibraryBlock_6" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorLibraryBlock_AddButton" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorLibraryBlock_RemoveButton" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorLibraryBlock_AddWorkspaceButton" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_enterName" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_duplicateName" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="AddProcessorDialog_Processor_name_must_be_a_valid_file_name" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorLibraryBlock_FileDialog_Title" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorLibraryBlock_WorkspaceFileDialog_Title" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorLibraryBlock_WorkspaceFileDialog_Message" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="ProcessorsUpdater" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_1" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_2" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_3" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_DIRECTORY_NOT_SPECIFIED" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_DIRECTORY_DOES_NOT_EXIST" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_DEFAULT_RADIO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_OTHER_RADIO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_DIALOG_MESSAGE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_WORKSPACE_DIALOG_MESSAGE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_VARIABLES_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_FILE_SYSTEM_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_WORKSPACE_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="WorkingDirectoryBlock_WORKSPACE_DIALOG_TITLE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_3" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_5" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_6" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_8" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_DIRECTORY_NOT_SPECIFIED" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_DIRECTORY_DOES_NOT_EXIST" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_DEFAULT_RADIO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_OTHER_RADIO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_DIALOG_MESSAGE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_WORKSPACE_DIALOG_MESSAGE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_VARIABLES_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_FILE_SYSTEM_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_WORKSPACE_BUTTON" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="URIResolverBlock_WORKSPACE_DIALOG_TITLE" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="ProcessorMessages" />
		</methods>
	</jelclass>
	<jelclass superclass="XSLLaunchConfigurationTab" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.XSLLaunchConfigurationTab" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor.XSLProcessorTab" type="XSLProcessorTab" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.processor">
		<methods>
			<constructor visibility="public" name="XSLProcessorTab" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" type="Image" name="getImage" />
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.resolver.Messages" type="Messages" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.resolver">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getString" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="ResourceSelectionBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.ResourceSelectionBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.resolver.URIResolverBlock" type="URIResolverBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.resolver">
		<methods>
			<constructor visibility="public" name="URIResolverBlock" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getMessage">
				<params>
					<param fulltype="int" type="int" name="type" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setDefaultResource" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createCheckboxAndText">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="updateResourceText">
				<params>
					<param fulltype="boolean" type="boolean" name="useDefault" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="updateEnablement">
				<params>
					<param fulltype="boolean" type="boolean" name="useDefault" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="config" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractLaunchConfigurationTab" visibility="public" superclassfulltype="AbstractLaunchConfigurationTab" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.resolver.URIResolverBlock2" type="URIResolverBlock2" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.resolver">
		<methods>
			<constructor visibility="public" name="URIResolverBlock2" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isValid">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="launchConfig" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="ResourceSelectionBlock" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.debug.ui.ResourceSelectionBlock" fulltype="org.eclipse.wst.xsl.internal.debug.ui.tabs.resolver.WorkingDirectoryBlock" type="WorkingDirectoryBlock" package="org.eclipse.wst.xsl.internal.debug.ui.tabs.resolver">
		<methods>
			<constructor visibility="public" name="WorkingDirectoryBlock" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="getMessage">
				<params>
					<param fulltype="int" type="int" name="type" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="createCheckboxAndText">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setDefaultResource" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="initializeFrom">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="updateResourceText">
				<params>
					<param fulltype="boolean" type="boolean" name="useDefault" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="updateDefaultWorkingDir" />
			<method visibility="public" fulltype="void" type="void" name="performApply">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaults">
				<params>
					<param fulltype="ILaunchConfigurationWorkingCopy" type="ILaunchConfigurationWorkingCopy" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="isValid">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="config" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.debugger.AbstractDebugger" type="AbstractDebugger" abstract="true" package="org.eclipse.wst.xsl.debugger">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.debugger.IXSLDebugger" type="IXSLDebugger" />
		</implements>
		<comment>
			<description>An implementation of &lt;code&gt;IXSLDebugger&lt;/code&gt;.
 
 This class can be subclassed in order to provide debugging for a particular XSLT processor.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="AbstractDebugger" />
			<method visibility="public" fulltype="void" type="void" name="setInvoker">
				<params>
					<param fulltype="org.eclipse.wst.xsl.invoker.IProcessorInvoker" type="IProcessorInvoker" name="invoker" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setEventWriter">
				<params>
					<param fulltype="java.io.Writer" type="Writer" name="writer" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setSource">
				<params>
					<param fulltype="java.net.URL" type="URL" name="sourceURL" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setTarget">
				<params>
					<param fulltype="javax.xml.transform.Result" type="Result" name="res" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="run" />
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="suspend" />
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="resume" />
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="stepInto" />
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="stepOver" />
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="stepReturn" />
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="quit" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="stack" />
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="checkStopped">
				<comment>
					<description>Check whether the debugger has been stopped and perform the appropriate action if so.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="checkSuspended">
				<comment>
					<description>Check whether the debugger is currently suspended or stepping at the given breakpoint and style frame, 
 and perform the appropriate action if so.</description>
					<attribute name="@param">
						<description>styleFrame the styleframe to check</description>
					</attribute>
					<attribute name="@param">
						<description>breakpoint the current location</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.StyleFrame" type="StyleFrame" comment="the styleframe to check" name="styleFrame" />
					<param fulltype="org.eclipse.wst.xsl.debugger.BreakPoint" type="BreakPoint" comment="the current location" name="breakpoint" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="debuggerTransformStarted">
				<comment>
					<description>Called when the next transform in the pipeline has begun.</description>
				</comment>
			</method>
			<method visibility="protected" fulltype="void" type="void" synchronized="true" name="debuggerStarted" />
			<method visibility="protected" fulltype="void" type="void" synchronized="true" name="debuggerStopped" />
			<method visibility="public" fulltype="void" type="void" name="addBreakpoint">
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.BreakPoint" type="BreakPoint" name="breakpoint" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeBreakpoint">
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.BreakPoint" type="BreakPoint" name="breakpoint" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.debugger.StyleFrame" returncomment="the popped style frame" type="StyleFrame" name="popStyleFrame">
				<comment>
					<description>Pop a style frame from the stack.</description>
					<attribute name="@return">
						<description>the popped style frame</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="pushStyleFrame">
				<comment>
					<description>Push a style frame onto the stack.</description>
					<attribute name="@param">
						<description>styleFrame</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.StyleFrame" type="StyleFrame" comment="" name="styleFrame" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.debugger.StyleFrame" returncomment="the peeked style frame" type="StyleFrame" name="peekStyleFrame">
				<comment>
					<description>Peek a style frame from the stack.</description>
					<attribute name="@return">
						<description>the peeked style frame</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.debugger.BreakPoint" type="BreakPoint" package="org.eclipse.wst.xsl.debugger">
		<comment>
			<description>A line number in a file.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="BreakPoint">
				<comment>
					<description>Construct a new instance of this for the given file and line number.</description>
					<attribute name="@param">
						<description>file the file path</description>
					</attribute>
					<attribute name="@param">
						<description>line the line number</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the file path" name="file" />
					<param fulltype="int" type="int" comment="the line number" name="line" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" returncomment="the file" type="String" name="getFile">
				<comment>
					<description>Get the file location.</description>
					<attribute name="@return">
						<description>the file</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="int" returncomment="the line number" type="int" name="getLine">
				<comment>
					<description>Get the line number</description>
					<attribute name="@return">
						<description>the line number</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="int" type="int" name="hashCode" />
			<method visibility="public" fulltype="boolean" type="boolean" name="equals">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="obj" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="toString" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.debugger.DebugConstants" type="DebugConstants" package="org.eclipse.wst.xsl.debugger">
		<comment>
			<description>Constants used by the debugger.
 
 &lt;p&gt;
 Note that class is loaded both on the Eclipse classpath and the 
 launched transformation process, such that they can use exactly the same constants
 for communication.
 &lt;/p&gt;</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;start&quot;" const="start" name="REQUEST_START" static="true">
				<comment>
					<description>The constant used to notify the debugger to start.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;add&quot;" const="add" name="REQUEST_ADD_BREAKPOINT" static="true">
				<comment>
					<description>The constant used to signify addition of a breakpoint.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;remove&quot;" const="remove" name="REQUEST_REMOVE_BREAKPOINT" static="true">
				<comment>
					<description>The constant used to signify removal of a breakpoint.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;step into&quot;" const="step into" name="REQUEST_STEP_INTO" static="true">
				<comment>
					<description>The constant used to signify step into.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;step over&quot;" const="step over" name="REQUEST_STEP_OVER" static="true">
				<comment>
					<description>The constant used to signify step over.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;suspend&quot;" const="suspend" name="REQUEST_SUSPEND" static="true">
				<comment>
					<description>The constant used to signify suspension.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;resume&quot;" const="resume" name="REQUEST_RESUME" static="true">
				<comment>
					<description>The constant used to signify resume.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;stack&quot;" const="stack" name="REQUEST_STACK" static="true">
				<comment>
					<description>The constant used to request the stack.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;var&quot;" const="var" name="REQUEST_VARIABLE" static="true">
				<comment>
					<description>The constant used to request a variable.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;value&quot;" const="value" name="REQUEST_VALUE" static="true">
				<comment>
					<description>The constant used to request a variable value.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;step return&quot;" const="step return" name="REQUEST_STEP_RETURN" static="true">
				<comment>
					<description>The constant used to signify step return.</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="DebugConstants" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.debugger.DebugRunner" type="DebugRunner" package="org.eclipse.wst.xsl.debugger">
		<comment>
			<description>The entry point to the debug process which is responsible for configuring a debugger 
 and then communicating with the Eclipse process via sockets using a common set of commands.
 
 &lt;ul&gt;
 &lt;li&gt;instantiates an implementation of &lt;code&gt;IXSLDebugger&lt;/code&gt;
 &lt;li&gt;configures the debugger with the transformation pipeline
 &lt;li&gt;starts the debugger in a separate thread
 &lt;li&gt;the main thread is then used to listen to incoming requests and call the appropriate debugger methods
 &lt;/ul&gt;</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="DebugRunner">
				<comment>
					<description>Create a new instance of this using the supplied readers and writers.</description>
					<attribute name="@param">
						<description>requestIn the reader for reading incoming requests</description>
					</attribute>
					<attribute name="@param">
						<description>requestOut the writer for acknowledging requests</description>
					</attribute>
					<attribute name="@param">
						<description>eventOut the writer for publishing debug events</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.io.BufferedReader" type="BufferedReader" comment="the reader for reading incoming requests" name="requestIn" />
					<param fulltype="java.io.PrintWriter" type="PrintWriter" comment="the writer for acknowledging requests" name="requestOut" />
					<param fulltype="java.io.PrintWriter" type="PrintWriter" comment="the writer for publishing debug events" name="eventOut" />
				</params>
			</constructor>
			<constructor visibility="public" name="DebugRunner">
				<comment>
					<description>Create a new instance of this given a request port and an event port.</description>
					<attribute name="@param">
						<description>requestPort the port to listen to requests and send acknowledgements</description>
					</attribute>
					<attribute name="@param">
						<description>eventPort the port for publishing debug events</description>
					</attribute>
					<attribute name="@throws">
						<description>IOException if there was a problem opening a socket</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="int" type="int" comment="the port to listen to requests and send acknowledgements" name="requestPort" />
					<param fulltype="int" type="int" comment="the port for publishing debug events" name="eventPort" />
				</params>
				<exceptions>
					<exception fulltype="java.io.IOException" type="IOException" comment="if there was a problem opening a socket" />
				</exceptions>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="loop">
				<comment>
					<description>This method starts the given debugger in its own thread, and blocks while waiting 
 for incoming requests from the request port, until there are no more requests.</description>
					<attribute name="@param">
						<description>debugger the debugger to start in a thread</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformationException if a problem occurred while transforming</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.IXSLDebugger" type="IXSLDebugger" comment="the debugger to start in a thread" name="debugger" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xsl.invoker.TransformationException" type="TransformationException" comment="if a problem occurred while transforming" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose">
				<comment>
					<description>Dispose of this - close all open sockets.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="main" static="true">
				<comment>
					<description>Expected arguments:
 
 &lt;ol&gt;
 &lt;li&gt;the class name of the invoker
 &lt;li&gt;the file name of the XML launch configuration file
 &lt;li&gt;the URL of the source document
 &lt;li&gt;the file of the output document
 &lt;li&gt;not used (anything)
 &lt;li&gt;the class name of the &lt;code&gt;IXSLDebugger&lt;/code&gt; instance
 &lt;li&gt;the port used for requests
 &lt;li&gt;the port used for debug events
 &lt;/ol&gt;</description>
					<attribute name="@param">
						<description>args</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String[]" type="String" comment="" name="args" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.debugger.IXSLDebugger" type="IXSLDebugger" abstract="true" interface="true" package="org.eclipse.wst.xsl.debugger">
		<implements>
			<interface fulltype="java.lang.Runnable" type="Runnable" />
		</implements>
		<comment>
			<description>An interface to XSL debugger instances.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="void" type="void" name="setInvoker">
				<comment>
					<description>Set the invoker to use.</description>
					<attribute name="@param">
						<description>invoker the invoker to set</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.invoker.IProcessorInvoker" type="IProcessorInvoker" comment="the invoker to set" name="invoker" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setTransformerFactory">
				<comment>
					<description>Set the transformer factory to use.</description>
					<attribute name="@param">
						<description>factory the factory to use</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="javax.xml.transform.TransformerFactory" type="TransformerFactory" comment="the factory to use" name="factory" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addTransformer">
				<comment>
					<description>Add a transformer to this.</description>
					<attribute name="@param">
						<description>transformer</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="javax.xml.transform.Transformer" type="Transformer" comment="" name="transformer" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setEventWriter">
				<comment>
					<description>Set the Writer for this to write events to.</description>
					<attribute name="@param">
						<description>writer the writer to write events to</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.io.Writer" type="Writer" comment="the writer to write events to" name="writer" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setSource">
				<comment>
					<description>Set the URL of the transformation source file.</description>
					<attribute name="@param">
						<description>sourceURL the source URL</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.net.URL" type="URL" comment="the source URL" name="sourceURL" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setTarget">
				<comment>
					<description>Set the transformation Result.</description>
					<attribute name="@param">
						<description>res the result</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="javax.xml.transform.Result" type="Result" comment="the result" name="res" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addBreakpoint">
				<comment>
					<description>Add a breakpoint to this.</description>
					<attribute name="@param">
						<description>breakpoint</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.BreakPoint" type="BreakPoint" comment="" name="breakpoint" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeBreakpoint">
				<comment>
					<description>Remove a breakpoint from this.</description>
					<attribute name="@param">
						<description>breakpoint</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.BreakPoint" type="BreakPoint" comment="" name="breakpoint" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepInto">
				<comment>
					<description>Perform a &apos;step into&apos; operation.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepOver">
				<comment>
					<description>Perform a &apos;step over&apos; operation.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepReturn">
				<comment>
					<description>Perform a &apos;step return&apos; operation.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="suspend">
				<comment>
					<description>Perform a &apos;suspend&apos; operation.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="resume">
				<comment>
					<description>Perform a &apos;resume&apos; operation.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="quit">
				<comment>
					<description>Quit debugging.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the generated string" type="String" name="stack">
				<comment>
					<description>Generate a string that represents the current call stack of frames and their variables.
 &lt;p&gt;
 Frames are generated with the following format: &lt;i&gt;file&lt;/i&gt;|&lt;i&gt;frameId&lt;/i&gt;|&lt;i&gt;lineNumber&lt;/i&gt;|&lt;i&gt;name&lt;/i&gt;
 This is immediately followed with the id&apos;s of the frame&apos;s variables (each variable id being unique for the whole process).
 &lt;/p&gt;
 &lt;p&gt;
 The separator for frames is $$$. Within a frame, the separator for variable id&apos;s is |.
 &lt;/p&gt;
 &lt;p&gt;
 e.g. file:/tran1.xsl|1|12|xsl:template name=&quot;temp1&quot;|1|2|3$$$file:/tran2.xsl|2|34|xsl:template name=&quot;temp2&quot;|4|5|6
 
 This defines 2 frames with id&apos;s 1 and 2, which are occur in files tran1.xsl and tran2.xsl respectively.
 Frame 1 is currently at line 12, in a template with name temp1, and it defines 3 variables with id&apos;s 1, 2 and 3. 
 &lt;/p&gt;</description>
					<attribute name="@return">
						<description>the generated string</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.debugger.Variable" returncomment="the variable" type="Variable" name="getVariable">
				<comment>
					<description>Get the variable with the given id.</description>
					<attribute name="@param">
						<description>id the id of the variable</description>
					</attribute>
					<attribute name="@return">
						<description>the variable</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="int" type="int" comment="the id of the variable" name="id" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.debugger.StyleFrame" type="StyleFrame" abstract="true" package="org.eclipse.wst.xsl.debugger">
		<comment>
			<description>An &lt;code&gt;xsl:template&lt;/code&gt; that forms part of the call stack.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="StyleFrame">
				<comment>
					<description>Create a new instance of this using the given frame as its parent (may be null if this is the root frame).</description>
					<attribute name="@param">
						<description>parent the parent frame</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.StyleFrame" type="StyleFrame" comment="the parent frame" name="parent" />
				</params>
			</constructor>
			<method visibility="public" fulltype="int" returncomment="a unique id for this frame" type="int" name="getId">
				<comment>
					<description>A unique id for this frame</description>
					<attribute name="@return">
						<description>a unique id for this frame</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the name of this" type="String" abstract="true" name="getName">
				<comment>
					<description>Get the name of this frame.</description>
					<attribute name="@return">
						<description>the name of this</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the filename for this" type="String" abstract="true" name="getFilename">
				<comment>
					<description>Get the file in which this frame is found.</description>
					<attribute name="@return">
						<description>the filename for this</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="int" returncomment="the line number at which this is held" type="int" abstract="true" name="getCurrentLine">
				<comment>
					<description>Get the line number at which the frame is currently located.</description>
					<attribute name="@return">
						<description>the line number at which this is held</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the list of variables for this frame" type="List" abstract="true" name="getVariableStack">
				<comment>
					<description>Get a list of &lt;code&gt;Variables&lt;/code&gt;&apos;s</description>
					<attribute name="@return">
						<description>the list of variables for this frame</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.debugger.StyleFrame" returncomment="the parent frame" type="StyleFrame" name="getParent">
				<comment>
					<description>Get the parent of this.</description>
					<attribute name="@return">
						<description>the parent frame</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addChild">
				<comment>
					<description>Add a child frame to this.</description>
					<attribute name="@param">
						<description>child the frame to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.StyleFrame" type="StyleFrame" comment="the frame to add" name="child" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeChild">
				<comment>
					<description>Remove a child frame from this.</description>
					<attribute name="@param">
						<description>child the frame to remove</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.StyleFrame" type="StyleFrame" comment="the frame to remove" name="child" />
				</params>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="a list of &lt;code&gt;StyleFrame&lt;/code&gt;&apos;s" type="List" name="getChildren">
				<comment>
					<description>Get the children of this</description>
					<attribute name="@return">
						<description>a list of &lt;code&gt;StyleFrame&lt;/code&gt;&apos;s</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="toString">
				<comment>
					<description>Creates a string in the format &lt;i&gt;file&lt;/i&gt;|&lt;i&gt;frameId&lt;/i&gt;|&lt;i&gt;lineNumber&lt;/i&gt;|&lt;i&gt;name&lt;/i&gt;.
 Since pipe is used as a separator, the name has any pipe (|) characters replaced with the literal &apos;%@_PIPE_@%&apos;</description>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.debugger.Variable" type="Variable" abstract="true" package="org.eclipse.wst.xsl.debugger">
		<comment>
			<description>An abstract class that XSL processor implementations can subclass for their variables.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;L&quot;" const="L" name="LOCAL_SCOPE" static="true">
				<comment>
					<description>The constant denoting a local scope variable.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;T&quot;" const="T" name="TUNNEL_SCOPE" static="true">
				<comment>
					<description>The constant denoting a tunnel scope variable.</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;G&quot;" const="G" name="GLOBAL_SCOPE" static="true">
				<comment>
					<description>The constant denoting a global scope variable.</description>
				</comment>
			</field>
			<field visibility="protected" fulltype="int" type="int" final="true" constexpr="100" const="100" name="MAXIMUM_VALUE_SIZE" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;unresolved&quot;" const="unresolved" name="UNRESOLVED" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;boolean&quot;" const="boolean" name="BOOLEAN" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;number&quot;" const="number" name="NUMBER" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;string&quot;" const="string" name="STRING" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;nodeset&quot;" const="nodeset" name="NODESET" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;object&quot;" const="object" name="OBJECT" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;unknown&quot;" const="unknown" name="UNKNOWN" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" name="name" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" name="scope" />
			<field visibility="protected" fulltype="int" type="int" final="true" name="slotNumber" />
		</fields>
		<methods>
			<constructor visibility="public" name="Variable">
				<comment>
					<description>Create a new instance of this with the given name, scope and slot number.</description>
					<attribute name="@param">
						<description>name the name of this</description>
					</attribute>
					<attribute name="@param">
						<description>scope the scope of this</description>
					</attribute>
					<attribute name="@param">
						<description>slotNumber the slot number of this</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the name of this" name="name" />
					<param fulltype="java.lang.String" type="String" comment="the scope of this" name="scope" />
					<param fulltype="int" type="int" comment="the slot number of this" name="slotNumber" />
				</params>
			</constructor>
			<method visibility="public" fulltype="int" returncomment="the variable id" type="int" name="getId">
				<comment>
					<description>Get the id used for this.</description>
					<attribute name="@return">
						<description>the variable id</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the variable name" type="String" name="getName">
				<comment>
					<description>Get the variable name.</description>
					<attribute name="@return">
						<description>the variable name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the variable type" type="String" abstract="true" name="getType">
				<comment>
					<description>Get the type of this variable e.g. string, or node</description>
					<attribute name="@return">
						<description>the variable type</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the variable scope" type="String" name="getScope">
				<comment>
					<description>Get the scope of this variable - one of &lt;code&gt;LOCAL_SCOPE&lt;/code&gt;, &lt;code&gt;TUNNEL_SCOPE&lt;/code&gt; or &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt;.</description>
					<attribute name="@return">
						<description>the variable scope</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the value of this" type="String" abstract="true" name="getValue">
				<comment>
					<description>Get the current value of this variable as a String.</description>
					<attribute name="@return">
						<description>the value of this</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the first line of the value" type="String" name="getValueFirstLine">
				<comment>
					<description>Get the first line of the value truncating to &lt;code&gt;MAXIMUM_VALUE_SIZE&lt;/code&gt; where necessary.</description>
					<attribute name="@return">
						<description>the first line of the value</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="int" returncomment="the slot number" type="int" name="getSlotNumber">
				<comment>
					<description>Get the slot number for this.</description>
					<attribute name="@return">
						<description>the slot number</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="int" type="int" name="hashCode" />
			<method visibility="public" fulltype="boolean" type="boolean" name="equals">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="obj" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Exception" visibility="public" superclassfulltype="java.lang.Exception" fulltype="org.eclipse.wst.xsl.invoker.ConfigurationException" type="ConfigurationException" serializable="true" package="org.eclipse.wst.xsl.invoker">
		<comment>
			<description>An exception thrown when configuration of an XSL transform pipeline fails.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="ConfigurationException">
				<comment>
					<description>Create the exception.</description>
					<attribute name="@param">
						<description>msg the exception message</description>
					</attribute>
					<attribute name="@param">
						<description>t the underlying cause</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the exception message" name="msg" />
					<param fulltype="java.lang.Throwable" type="Throwable" comment="the underlying cause" name="t" />
				</params>
			</constructor>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.invoker.IProcessorInvoker" type="IProcessorInvoker" abstract="true" interface="true" package="org.eclipse.wst.xsl.invoker">
		<comment>
			<description>Interface used by the launched process to define the XSL transformation pipeline.
 The &lt;code&gt;setFeatures&lt;/code&gt; and &lt;code&gt;addStylesheet&lt;/code&gt; methods should be called
 before calling &lt;code&gt;transform&lt;/code&gt; to do the actual transformation.
 
 &lt;p&gt;
 If &lt;code&gt;addStylesheet&lt;/code&gt; is not called before &lt;code&gt;transform&lt;/code&gt;, then
 it is assumed that the source document contains and embedded stylesheet instruction.
 &lt;/p&gt;</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="void" type="void" name="setFeatures">
				<comment>
					<description>Set the processor-specific features to use.</description>
					<attribute name="@param">
						<description>features a map of String v. String features</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.util.Map" type="Map" comment="a map of String v. String features" name="features" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addStylesheet">
				<comment>
					<description>Add a stylesheet to the pipeline (order is important).</description>
					<attribute name="@param">
						<description>stylesheet the URL of the stylesheet to add</description>
					</attribute>
					<attribute name="@param">
						<description>parameters the map of parameters for the stylesheet</description>
					</attribute>
					<attribute name="@param">
						<description>outputProperties the output properties</description>
					</attribute>
					<attribute name="@param">
						<description>resolver the &lt;code&gt;URIResolver&lt;/code&gt; to use</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformerConfigurationException if stylesheet could not be added</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.net.URL" type="URL" comment="the URL of the stylesheet to add" name="stylesheet" />
					<param fulltype="java.util.Map" type="Map" comment="the map of parameters for the stylesheet" name="parameters" />
					<param fulltype="java.util.Properties" type="Properties" comment="the output properties" name="outputProperties" />
					<param fulltype="javax.xml.transform.URIResolver" type="URIResolver" comment="the &lt;code&gt;URIResolver&lt;/code&gt; to use" name="resolver" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerConfigurationException" type="TransformerConfigurationException" comment="if stylesheet could not be added" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="transform">
				<comment>
					<description>Perform the actual transformation.</description>
					<attribute name="@param">
						<description>source the URL of the XML source document</description>
					</attribute>
					<attribute name="@param">
						<description>res the transformation result</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformationException if the transformation failed</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.net.URL" type="URL" comment="the URL of the XML source document" name="source" />
					<param fulltype="javax.xml.transform.Result" type="Result" comment="the transformation result" name="res" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xsl.invoker.TransformationException" type="TransformationException" comment="if the transformation failed" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.invoker.JAXPSAXProcessorInvoker" type="JAXPSAXProcessorInvoker" package="org.eclipse.wst.xsl.invoker">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.invoker.IProcessorInvoker" type="IProcessorInvoker" />
		</implements>
		<comment>
			<description>An implementation of &lt;code&gt;IProcessorInvoker&lt;/code&gt; that uses JAXP as the underlying
 transformation mechanism.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="JAXPSAXProcessorInvoker">
				<comment>
					<description>Create a new instance of this.</description>
					<attribute name="@throws">
						<description>SAXException if errors occur while creating an &lt;code&gt;XMLReader&lt;/code&gt;</description>
					</attribute>
					<attribute name="@throws">
						<description>ParserConfigurationException if errors occur while creating an &lt;code&gt;XMLReader&lt;/code&gt;</description>
					</attribute>
				</comment>
				<exceptions>
					<exception fulltype="org.xml.sax.SAXException" type="SAXException" comment="if errors occur while creating an &lt;code&gt;XMLReader&lt;/code&gt;" />
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" comment="if errors occur while creating an &lt;code&gt;XMLReader&lt;/code&gt;" />
				</exceptions>
			</constructor>
			<method visibility="protected" fulltype="org.xml.sax.XMLReader" type="XMLReader" name="createReader">
				<exceptions>
					<exception fulltype="org.xml.sax.SAXException" type="SAXException" />
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setFeatures">
				<params>
					<param fulltype="java.util.Map" type="Map" name="features" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerFactoryConfigurationError" type="TransformerFactoryConfigurationError" />
				</exceptions>
			</method>
			<method visibility="protected" fulltype="javax.xml.transform.TransformerFactory" type="TransformerFactory" name="createTransformerFactory" />
			<method visibility="public" fulltype="void" type="void" name="addStylesheet">
				<params>
					<param fulltype="java.net.URL" type="URL" name="stylesheet" />
					<param fulltype="java.util.Map" type="Map" name="parameters" />
					<param fulltype="java.util.Properties" type="Properties" name="outputProperties" />
					<param fulltype="javax.xml.transform.URIResolver" type="URIResolver" name="resolver" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerConfigurationException" type="TransformerConfigurationException" />
				</exceptions>
			</method>
			<method visibility="protected" fulltype="javax.xml.transform.Transformer" type="Transformer" name="addStylesheet">
				<params>
					<param fulltype="javax.xml.transform.Source" type="Source" name="source" />
					<param fulltype="javax.xml.transform.URIResolver" type="URIResolver" name="resolver" />
					<param fulltype="java.util.Map" type="Map" name="parameters" />
					<param fulltype="java.util.Properties" type="Properties" name="outputProperties" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerConfigurationException" type="TransformerConfigurationException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="transform">
				<params>
					<param fulltype="java.net.URL" type="URL" name="sourceURL" />
					<param fulltype="javax.xml.transform.Result" type="Result" name="res" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xsl.invoker.TransformationException" type="TransformationException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="transform">
				<comment>
					<description>Transform using an InputSource rather than a URL</description>
					<attribute name="@param">
						<description>inputsource the InputSource to use</description>
					</attribute>
					<attribute name="@param">
						<description>res the Result</description>
					</attribute>
					<attribute name="@throws">
						<description>TransformationException if an error occurred during transformation</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.xml.sax.InputSource" type="InputSource" comment="the InputSource to use" name="inputsource" />
					<param fulltype="javax.xml.transform.Result" type="Result" comment="the Result" name="res" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xsl.invoker.TransformationException" type="TransformationException" comment="if an error occurred during transformation" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.invoker.Main" type="Main" package="org.eclipse.wst.xsl.invoker">
		<comment>
			<description>The class whose &lt;code&gt;main&lt;/code&gt; method is called when launching the transformation process from
 Eclipse.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="Main" />
			<method visibility="public" fulltype="void" type="void" name="main" static="true">
				<comment>
					<description>The &lt;code&gt;main&lt;/code&gt; method called when launching the transformation process.
 There are 4 required arguments:
 &lt;ol&gt;
 &lt;li&gt;The class name of the &lt;code&gt;IProcessorInvoker&lt;/code&gt; to use
 &lt;li&gt;The launch file (serialized &lt;code&gt;PipelineDefinition&lt;/code&gt;)
 &lt;li&gt;The URL of the source XML document
 &lt;li&gt;The file where output will be written
 &lt;/ol&gt;</description>
					<attribute name="@param">
						<description>args the 4 required arguments</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String[]" type="String" comment="the 4 required arguments" name="args" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.invoker.Messages" type="Messages" package="org.eclipse.wst.xsl.invoker">
		<comment>
			<description>Messages for the transformation.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="java.lang.String" returncomment="the message" type="String" name="getString" static="true">
				<comment>
					<description>Get a message for the given key.</description>
					<attribute name="@param">
						<description>key the message key</description>
					</attribute>
					<attribute name="@return">
						<description>the message</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the message key" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Exception" visibility="public" superclassfulltype="java.lang.Exception" fulltype="org.eclipse.wst.xsl.invoker.TransformationException" type="TransformationException" serializable="true" package="org.eclipse.wst.xsl.invoker">
		<comment>
			<description>Checked Exception for transformation errors.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="TransformationException">
				<comment>
					<description>Create a new instance of this with the given message.</description>
					<attribute name="@param">
						<description>message the message</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the message" name="message" />
				</params>
			</constructor>
			<constructor visibility="public" name="TransformationException">
				<comment>
					<description>Create a new instance of this with the given message and cause.</description>
					<attribute name="@param">
						<description>message the message</description>
					</attribute>
					<attribute name="@param">
						<description>cause the cause</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the message" name="message" />
					<param fulltype="java.lang.Throwable" type="Throwable" comment="the cause" name="cause" />
				</params>
			</constructor>
		</methods>
	</jelclass>
	<jelclass superclass="Exception" visibility="public" superclassfulltype="java.lang.Exception" fulltype="org.eclipse.wst.xsl.invoker.config.CreationException" type="CreationException" serializable="true" package="org.eclipse.wst.xsl.invoker.config">
		<comment>
			<description>Checked Exception for object creation errors.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="CreationException">
				<comment>
					<description>Create a new instance of this with the given message.</description>
					<attribute name="@param">
						<description>message the message</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the message" name="message" />
				</params>
			</constructor>
			<constructor visibility="public" name="CreationException">
				<comment>
					<description>Create a new instance of this with the given message and cause.</description>
					<attribute name="@param">
						<description>message the message</description>
					</attribute>
					<attribute name="@param">
						<description>cause the cause</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the message" name="message" />
					<param fulltype="java.lang.Throwable" type="Throwable" comment="the cause" name="cause" />
				</params>
			</constructor>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.invoker.config.Messages" type="Messages" package="org.eclipse.wst.xsl.invoker.config">
		<comment>
			<description>Messages for the configuration.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="java.lang.String" returncomment="the message" type="String" name="getString" static="true">
				<comment>
					<description>Get a message for the given key.</description>
					<attribute name="@param">
						<description>key the message key</description>
					</attribute>
					<attribute name="@return">
						<description>the message</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the message key" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.invoker.config.PipelineDefinition" type="PipelineDefinition" package="org.eclipse.wst.xsl.invoker.config">
		<comment>
			<description>The definition of the transformation pipeline.
 &lt;p&gt;
 This class is loaded on both the Eclipse classpath and the transformation process&apos;s classpath.
 The whole definition is serialized to an XML document by the Eclipse launcher, and is then 
 read by the transformation process when launched.
 &lt;/p&gt;</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="PipelineDefinition">
				<comment>
					<description>Create a new empty instance of this.</description>
				</comment>
			</constructor>
			<constructor visibility="public" name="PipelineDefinition">
				<comment>
					<description>Create a new instance of this by reading the specified XML file.</description>
					<attribute name="@param">
						<description>launchFile the XSL file to load</description>
					</attribute>
					<attribute name="@throws">
						<description>SAXException if problems occur during parsing</description>
					</attribute>
					<attribute name="@throws">
						<description>IOException if problems occur during parsing</description>
					</attribute>
					<attribute name="@throws">
						<description>ParserConfigurationException if problems occur during parsing</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.io.File" type="File" comment="the XSL file to load" name="launchFile" />
				</params>
				<exceptions>
					<exception fulltype="org.xml.sax.SAXException" type="SAXException" comment="if problems occur during parsing" />
					<exception fulltype="java.io.IOException" type="IOException" comment="if problems occur during parsing" />
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" comment="if problems occur during parsing" />
				</exceptions>
			</constructor>
			<constructor visibility="public" name="PipelineDefinition">
				<comment>
					<description>Create a new instance of this from the specified document</description>
					<attribute name="@param">
						<description>doc the Document to create this from</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Document" type="Document" comment="the Document to create this from" name="doc" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="configure">
				<comment>
					<description>Configure the invoker from this.</description>
					<attribute name="@param">
						<description>invoker the invoker to configure</description>
					</attribute>
					<attribute name="@throws">
						<description>ConfigurationException if an exception occurs during configuration</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.invoker.IProcessorInvoker" type="IProcessorInvoker" comment="the invoker to configure" name="invoker" />
				</params>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xsl.invoker.ConfigurationException" type="ConfigurationException" comment="if an exception occurs during configuration" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.util.Set" returncomment="the set of features" type="Set" name="getFeatures">
				<comment>
					<description>Get the set of features defined.</description>
					<attribute name="@return">
						<description>the set of features</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addFeature">
				<comment>
					<description>Add a feature to this configuration</description>
					<attribute name="@param">
						<description>feature the feature to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.invoker.config.TypedValue" type="TypedValue" comment="the feature to add" name="feature" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeFeature">
				<comment>
					<description>Remove a feature from the set of features</description>
					<attribute name="@param">
						<description>feature the feature to remove</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.invoker.config.TypedValue" type="TypedValue" comment="the feature to remove" name="feature" />
				</params>
			</method>
			<method visibility="public" fulltype="java.util.List" returncomment="the list of transform definitions" type="List" name="getTransformDefs">
				<comment>
					<description>Get the list of &lt;code&gt;TransformDefinition&lt;/code&gt;&apos;s.</description>
					<attribute name="@return">
						<description>the list of transform definitions</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addTransformDef">
				<comment>
					<description>Add a transform definition to this.</description>
					<attribute name="@param">
						<description>tdef the transform definition to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.invoker.config.TransformDefinition" type="TransformDefinition" comment="the transform definition to add" name="tdef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeTransformDef">
				<comment>
					<description>Remove a transform definition from this.</description>
					<attribute name="@param">
						<description>tdef the transform definition to remove</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.invoker.config.TransformDefinition" type="TransformDefinition" comment="the transform definition to remove" name="tdef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setUseEmbedded">
				<comment>
					<description>Set whether to use an XSL declaration embedded in the XML file</description>
					<attribute name="@param">
						<description>embedded true to use embedded</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="boolean" type="boolean" comment="true to use embedded" name="embedded" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" returncomment="true if embedded" type="boolean" name="useEmbedded">
				<comment>
					<description>Get whether to use an XSL declaration embedded in the XML file</description>
					<attribute name="@return">
						<description>true if embedded</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.Document" returncomment="the serialized document" type="Document" name="toXML">
				<comment>
					<description>Serialize this to a DOM Document.</description>
					<attribute name="@return">
						<description>the serialized document</description>
					</attribute>
					<attribute name="@throws">
						<description>ParserConfigurationException if a problem occurs during serialization</description>
					</attribute>
				</comment>
				<exceptions>
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" comment="if a problem occurs during serialization" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.invoker.config.TransformDefinition" type="TransformDefinition" package="org.eclipse.wst.xsl.invoker.config">
		<comment>
			<description>A definition of a particular step in the transformation pipeline.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="TransformDefinition" />
			<method visibility="public" fulltype="java.util.Map" returncomment="a map of names and values" type="Map" name="getParametersAsMap">
				<comment>
					<description>Get the parameters as a map of name (&lt;code&gt;String&lt;/code&gt;) v. value &lt;code&gt;TypedValue&lt;/code&gt;.</description>
					<attribute name="@return">
						<description>a map of names and values</description>
					</attribute>
					<attribute name="@throws">
						<description>CreationException if an exception occurred during object creation</description>
					</attribute>
				</comment>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xsl.invoker.config.CreationException" type="CreationException" comment="if an exception occurred during object creation" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.util.Set" returncomment="a set of &lt;code&gt;TypedValue&lt;/code&gt;&apos;s" type="Set" name="getParameters">
				<comment>
					<description>The set of parameters</description>
					<attribute name="@return">
						<description>a set of &lt;code&gt;TypedValue&lt;/code&gt;&apos;s</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addParameter">
				<comment>
					<description>Add a parameter to the set of parameters</description>
					<attribute name="@param">
						<description>parameter the parameter to add</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.invoker.config.TypedValue" type="TypedValue" comment="the parameter to add" name="parameter" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeParameter">
				<comment>
					<description>Remove a parameter.</description>
					<attribute name="@param">
						<description>parameter the parameter to remove</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.invoker.config.TypedValue" type="TypedValue" comment="the parameter to remove" name="parameter" />
				</params>
			</method>
			<method visibility="public" fulltype="java.util.Properties" returncomment="the output properties" type="Properties" name="getOutputProperties">
				<comment>
					<description>Get the output properties for this.</description>
					<attribute name="@return">
						<description>the output properties</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setOutputProperties">
				<comment>
					<description>Set the output properties for this.</description>
					<attribute name="@param">
						<description>outputProperties the output properties to set</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.util.Properties" type="Properties" comment="the output properties to set" name="outputProperties" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setOutputProperty">
				<comment>
					<description>Set the value of a specific output property.</description>
					<attribute name="@param">
						<description>name the output property</description>
					</attribute>
					<attribute name="@param">
						<description>value the value</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the output property" name="name" />
					<param fulltype="java.lang.String" type="String" comment="the value" name="value" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeOutputProperty">
				<comment>
					<description>Remove an output property.</description>
					<attribute name="@param">
						<description>name the output property to remove</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the output property to remove" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the resolver&apos;s class name" type="String" name="getResolverClass">
				<comment>
					<description>Get the name of the &lt;code&gt;URIResolver&lt;/code&gt; class to use.</description>
					<attribute name="@return">
						<description>the resolver&apos;s class name</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setResolverClass">
				<comment>
					<description>Set the name of the &lt;code&gt;URIResolver&lt;/code&gt; class to use.</description>
					<attribute name="@param">
						<description>resolver the resolver&apos;s class name</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the resolver&apos;s class name" name="resolver" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the stylesheet URL" type="String" name="getStylesheetURL">
				<comment>
					<description>Get the URL of the stylesheet.</description>
					<attribute name="@return">
						<description>the stylesheet URL</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setStylesheetURL">
				<comment>
					<description>Set the URL of the stylesheet.</description>
					<attribute name="@param">
						<description>stylesheet the stylesheet URL</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the stylesheet URL" name="stylesheet" />
				</params>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.Element" returncomment="the root element of the fragment" type="Element" name="asXML">
				<comment>
					<description>Serialize this to a Document fragment.</description>
					<attribute name="@param">
						<description>doc the document to attach to</description>
					</attribute>
					<attribute name="@return">
						<description>the root element of the fragment</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Document" type="Document" comment="the document to attach to" name="doc" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.invoker.config.TransformDefinition" returncomment="a new instance of this" type="TransformDefinition" name="fromXML" static="true">
				<comment>
					<description>Create a new instance of this from its serialized form.</description>
					<attribute name="@param">
						<description>transformEl the element to create this from</description>
					</attribute>
					<attribute name="@return">
						<description>a new instance of this</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.w3c.dom.Element" type="Element" comment="the element to create this from" name="transformEl" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.invoker.config.TypedValue" type="TypedValue" package="org.eclipse.wst.xsl.invoker.config">
		<comment>
			<description>A value that is to be instantiated from a particular type e.g. Double, Object.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="package-private" fulltype="java.lang.String" type="String" final="true" name="uri" />
			<field visibility="package-private" fulltype="java.lang.String" type="String" final="true" name="type" />
			<field visibility="package-private" fulltype="java.lang.String" type="String" final="true" name="value" />
		</fields>
		<methods>
			<constructor visibility="public" name="TypedValue">
				<comment>
					<description>Create a new instance of this from the given information.</description>
					<attribute name="@param">
						<description>uri the URI of the feature</description>
					</attribute>
					<attribute name="@param">
						<description>type the type of value</description>
					</attribute>
					<attribute name="@param">
						<description>value the value</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the URI of the feature" name="uri" />
					<param fulltype="java.lang.String" type="String" comment="the type of value" name="type" />
					<param fulltype="java.lang.String" type="String" comment="the value" name="value" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.Object" returncomment="the value" type="Object" name="createValue">
				<comment>
					<description>Create the type of object defined by this.</description>
					<attribute name="@return">
						<description>the value</description>
					</attribute>
					<attribute name="@throws">
						<description>CreationException if a problem occurred</description>
					</attribute>
				</comment>
				<exceptions>
					<exception fulltype="org.eclipse.wst.xsl.invoker.config.CreationException" type="CreationException" comment="if a problem occurred" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.DebuggerDescriptor" type="DebuggerDescriptor" package="org.eclipse.wst.xsl.internal.launching">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.launching.IDebugger" type="IDebugger" />
		</implements>
		<methods>
			<constructor visibility="public" name="DebuggerDescriptor">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
					<param fulltype="java.lang.String" type="String" name="bundleId" />
					<param fulltype="java.lang.String" type="String" name="className" />
					<param fulltype="java.lang.String[]" type="String" name="classpath" />
					<param fulltype="java.lang.String" type="String" name="name" />
					<param fulltype="java.lang.String" type="String" name="processorTypeId" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getClassName" />
			<method visibility="public" fulltype="java.lang.String[]" type="String" name="getClassPath" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getId" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="getProcessorType" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.Feature" type="Feature" package="org.eclipse.wst.xsl.internal.launching">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.launching.IFeature" type="IFeature" />
			<interface fulltype="java.lang.Comparable" type="Comparable" />
		</implements>
		<methods>
			<constructor visibility="public" name="Feature">
				<params>
					<param fulltype="java.lang.String" type="String" name="uri" />
					<param fulltype="java.lang.String" type="String" name="type" />
					<param fulltype="java.lang.String" type="String" name="description" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getDescription" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getType" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getURI" />
			<method visibility="public" fulltype="IStatus" type="IStatus" name="validateValue">
				<params>
					<param fulltype="java.lang.String" type="String" name="value" />
				</params>
			</method>
			<method visibility="public" fulltype="int" type="int" name="compareTo">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="o" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.FeaturePreferences" type="FeaturePreferences" package="org.eclipse.wst.xsl.internal.launching">
		<methods>
			<constructor visibility="public" name="FeaturePreferences" />
			<method visibility="public" fulltype="java.util.Map" type="Map" name="getFeaturesValues">
				<params>
					<param fulltype="java.lang.String" type="String" name="typeId" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setTypeFeatures">
				<params>
					<param fulltype="java.util.Map" type="Map" name="typeFeatures" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getAsXML">
				<exceptions>
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" />
					<exception fulltype="java.io.IOException" type="IOException" />
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.internal.launching.FeaturePreferences" type="FeaturePreferences" name="fromXML" static="true">
				<params>
					<param fulltype="java.io.InputStream" type="InputStream" name="inputStream" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Plugin" visibility="public" superclassfulltype="Plugin" fulltype="org.eclipse.wst.xsl.internal.launching.LaunchingPlugin" type="LaunchingPlugin" package="org.eclipse.wst.xsl.internal.launching">
		<comment>
			<description>The activator class controls the plug-in life cycle</description>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching&quot;" const="org.eclipse.wst.xsl.launching" name="PLUGIN_ID" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="LaunchingPlugin">
				<comment>
					<description>The constructor</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="start">
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stop">
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.internal.launching.LaunchingPlugin" returncomment="the shared instance" type="LaunchingPlugin" name="getDefault" static="true">
				<comment>
					<description>Returns the shared instance</description>
					<attribute name="@return">
						<description>the shared instance</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="log" static="true">
				<params>
					<param fulltype="java.lang.Exception" type="Exception" name="e" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.Messages" type="Messages" package="org.eclipse.wst.xsl.internal.launching">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getString" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.OutputProperty" type="OutputProperty" package="org.eclipse.wst.xsl.internal.launching">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.launching.IOutputProperty" type="IOutputProperty" />
		</implements>
		<methods>
			<constructor visibility="public" name="OutputProperty">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
					<param fulltype="java.lang.String" type="String" name="desc" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getDescription" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getURI" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.OutputPropertyPreferences" type="OutputPropertyPreferences" package="org.eclipse.wst.xsl.internal.launching">
		<methods>
			<constructor visibility="public" name="OutputPropertyPreferences" />
			<method visibility="public" fulltype="java.util.Properties" type="Properties" name="getOutputPropertyValues">
				<params>
					<param fulltype="java.lang.String" type="String" name="typeId" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setOutputPropertyValues">
				<params>
					<param fulltype="java.lang.String" type="String" name="typeId" />
					<param fulltype="java.util.Properties" type="Properties" name="properties" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getAsXML">
				<exceptions>
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" />
					<exception fulltype="java.io.IOException" type="IOException" />
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.internal.launching.OutputPropertyPreferences" type="OutputPropertyPreferences" name="fromXML" static="true">
				<params>
					<param fulltype="java.io.InputStream" type="InputStream" name="inputStream" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.PluginProcessorJar" type="PluginProcessorJar" package="org.eclipse.wst.xsl.internal.launching">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.launching.IProcessorJar" type="IProcessorJar" />
		</implements>
		<methods>
			<constructor visibility="public" name="PluginProcessorJar">
				<params>
					<param fulltype="java.lang.String" type="String" name="pluginId" />
					<param fulltype="IPath" type="IPath" name="path" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.net.URL" type="URL" name="asURL" />
			<method visibility="public" fulltype="IPath" type="IPath" name="getPath" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="toString" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractPreferenceInitializer" visibility="public" superclassfulltype="AbstractPreferenceInitializer" fulltype="org.eclipse.wst.xsl.internal.launching.PreferenceInitializer" type="PreferenceInitializer" package="org.eclipse.wst.xsl.internal.launching">
		<comment>
			<description>Class used to initialize default preference values.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="PreferenceInitializer" />
			<method visibility="public" fulltype="void" type="void" name="initializeDefaultPreferences" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.PreferenceUtil" type="PreferenceUtil" package="org.eclipse.wst.xsl.internal.launching">
		<methods>
			<constructor visibility="public" name="PreferenceUtil" />
			<method visibility="public" fulltype="void" type="void" name="createCoreException" static="true">
				<params>
					<param fulltype="java.lang.Throwable" type="Throwable" name="e" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.Document" type="Document" name="getDocument" static="true">
				<exceptions>
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="serializeDocument" static="true">
				<params>
					<param fulltype="org.w3c.dom.Document" type="Document" name="doc" />
				</params>
				<exceptions>
					<exception fulltype="java.io.IOException" type="IOException" />
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.Element[]" type="Element" name="getChildElements" static="true">
				<params>
					<param fulltype="org.w3c.dom.Element" type="Element" name="parent" />
					<param fulltype="java.lang.String" type="String" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getNodeText" static="true">
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" name="node" />
				</params>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.Document" type="Document" name="getDocument" static="true">
				<params>
					<param fulltype="java.io.InputStream" type="InputStream" name="stream" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.ProcessorInvokerDescriptor" type="ProcessorInvokerDescriptor" package="org.eclipse.wst.xsl.internal.launching">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.launching.IProcessorInvoker" type="IProcessorInvoker" />
		</implements>
		<methods>
			<constructor visibility="public" name="ProcessorInvokerDescriptor">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
					<param fulltype="java.lang.String" type="String" name="bundleId" />
					<param fulltype="java.lang.String" type="String" name="invokerClass" />
					<param fulltype="java.lang.String[]" type="String" name="classpath" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String[]" type="String" name="getClasspathEntries" />
			<method visibility="public" fulltype="java.lang.String[]" type="String" name="createEntries" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="bundleId" />
					<param fulltype="java.lang.String[]" type="String" name="classpath" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getInvokerClassName">
				<comment>
					<description>The name of the class that implements IProcessorInvoker</description>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getId" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.ProcessorJar" type="ProcessorJar" package="org.eclipse.wst.xsl.internal.launching">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.launching.IProcessorJar" type="IProcessorJar" />
		</implements>
		<methods>
			<constructor visibility="public" name="ProcessorJar">
				<params>
					<param fulltype="IPath" type="IPath" name="path" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.net.URL" type="URL" name="asURL" />
			<method visibility="public" fulltype="IPath" type="IPath" name="getPath" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="toString" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.ProcessorPreferences" type="ProcessorPreferences" package="org.eclipse.wst.xsl.internal.launching">
		<methods>
			<constructor visibility="public" name="ProcessorPreferences" />
			<method visibility="public" fulltype="void" type="void" name="setProcessors">
				<params>
					<param fulltype="java.util.List" type="List" name="processors" />
				</params>
			</method>
			<method visibility="public" fulltype="java.util.List" type="List" name="getProcessors" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getDefaultProcessorId" />
			<method visibility="public" fulltype="void" type="void" name="setDefaultProcessorId">
				<params>
					<param fulltype="java.lang.String" type="String" name="defaultProcessorId" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getAsXML">
				<exceptions>
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" />
					<exception fulltype="java.io.IOException" type="IOException" />
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.internal.launching.ProcessorPreferences" type="ProcessorPreferences" name="fromXML" static="true">
				<params>
					<param fulltype="java.io.InputStream" type="InputStream" name="inputStream" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.ProcessorType" type="ProcessorType" package="org.eclipse.wst.xsl.internal.launching">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" />
		</implements>
		<methods>
			<constructor visibility="public" name="ProcessorType">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
					<param fulltype="java.lang.String" type="String" name="name" />
					<param fulltype="java.net.URL" type="URL" name="featurePropertiesURL" />
					<param fulltype="java.net.URL" type="URL" name="outputPropertiesURL" />
					<param fulltype="java.util.Map" type="Map" name="featureValues" />
					<param fulltype="java.util.Properties" type="Properties" name="outputPropertyValues" />
					<param fulltype="java.lang.String" type="String" name="transFactoryName" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getId" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getLabel" />
			<method visibility="public" fulltype="java.util.Map" type="Map" name="getFeatureValues" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IFeature[]" type="IFeature" name="getFeatures" />
			<method visibility="public" fulltype="java.util.Properties" type="Properties" name="getOutputPropertyValues" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isJREDefault" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getTransformerFactoryName" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IOutputProperty[]" type="IOutputProperty" name="getOutputProperties" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.Utils" type="Utils" package="org.eclipse.wst.xsl.internal.launching">
		<methods>
			<constructor visibility="public" name="Utils" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getFileLocation" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="bundleId" />
					<param fulltype="java.lang.String" type="String" name="path" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="PropertyTester" visibility="public" superclassfulltype="PropertyTester" fulltype="org.eclipse.wst.xsl.internal.launching.XSLPropertyTester" type="XSLPropertyTester" package="org.eclipse.wst.xsl.internal.launching">
		<methods>
			<constructor visibility="public" name="XSLPropertyTester" />
			<method visibility="public" fulltype="boolean" type="boolean" name="test">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="arg0" />
					<param fulltype="java.lang.String" type="String" name="arg1" />
					<param fulltype="java.lang.Object[]" type="Object" name="arg2" />
					<param fulltype="java.lang.Object" type="Object" name="arg3" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="JavaLaunchDelegate" visibility="public" superclassfulltype="JavaLaunchDelegate" fulltype="org.eclipse.wst.xsl.internal.launching.XSLTLaunchConfigurationDelegate" type="XSLTLaunchConfigurationDelegate" package="org.eclipse.wst.xsl.internal.launching">
		<methods>
			<constructor visibility="public" name="XSLTLaunchConfigurationDelegate" />
			<method visibility="public" fulltype="void" type="void" synchronized="true" name="launch">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
					<param fulltype="java.lang.String" type="String" name="mode" />
					<param fulltype="ILaunch" type="ILaunch" name="launch" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" name="monitor" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="protected" fulltype="IBreakpoint[]" type="IBreakpoint" name="getBreakpoints">
				<comment>
					<description>Get the Java breakpoint and the XSL breakpoints</description>
				</comment>
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="preLaunchCheck">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
					<param fulltype="java.lang.String" type="String" name="mode" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" name="monitor" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IVMRunner" type="IVMRunner" name="getVMRunner">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
					<param fulltype="java.lang.String" type="String" name="mode" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IPath" type="IPath" name="getWorkingDirectoryPath">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="getProcessorInstall" static="true">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
					<param fulltype="java.lang.String" type="String" name="mode" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getMainTypeName">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getProgramArguments">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String[]" type="String" name="getClasspath">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getVMArguments">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractSourceLookupDirector" visibility="public" superclassfulltype="AbstractSourceLookupDirector" fulltype="org.eclipse.wst.xsl.internal.launching.XSLTSourceLookupDirector" type="XSLTSourceLookupDirector" package="org.eclipse.wst.xsl.internal.launching">
		<methods>
			<constructor visibility="public" name="XSLTSourceLookupDirector" />
			<method visibility="public" fulltype="void" type="void" name="initializeParticipants" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractSourceLookupParticipant" visibility="public" superclassfulltype="AbstractSourceLookupParticipant" fulltype="org.eclipse.wst.xsl.internal.launching.XSLTSourceLookupParticipant" type="XSLTSourceLookupParticipant" package="org.eclipse.wst.xsl.internal.launching">
		<comment>
			<description>Translate a stack frame into a source file name</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLTSourceLookupParticipant" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getSourceName">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="object" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.XSLTSourcePathComputerDelegate" type="XSLTSourcePathComputerDelegate" package="org.eclipse.wst.xsl.internal.launching">
		<methods>
			<constructor visibility="public" name="XSLTSourcePathComputerDelegate" />
			<method visibility="public" fulltype="ISourceContainer[]" type="ISourceContainer" name="computeSourceContainers">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" name="monitor" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.registry.AbstractRegistryReader" type="AbstractRegistryReader" abstract="true" package="org.eclipse.wst.xsl.internal.launching.registry">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;class&quot;" const="class" name="ATT_CLASS" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;description&quot;" const="description" name="TAG_DESCRIPTION" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="AbstractRegistryReader" />
			<method visibility="protected" fulltype="void" type="void" name="logError" static="true">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
					<param fulltype="java.lang.String" type="String" name="text" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="logMissingAttribute" static="true">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
					<param fulltype="java.lang.String" type="String" name="attributeName" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="logMissingElement" static="true">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
					<param fulltype="java.lang.String" type="String" name="elementName" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="logUnknownElement" static="true">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="IExtension[]" type="IExtension" name="orderExtensions" static="true">
				<params>
					<param fulltype="IExtension[]" type="IExtension" name="extensions" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" abstract="true" name="readElement">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="readElementChildren">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="readElements">
				<params>
					<param fulltype="IConfigurationElement[]" type="IConfigurationElement" name="elements" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="readExtension">
				<params>
					<param fulltype="IExtension" type="IExtension" name="extension" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="readRegistry">
				<params>
					<param fulltype="IExtensionRegistry" type="IExtensionRegistry" name="registry" />
					<param fulltype="java.lang.String" type="String" name="pluginId" />
					<param fulltype="java.lang.String" type="String" name="extensionPoint" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getDescription" static="true">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="configElement" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getClassValue" static="true">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="configElement" />
					<param fulltype="java.lang.String" type="String" name="classAttributeName" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.registry.DebuggerRegistry" type="DebuggerRegistry" package="org.eclipse.wst.xsl.internal.launching.registry">
		<methods>
			<constructor visibility="public" name="DebuggerRegistry" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IDebugger" type="IDebugger" name="getDebugger">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IDebugger[]" type="IDebugger" name="getDebuggers" />
			<method visibility="public" fulltype="void" type="void" name="addDebugger">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.launching.DebuggerDescriptor" type="DebuggerDescriptor" name="desc" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractRegistryReader" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.launching.registry.AbstractRegistryReader" fulltype="org.eclipse.wst.xsl.internal.launching.registry.DebuggerRegistryReader" type="DebuggerRegistryReader" package="org.eclipse.wst.xsl.internal.launching.registry">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;debugger&quot;" const="debugger" name="TAG_DEBUGGER" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;id&quot;" const="id" name="ATT_ID" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;className&quot;" const="className" name="ATT_CLASSNAME" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;classpath&quot;" const="classpath" name="ATT_CLASSPATH" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;name&quot;" const="name" name="ATT_NAME" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;processorTypeId&quot;" const="processorTypeId" name="ATT_PROCESSOR_TYPE_ID" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="DebuggerRegistryReader" />
			<method visibility="protected" fulltype="boolean" type="boolean" name="readElement">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="readElement">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.launching.registry.DebuggerRegistry" type="DebuggerRegistry" name="registry" />
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addConfigs">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.launching.registry.DebuggerRegistry" type="DebuggerRegistry" name="registry" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.registry.InvokerRegistry" type="InvokerRegistry" package="org.eclipse.wst.xsl.internal.launching.registry">
		<methods>
			<constructor visibility="public" name="InvokerRegistry" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInvoker" type="IProcessorInvoker" name="getProcessorInvoker">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInvoker[]" type="IProcessorInvoker" name="getProcessorInvokers" />
			<method visibility="public" fulltype="void" type="void" name="addInvokerDescriptor">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInvoker" type="IProcessorInvoker" name="desc" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractRegistryReader" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.launching.registry.AbstractRegistryReader" fulltype="org.eclipse.wst.xsl.internal.launching.registry.InvokerRegistryReader" type="InvokerRegistryReader" package="org.eclipse.wst.xsl.internal.launching.registry">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;invoker&quot;" const="invoker" name="TAG_INVOKE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;id&quot;" const="id" name="ATT_ID" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;class&quot;" const="class" name="ATT_CLASS" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;classpath&quot;" const="classpath" name="ATT_CLASSPATH" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="InvokerRegistryReader" />
			<method visibility="protected" fulltype="boolean" type="boolean" name="readElement">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="readElement">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.launching.registry.InvokerRegistry" type="InvokerRegistry" name="registry" />
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addConfigs">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.launching.registry.InvokerRegistry" type="InvokerRegistry" name="registry" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.registry.Messages" type="Messages" package="org.eclipse.wst.xsl.internal.launching.registry">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getString" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.registry.ProcessorRegistry" type="ProcessorRegistry" package="org.eclipse.wst.xsl.internal.launching.registry">
		<methods>
			<constructor visibility="public" name="ProcessorRegistry" />
			<method visibility="public" fulltype="void" type="void" name="addProcessor">
				<params>
					<param fulltype="java.lang.String" type="String" name="bundleId" />
					<param fulltype="java.lang.String" type="String" name="id" />
					<param fulltype="java.lang.String" type="String" name="label" />
					<param fulltype="java.lang.String" type="String" name="processorTypeId" />
					<param fulltype="java.lang.String" type="String" name="classpath" />
					<param fulltype="java.lang.String" type="String" name="debuggerId" />
					<param fulltype="java.lang.String" type="String" name="supports" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addProcessor">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="install" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeProcessor">
				<params>
					<param fulltype="int" type="int" name="index" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall[]" type="IProcessorInstall" name="getProcessors" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall[]" type="IProcessorInstall" name="getProcessors">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setDefaultProcessor">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="defaultInstall" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="getDefaultProcessor" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="getJREDefaultProcessor" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall[]" type="IProcessorInstall" name="getContributedProcessors" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractRegistryReader" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.launching.registry.AbstractRegistryReader" fulltype="org.eclipse.wst.xsl.internal.launching.registry.ProcessorRegistryReader" type="ProcessorRegistryReader" package="org.eclipse.wst.xsl.internal.launching.registry">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;processor&quot;" const="processor" name="TAG_processor" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;id&quot;" const="id" name="ATT_ID" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;label&quot;" const="label" name="ATT_LABEL" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;processorTypeId&quot;" const="processorTypeId" name="ATT_TYPE_ID" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;debuggerId&quot;" const="debuggerId" name="ATT_DEBUGGER_ID" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;classpath&quot;" const="classpath" name="ATT_CLASSPATH" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;supports&quot;" const="supports" name="ATT_SUPPORTS" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="ProcessorRegistryReader" />
			<method visibility="protected" fulltype="boolean" type="boolean" name="readElement">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="readElement">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.launching.registry.ProcessorRegistry" type="ProcessorRegistry" name="registry" />
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addConfigs">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.launching.registry.ProcessorRegistry" type="ProcessorRegistry" name="registry" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.internal.launching.registry.ProcessorTypeRegistry" type="ProcessorTypeRegistry" package="org.eclipse.wst.xsl.internal.launching.registry">
		<fields>
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;.DESC&quot;" const=".DESC" name="DESC_SUFFIX" static="true" />
			<field visibility="protected" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;.TYPE&quot;" const=".TYPE" name="TYPE_SUFFIX" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="ProcessorTypeRegistry" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType[]" type="IProcessorType" name="getProcessorTypes" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType[]" type="IProcessorType" name="getProcessorTypesExclJREDefault" />
			<method visibility="public" fulltype="void" type="void" name="addType">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="getProcessorType">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractRegistryReader" visibility="public" superclassfulltype="org.eclipse.wst.xsl.internal.launching.registry.AbstractRegistryReader" fulltype="org.eclipse.wst.xsl.internal.launching.registry.ProcessorTypeRegistryReader" type="ProcessorTypeRegistryReader" package="org.eclipse.wst.xsl.internal.launching.registry">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;processorType&quot;" const="processorType" name="TAG_processorType" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;id&quot;" const="id" name="ATT_ID" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;label&quot;" const="label" name="ATT_LABEL" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;transformerFactory&quot;" const="transformerFactory" name="ATT_TRANSFORMER_FACTORY_NAME" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;outputProperties&quot;" const="outputProperties" name="ATT_OUTPUT_PROPERTIES" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;featureProperties&quot;" const="featureProperties" name="ATT_FEATURE_PROPERTIES" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="ProcessorTypeRegistryReader" />
			<method visibility="protected" fulltype="boolean" type="boolean" name="readElement">
				<params>
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="readElement">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.launching.registry.ProcessorTypeRegistry" type="ProcessorTypeRegistry" name="registry" />
					<param fulltype="IConfigurationElement" type="IConfigurationElement" name="element" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="addConfigs">
				<params>
					<param fulltype="org.eclipse.wst.xsl.internal.launching.registry.ProcessorTypeRegistry" type="ProcessorTypeRegistry" name="registry" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.launching.IDebugger" type="IDebugger" abstract="true" interface="true" package="org.eclipse.wst.xsl.launching">
		<comment>
			<description>An XSLT debugger. Typically this will have been 
 contributed via the &lt;code&gt;org.eclipse.wst.xsl.launching.debugger&lt;/code&gt; extension point.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="java.lang.String" returncomment="debugger id" type="String" name="getId">
				<comment>
					<description>Get the unique id for this debugger.</description>
					<attribute name="@return">
						<description>debugger id</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String[]" returncomment="array of bundle-relative jars" type="String" name="getClassPath">
				<comment>
					<description>Get the set of bundle-relative jar files to add to the classpath.</description>
					<attribute name="@return">
						<description>array of bundle-relative jars</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the name for the debugger" type="String" name="getName">
				<comment>
					<description>Get a unique name for this debugger</description>
					<attribute name="@return">
						<description>the name for the debugger</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType" returncomment="the processor type" type="IProcessorType" name="getProcessorType">
				<comment>
					<description>Get the processor type that this debugger is associated with</description>
					<attribute name="@return">
						<description>the processor type</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the class name" type="String" name="getClassName">
				<comment>
					<description>Get the class name for this debugger</description>
					<attribute name="@return">
						<description>the class name</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.launching.IFeature" type="IFeature" abstract="true" interface="true" package="org.eclipse.wst.xsl.launching">
		<comment>
			<description>A feature supported by an XSLT processor.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;string&quot;" const="string" name="TYPE_STRING" static="true">
				<comment>
					<description>Constant for features of type &lt;code&gt;string&lt;/code&gt;</description>
					<attribute name="@see">
						<description>#getType()</description>
					</attribute>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;boolean&quot;" const="boolean" name="TYPE_BOOLEAN" static="true">
				<comment>
					<description>Constant for features of type &lt;code&gt;boolean&lt;/code&gt;</description>
					<attribute name="@see">
						<description>#getType()</description>
					</attribute>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;int&quot;" const="int" name="TYPE_INT" static="true">
				<comment>
					<description>Constant for features of type &lt;code&gt;int&lt;/code&gt;</description>
					<attribute name="@see">
						<description>#getType()</description>
					</attribute>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;double&quot;" const="double" name="TYPE_DOUBLE" static="true">
				<comment>
					<description>Constant for features of type &lt;code&gt;double&lt;/code&gt;</description>
					<attribute name="@see">
						<description>#getType()</description>
					</attribute>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;float&quot;" const="float" name="TYPE_FLOAT" static="true">
				<comment>
					<description>Constant for features of type &lt;code&gt;float&lt;/code&gt;</description>
					<attribute name="@see">
						<description>#getType()</description>
					</attribute>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;class&quot;" const="class" name="TYPE_CLASS" static="true">
				<comment>
					<description>Constant for features of type &lt;code&gt;class&lt;/code&gt;</description>
					<attribute name="@see">
						<description>#getType()</description>
					</attribute>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;object&quot;" const="object" name="TYPE_OBJECT" static="true">
				<comment>
					<description>Constant for features of type &lt;code&gt;object&lt;/code&gt;</description>
					<attribute name="@see">
						<description>#getType()</description>
					</attribute>
				</comment>
			</field>
		</fields>
		<methods>
			<method visibility="public" fulltype="java.lang.String" returncomment="the feature URI" type="String" name="getURI">
				<comment>
					<description>Get the URI for this feature</description>
					<attribute name="@return">
						<description>the feature URI</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the feature description" type="String" name="getDescription">
				<comment>
					<description>Get a description for this feature</description>
					<attribute name="@return">
						<description>the feature description</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the feature type: one of &lt;code&gt;TYPE_STRING&lt;/code&gt;, &lt;code&gt;TYPE_BOOLEAN&lt;/code&gt;, 
 &lt;code&gt;TYPE_INT&lt;/code&gt;, &lt;code&gt;TYPE_DOUBLE&lt;/code&gt;, &lt;code&gt;TYPE_FLOAT&lt;/code&gt;, &lt;code&gt;TYPE_CLASS&lt;/code&gt;, 
 or &lt;code&gt;TYPE_OBJECT&lt;/code&gt;" type="String" name="getType">
				<comment>
					<description>Get the type of this feature. Will match one of the TYPE constants in this interface.</description>
					<attribute name="@return">
						<description>the feature type: one of &lt;code&gt;TYPE_STRING&lt;/code&gt;, &lt;code&gt;TYPE_BOOLEAN&lt;/code&gt;, 
 &lt;code&gt;TYPE_INT&lt;/code&gt;, &lt;code&gt;TYPE_DOUBLE&lt;/code&gt;, &lt;code&gt;TYPE_FLOAT&lt;/code&gt;, &lt;code&gt;TYPE_CLASS&lt;/code&gt;, 
 or &lt;code&gt;TYPE_OBJECT&lt;/code&gt;</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="IStatus" returncomment="an &lt;code&gt;IStatus&lt;/code&gt; with severity &lt;code&gt;OK&lt;/code&gt; if valid, or &lt;code&gt;ERROR&lt;/code&gt; if invalid." type="IStatus" name="validateValue">
				<comment>
					<description>Determine whether the given value is a valid one for this feature.</description>
					<attribute name="@return">
						<description>an &lt;code&gt;IStatus&lt;/code&gt; with severity &lt;code&gt;OK&lt;/code&gt; if valid, or &lt;code&gt;ERROR&lt;/code&gt; if invalid.</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" name="value" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.launching.IOutputProperty" type="IOutputProperty" abstract="true" interface="true" package="org.eclipse.wst.xsl.launching">
		<comment>
			<description>An output property supported by an XSLT processor.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="java.lang.String" returncomment="a unique URI" type="String" name="getURI">
				<comment>
					<description>Get the URI of this output property.</description>
					<attribute name="@return">
						<description>a unique URI</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="a description" type="String" name="getDescription">
				<comment>
					<description>Get a description for this output property.</description>
					<attribute name="@return">
						<description>a description</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" abstract="true" interface="true" package="org.eclipse.wst.xsl.launching">
		<comment>
			<description>An instance of an XSLT processor (e.g. Xalan 2.7.0).</description>
			<attribute name="@see">
				<description>IProcessorInstall</description>
			</attribute>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="java.lang.String" returncomment="the unique id" type="String" name="getId">
				<comment>
					<description>Get the unqiue id of this install</description>
					<attribute name="@return">
						<description>the unique id</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="the name of this install" type="String" name="getName">
				<comment>
					<description>Get the name of this install</description>
					<attribute name="@return">
						<description>the name of this install</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType" returncomment="the processor type id" type="IProcessorType" name="getProcessorType">
				<comment>
					<description>Get the the processor type associated with this install</description>
					<attribute name="@return">
						<description>the processor type id</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorJar[]" returncomment="a set of jar files" type="IProcessorJar" name="getProcessorJars">
				<comment>
					<description>Get the jar files for this processor</description>
					<attribute name="@return">
						<description>a set of jar files</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="boolean" returncomment="&lt;code&gt;true&lt;/code&gt; if contributed via the extension point, otherwise &lt;code&gt;false&lt;/code&gt;." type="boolean" name="isContributed">
				<comment>
					<description>Get whether this install has been contributed via the &lt;code&gt;org.eclipse.wst.xsl.launching.processor&lt;/code&gt; extension point.</description>
					<attribute name="@return">
						<description>&lt;code&gt;true&lt;/code&gt; if contributed via the extension point, otherwise &lt;code&gt;false&lt;/code&gt;.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.lang.String" returncomment="&lt;code&gt;true&lt;/code&gt; if this install has a debugger, otherwise &lt;code&gt;false&lt;/code&gt;." type="String" name="getSupports">
				<comment>
					<description>Get the list of supported XSLT versions</description>
					<attribute name="@return">
						<description>&lt;code&gt;true&lt;/code&gt; if this install has a debugger, otherwise &lt;code&gt;false&lt;/code&gt;.</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="boolean" returncomment="&lt;code&gt;true&lt;/code&gt; if this install supports the version, otherwise &lt;code&gt;false&lt;/code&gt;." type="boolean" name="supports">
				<comment>
					<description>Get whether this install supports the specified xslt version.</description>
					<attribute name="@return">
						<description>&lt;code&gt;true&lt;/code&gt; if this install supports the version, otherwise &lt;code&gt;false&lt;/code&gt;.</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" name="xsltVersion" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IDebugger" returncomment="the debugger, or null if no debugger has been set" type="IDebugger" name="getDebugger">
				<comment>
					<description>Get the debugger associated with this install</description>
					<attribute name="@return">
						<description>the debugger, or null if no debugger has been set</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInvoker" type="IProcessorInvoker" abstract="true" interface="true" package="org.eclipse.wst.xsl.launching">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getId" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getInvokerClassName" />
			<method visibility="public" fulltype="java.lang.String[]" type="String" name="getClasspathEntries" />
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorJar" type="IProcessorJar" abstract="true" interface="true" package="org.eclipse.wst.xsl.launching">
		<comment>
			<description>A jar file for an XSLT processor</description>
			<attribute name="@see">
				<description>IProcessorInstall</description>
			</attribute>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="IPath" returncomment="the path to this jar" type="IPath" name="getPath">
				<comment>
					<description>The path may be relative or absolute; in the workspace or external.</description>
					<attribute name="@return">
						<description>the path to this jar</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="java.net.URL" returncomment="a URL to the jar" type="URL" name="asURL">
				<comment>
					<description>The URL will always be absolute and can be opened.</description>
					<attribute name="@return">
						<description>a URL to the jar</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" abstract="true" interface="true" package="org.eclipse.wst.xsl.launching">
		<comment>
			<description>A particular type of XSLT Processor (e.g. Xalan) for which there may be any number of installs.</description>
			<attribute name="@see">
				<description>IProcessorInstall</description>
			</attribute>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getId" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getLabel" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isJREDefault" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getTransformerFactoryName" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IFeature[]" type="IFeature" name="getFeatures" />
			<method visibility="public" fulltype="java.util.Map" type="Map" name="getFeatureValues" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IOutputProperty[]" type="IOutputProperty" name="getOutputProperties" />
			<method visibility="public" fulltype="java.util.Properties" type="Properties" name="getOutputPropertyValues" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.Messages" type="Messages" package="org.eclipse.wst.xsl.launching">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getString" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.ProcessorInstall" type="ProcessorInstall" package="org.eclipse.wst.xsl.launching">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" />
		</implements>
		<methods>
			<constructor visibility="public" name="ProcessorInstall">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
					<param fulltype="java.lang.String" type="String" name="label" />
					<param fulltype="java.lang.String" type="String" name="typeId" />
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorJar[]" type="IProcessorJar" name="jars" />
					<param fulltype="java.lang.String" type="String" name="debuggerId" />
					<param fulltype="java.lang.String" type="String" name="supports" />
					<param fulltype="boolean" type="boolean" name="contributed" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getId" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="void" type="void" name="setName">
				<params>
					<param fulltype="java.lang.String" type="String" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorJar[]" type="IProcessorJar" name="getProcessorJars" />
			<method visibility="public" fulltype="void" type="void" name="setProcessorJars">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorJar[]" type="IProcessorJar" name="jars" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getProcessorTypeId" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="getProcessorType" />
			<method visibility="public" fulltype="void" type="void" name="setProcessorTypeId">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="isContributed" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorJar[]" type="IProcessorJar" name="createJars" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="bundleId" />
					<param fulltype="java.lang.String" type="String" name="classpath" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="hasDebugger" />
			<method visibility="public" fulltype="boolean" type="boolean" name="supports">
				<params>
					<param fulltype="java.lang.String" type="String" name="xsltVersion" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getSupports" />
			<method visibility="public" fulltype="void" type="void" name="setSupports">
				<params>
					<param fulltype="java.lang.String" type="String" name="supports" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IDebugger" type="IDebugger" name="getDebugger" />
			<method visibility="public" fulltype="void" type="void" name="setDebuggerId">
				<params>
					<param fulltype="java.lang.String" type="String" name="debuggerId" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.XSLLaunchConfigurationConstants" type="XSLLaunchConfigurationConstants" package="org.eclipse.wst.xsl.launching">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.INVOKER_DESCRIPTOR&quot;" const="org.eclipse.wst.xsl.launching.INVOKER_DESCRIPTOR" name="INVOKER_DESCRIPTOR" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_PROCESSOR&quot;" const="org.eclipse.wst.xsl.launching.ATTR_PROCESSOR" name="ATTR_PROCESSOR" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_LAUNCH_TYPE&quot;" const="org.eclipse.wst.xsl.launching.ATTR_LAUNCH_TYPE" name="ATTR_LAUNCH_TYPE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_BASE_URI_TYPE&quot;" const="org.eclipse.wst.xsl.launching.ATTR_BASE_URI_TYPE" name="ATTR_BASE_URI_TYPE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_BASE_URI_DIRECTORY&quot;" const="org.eclipse.wst.xsl.launching.ATTR_BASE_URI_DIRECTORY" name="ATTR_BASE_URI_DIRECTORY" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_PROJECT_NAME&quot;" const="org.eclipse.wst.xsl.launching.ATTR_PROJECT_NAME" name="ATTR_PROJECT_NAME" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_INPUT_FILE&quot;" const="org.eclipse.wst.xsl.launching.ATTR_INPUT_FILE" name="ATTR_INPUT_FILE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_OUTPUT_FILE&quot;" const="org.eclipse.wst.xsl.launching.ATTR_OUTPUT_FILE" name="ATTR_OUTPUT_FILE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_OUTPUT_METHOD&quot;" const="org.eclipse.wst.xsl.launching.ATTR_OUTPUT_METHOD" name="ATTR_OUTPUT_METHOD" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_OUTPUT_PROPERTIES&quot;" const="org.eclipse.wst.xsl.launching.ATTR_OUTPUT_PROPERTIES" name="ATTR_OUTPUT_PROPERTIES" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_STYLESHEETS_LIST&quot;" const="org.eclipse.wst.xsl.launching.ATTR_STYLESHEETS_LIST" name="ATTR_STYLESHEETS_LIST" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_RENDER_TO&quot;" const="org.eclipse.wst.xsl.launching.ATTR_RENDER_TO" name="ATTR_RENDER_TO" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.launchConfigurationType&quot;" const="org.eclipse.wst.xsl.launching.launchConfigurationType" name="ID_LAUNCH_CONFIG_TYPE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_PERFORM_RENDER&quot;" const="org.eclipse.wst.xsl.launching.ATTR_PERFORM_RENDER" name="ATTR_PERFORM_RENDER" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_USE_DEFAULT_OUTPUT_FILE&quot;" const="org.eclipse.wst.xsl.launching.ATTR_USE_DEFAULT_OUTPUT_FILE" name="ATTR_USE_DEFAULT_OUTPUT_FILE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_OPEN_FILE&quot;" const="org.eclipse.wst.xsl.launching.ATTR_OPEN_FILE" name="ATTR_OPEN_FILE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_PROCESSOR_WORKING_DIR&quot;" const="org.eclipse.wst.xsl.launching.ATTR_PROCESSOR_WORKING_DIR" name="ATTR_PROCESSOR_WORKING_DIR" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_USE_DEFAULT_PROCESSOR_WORKING_DIR&quot;" const="org.eclipse.wst.xsl.launching.ATTR_USE_DEFAULT_PROCESSOR_WORKING_DIR" name="ATTR_USE_DEFAULT_PROCESSOR_WORKING_DIR" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_USE_DEFAULT_PROCESSOR&quot;" const="org.eclipse.wst.xsl.launching.ATTR_USE_DEFAULT_PROCESSOR" name="ATTR_USE_DEFAULT_PROCESSOR" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_USE_FEATURES_FROM_PREFERENCES&quot;" const="org.eclipse.wst.xsl.launching.ATTR_USE_FEATURES_FROM_PREFERENCES" name="ATTR_USE_FEATURES_FROM_PREFERENCES" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_USE_PROPERTIES_FROM_PREFERENCES&quot;" const="org.eclipse.wst.xsl.launching.ATTR_USE_PROPERTIES_FROM_PREFERENCES" name="ATTR_USE_PROPERTIES_FROM_PREFERENCES" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;.ATTR_JRE_DEFAULT_TYPE_TYPE&quot;" const=".ATTR_JRE_DEFAULT_TYPE_TYPE" name="ATTR_JRE_DEFAULT_TYPE_TYPE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_FEATURES&quot;" const="org.eclipse.wst.xsl.launching.ATTR_FEATURES" name="ATTR_FEATURES" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_PIPELINE&quot;" const="org.eclipse.wst.xsl.launching.ATTR_PIPELINE" name="ATTR_PIPELINE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.ATTR_DEFAULT_DEBUGGING_INSTALL_ID&quot;" const="org.eclipse.wst.xsl.launching.ATTR_DEFAULT_DEBUGGING_INSTALL_ID" name="ATTR_DEFAULT_DEBUGGING_INSTALL_ID" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.xalan.processorType&quot;" const="org.eclipse.wst.xsl.xalan.processorType" name="XALAN_TYPE_ID" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.saxon.processorType&quot;" const="org.eclipse.wst.xsl.saxon.processorType" name="SAXONB_TYPE_ID" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="XSLLaunchConfigurationConstants" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.XSLTRuntime" type="XSLTRuntime" package="org.eclipse.wst.xsl.launching">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;PREF_PROCESSOR_XML&quot;" const="PREF_PROCESSOR_XML" name="PREF_PROCESSOR_XML" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;PREF_FEATURE_XML&quot;" const="PREF_FEATURE_XML" name="PREF_FEATURE_XML" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;PREF_OUTPUT_PROPERTIES_XML&quot;" const="PREF_OUTPUT_PROPERTIES_XML" name="PREF_OUTPUT_PROPERTIES_XML" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.jre.default&quot;" const="org.eclipse.wst.xsl.launching.jre.default" name="JRE_DEFAULT_PROCESSOR_ID" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.processorType.jreDefault&quot;" const="org.eclipse.wst.xsl.launching.processorType.jreDefault" name="JRE_DEFAULT_PROCESSOR_TYPE_ID" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="XSLTRuntime" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.internal.launching.registry.ProcessorRegistry" type="ProcessorRegistry" name="getProcessorRegistry" static="true" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="createUniqueProcessorId" static="true">
				<comment>
					<description>Find a unique processor install id. Check existing &apos;real&apos; processors, as
 well as the last id used for a standin.</description>
				</comment>
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="type" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorJar" type="IProcessorJar" name="createProcessorJar" static="true">
				<params>
					<param fulltype="IPath" type="IPath" name="path" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IDebugger[]" type="IDebugger" name="getDebuggers" static="true" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IDebugger" type="IDebugger" name="getDebugger" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall[]" type="IProcessorInstall" name="getProcessors" static="true" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall[]" type="IProcessorInstall" name="getProcessors" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="typeId" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="getProcessor" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="processorId" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="getDefaultProcessor" static="true" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="getJREDefaultProcessor" static="true" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType[]" type="IProcessorType" name="getProcessorTypes" static="true" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType[]" type="IProcessorType" name="getProcessorTypesExclJREDefault" static="true" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorType" type="IProcessorType" name="getProcessorType" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInvoker" type="IProcessorInvoker" name="getProcessorInvoker" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="invokerId" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.IProcessorInvoker[]" type="IProcessorInvoker" name="getProcessorInvokers" static="true" />
			<method visibility="public" fulltype="void" type="void" name="saveFeaturePreferences" static="true">
				<params>
					<param fulltype="java.util.Map" type="Map" name="typeFeatures" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" name="monitor" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="saveOutputPropertyPreferences" static="true">
				<params>
					<param fulltype="java.util.Map" type="Map" name="typeProperties" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" name="monitor" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="saveProcessorPreferences" static="true">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall[]" type="IProcessorInstall" name="installs" />
					<param fulltype="org.eclipse.wst.xsl.launching.IProcessorInstall" type="IProcessorInstall" name="defaultInstall" />
					<param fulltype="IProgressMonitor" type="IProgressMonitor" name="monitor" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.util.Properties" type="Properties" name="createDefaultOutputProperties" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="typeId" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.config.LaunchAttribute" type="LaunchAttribute" package="org.eclipse.wst.xsl.launching.config">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;.TYPE&quot;" const=".TYPE" name="TYPE_SUFFIX" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;.VALUE&quot;" const=".VALUE" name="VALUE_SUFFIX" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;string&quot;" const="string" name="TYPE_STRING" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;boolean&quot;" const="boolean" name="TYPE_BOOLEAN" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;int&quot;" const="int" name="TYPE_INT" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;double&quot;" const="double" name="TYPE_DOUBLE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;float&quot;" const="float" name="TYPE_FLOAT" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;class&quot;" const="class" name="TYPE_CLASS" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;object&quot;" const="object" name="TYPE_OBJECT" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" name="uri" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="type" />
			<field visibility="public" fulltype="java.lang.String" type="String" name="value" />
		</fields>
		<methods>
			<constructor visibility="public" name="LaunchAttribute">
				<params>
					<param fulltype="java.lang.String" type="String" name="uri" />
					<param fulltype="java.lang.String" type="String" name="type" />
					<param fulltype="java.lang.String" type="String" name="value" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="setValue">
				<params>
					<param fulltype="java.lang.String" type="String" name="value" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getResolvedValue">
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="int" type="int" name="hashCode" />
			<method visibility="public" fulltype="boolean" type="boolean" name="equals">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="obj" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.config.LaunchFeatures" type="LaunchFeatures" package="org.eclipse.wst.xsl.launching.config">
		<methods>
			<constructor visibility="public" name="LaunchFeatures" />
			<method visibility="public" fulltype="java.util.Set" type="Set" name="getFeatures" />
			<method visibility="public" fulltype="void" type="void" name="addFeature">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchAttribute" type="LaunchAttribute" name="feature" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchAttribute" type="LaunchAttribute" name="getFeature">
				<params>
					<param fulltype="java.lang.String" type="String" name="uri" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeFeature">
				<params>
					<param fulltype="java.lang.String" type="String" name="uri" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="toXML">
				<exceptions>
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" />
					<exception fulltype="java.io.IOException" type="IOException" />
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchFeatures" type="LaunchFeatures" name="fromXML" static="true">
				<params>
					<param fulltype="java.io.InputStream" type="InputStream" name="inputStream" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.config.LaunchHelper" type="LaunchHelper" package="org.eclipse.wst.xsl.launching.config">
		<methods>
			<constructor visibility="public" name="LaunchHelper">
				<params>
					<param fulltype="ILaunchConfiguration" type="ILaunchConfiguration" name="configuration" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</constructor>
			<method visibility="public" fulltype="int" type="int" name="getRequestPort" />
			<method visibility="public" fulltype="int" type="int" name="getEventPort" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchProperties" type="LaunchProperties" name="getProperties" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchFeatures" type="LaunchFeatures" name="getFeatures" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchPipeline" type="LaunchPipeline" name="getPipeline" />
			<method visibility="public" fulltype="java.net.URL" type="URL" name="getSource" />
			<method visibility="public" fulltype="java.io.File" type="File" name="getTarget" />
			<method visibility="public" fulltype="void" type="void" name="save">
				<params>
					<param fulltype="java.io.File" type="File" name="file" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="int" returncomment="a free port number on localhost, or -1 if unable to find a free
         port" type="int" name="findFreePort" static="true">
				<comment>
					<description>Returns a free port number on localhost, or -1 if unable to find a free
 port.</description>
					<attribute name="@return">
						<description>a free port number on localhost, or -1 if unable to find a free
         port</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="getOpenFileOnCompletion" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.config.LaunchPipeline" type="LaunchPipeline" package="org.eclipse.wst.xsl.launching.config">
		<methods>
			<constructor visibility="public" name="LaunchPipeline" />
			<method visibility="public" fulltype="java.util.Properties" type="Properties" name="getOutputProperties" />
			<method visibility="public" fulltype="void" type="void" name="addOutputProperty">
				<params>
					<param fulltype="java.lang.String" type="String" name="name" />
					<param fulltype="java.lang.String" type="String" name="value" />
				</params>
			</method>
			<method visibility="public" fulltype="java.util.List" type="List" name="getTransformDefs" />
			<method visibility="public" fulltype="void" type="void" name="setTransformDefs">
				<params>
					<param fulltype="java.util.List" type="List" name="transforms" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addTransformDef">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform" type="LaunchTransform" name="tdef" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeTransformDef">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform" type="LaunchTransform" name="tdef" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="toXML">
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchPipeline" type="LaunchPipeline" name="fromXML" static="true">
				<params>
					<param fulltype="java.io.InputStream" type="InputStream" name="inputStream" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.config.LaunchProperties" type="LaunchProperties" package="org.eclipse.wst.xsl.launching.config">
		<methods>
			<constructor visibility="public" name="LaunchProperties" />
			<method visibility="public" fulltype="java.util.Map" type="Map" name="getProperties" />
			<method visibility="public" fulltype="void" type="void" name="setProperty">
				<params>
					<param fulltype="java.lang.String" type="String" name="name" />
					<param fulltype="java.lang.String" type="String" name="value" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getProperty">
				<params>
					<param fulltype="java.lang.String" type="String" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="removeProperty">
				<params>
					<param fulltype="java.lang.String" type="String" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="toXML">
				<exceptions>
					<exception fulltype="javax.xml.parsers.ParserConfigurationException" type="ParserConfigurationException" />
					<exception fulltype="java.io.IOException" type="IOException" />
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchProperties" type="LaunchProperties" name="fromXML" static="true">
				<params>
					<param fulltype="java.io.InputStream" type="InputStream" name="inputStream" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform" type="LaunchTransform" package="org.eclipse.wst.xsl.launching.config">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;resource&quot;" const="resource" name="RESOURCE_TYPE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;external&quot;" const="external" name="EXTERNAL_TYPE" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="LaunchTransform">
				<comment>
					<description>The path may be an IResource to a file in the workspace, or an IPath to a
 file outside of the workspace - depending on the pathType. The path
 should be created using IPath.toPortableString(). The path may also
 contain variables defined by the VariablePlugin.</description>
					<attribute name="@param">
						<description>path</description>
					</attribute>
					<attribute name="@param">
						<description>pathType</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="" name="path" />
					<param fulltype="java.lang.String" type="String" comment="" name="pathType" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.util.Set" type="Set" name="getParameters" />
			<method visibility="public" fulltype="void" type="void" name="addParameter">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchAttribute" type="LaunchAttribute" name="parameter" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getResolver" />
			<method visibility="public" fulltype="void" type="void" name="setResolver">
				<params>
					<param fulltype="java.lang.String" type="String" name="resolver" />
				</params>
			</method>
			<method visibility="public" fulltype="IPath" type="IPath" name="getPath">
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getPathType" />
			<method visibility="public" fulltype="IPath" returncomment="" type="IPath" name="getLocation">
				<comment>
					<description>The full path to the file in the local file system (with any string
 subsitutions already made).</description>
					<attribute name="@return" />
					<attribute name="@throws">
						<description>CoreException</description>
					</attribute>
				</comment>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.w3c.dom.Element" type="Element" name="asXML">
				<params>
					<param fulltype="org.w3c.dom.Document" type="Document" name="doc" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchTransform" type="LaunchTransform" name="fromXML" static="true">
				<params>
					<param fulltype="org.w3c.dom.Element" type="Element" name="transformEl" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setPipeline">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchPipeline" type="LaunchPipeline" name="pipeline" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.config.LaunchPipeline" type="LaunchPipeline" name="getPipeline" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.config.Messages" type="Messages" package="org.eclipse.wst.xsl.launching.config">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getString" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.launching.model.IXSLConstants" type="IXSLConstants" abstract="true" interface="true" package="org.eclipse.wst.xsl.launching.model">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.XSLDebugModel&quot;" const="org.eclipse.wst.xsl.launching.XSLDebugModel" name="ID_XSL_DEBUG_MODEL" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;org.eclipse.wst.xsl.launching.xslLineBreakpointMarker&quot;" const="org.eclipse.wst.xsl.launching.xslLineBreakpointMarker" name="MARKER_ID" static="true" />
		</fields>
	</jelclass>
	<jelclass visibility="public" fulltype="org.eclipse.wst.xsl.launching.model.IXSLDebugTarget" type="IXSLDebugTarget" abstract="true" interface="true" package="org.eclipse.wst.xsl.launching.model">
		<methods>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.model.XSLVariable" type="XSLVariable" name="getVariable">
				<params>
					<param fulltype="int" type="int" name="varId" />
				</params>
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IStackFrame[]" type="IStackFrame" name="getStackFrames">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepInto">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepOver">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepReturn">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IValue" type="IValue" name="getVariableValue">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.model.XSLVariable" type="XSLVariable" name="variable" />
				</params>
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.launching.model.Messages" type="Messages" package="org.eclipse.wst.xsl.launching.model">
		<methods>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getString" static="true">
				<params>
					<param fulltype="java.lang.String" type="String" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="DebugElement" visibility="public" superclassfulltype="DebugElement" fulltype="org.eclipse.wst.xsl.launching.model.XSLDebugElement" type="XSLDebugElement" abstract="true" package="org.eclipse.wst.xsl.launching.model">
		<methods>
			<constructor visibility="public" name="XSLDebugElement">
				<params>
					<param fulltype="IDebugTarget" type="IDebugTarget" name="target" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getModelIdentifier" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="getAdapter">
				<params>
					<param fulltype="java.lang.Class" type="Class" name="adapter" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canDisconnect" />
			<method visibility="public" fulltype="void" type="void" name="disconnect">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="isDisconnected" />
		</methods>
	</jelclass>
	<jelclass superclass="XSLDebugElement" visibility="public" superclassfulltype="org.eclipse.wst.xsl.launching.model.XSLDebugElement" fulltype="org.eclipse.wst.xsl.launching.model.XSLDebugTarget" type="XSLDebugTarget" package="org.eclipse.wst.xsl.launching.model">
		<implements>
			<interface fulltype="org.eclipse.wst.xsl.launching.model.IXSLDebugTarget" type="IXSLDebugTarget" />
		</implements>
		<methods>
			<constructor visibility="public" name="XSLDebugTarget">
				<params>
					<param fulltype="ILaunch" type="ILaunch" name="launch" />
					<param fulltype="IProcess" type="IProcess" name="process" />
					<param fulltype="org.eclipse.wst.xsl.launching.config.LaunchHelper" type="LaunchHelper" name="launchHelper" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</constructor>
			<method visibility="public" fulltype="IProcess" type="IProcess" name="getProcess" />
			<method visibility="public" fulltype="IThread[]" type="IThread" name="getThreads">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="hasThreads">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="supportsBreakpoint">
				<params>
					<param fulltype="IBreakpoint" type="IBreakpoint" name="breakpoint" />
				</params>
			</method>
			<method visibility="public" fulltype="IDebugTarget" type="IDebugTarget" name="getDebugTarget" />
			<method visibility="public" fulltype="ILaunch" type="ILaunch" name="getLaunch" />
			<method visibility="public" fulltype="boolean" type="boolean" name="canTerminate" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isTerminated" />
			<method visibility="public" fulltype="void" type="void" name="terminate">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canResume" />
			<method visibility="public" fulltype="boolean" type="boolean" name="canSuspend" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isSuspended" />
			<method visibility="public" fulltype="void" type="void" name="resume">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="suspend">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="breakpointAdded">
				<params>
					<param fulltype="IBreakpoint" type="IBreakpoint" name="breakpoint" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="breakpointRemoved">
				<params>
					<param fulltype="IBreakpoint" type="IBreakpoint" name="breakpoint" />
					<param fulltype="IMarkerDelta" type="IMarkerDelta" name="delta" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="breakpointChanged">
				<params>
					<param fulltype="IBreakpoint" type="IBreakpoint" name="breakpoint" />
					<param fulltype="IMarkerDelta" type="IMarkerDelta" name="delta" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canDisconnect" />
			<method visibility="public" fulltype="void" type="void" name="disconnect">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="isDisconnected" />
			<method visibility="public" fulltype="boolean" type="boolean" name="supportsStorageRetrieval" />
			<method visibility="public" fulltype="IMemoryBlock" type="IMemoryBlock" name="getMemoryBlock">
				<params>
					<param fulltype="long" type="long" name="startAddress" />
					<param fulltype="long" type="long" name="length" />
				</params>
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IStackFrame[]" type="IStackFrame" name="getStackFrames">
				<comment>
					<description>Returns the current stack frames in the target.</description>
				</comment>
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepOver">
				<comment>
					<description>Single step the interpreter.</description>
				</comment>
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepInto">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepReturn">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.launching.model.XSLVariable" type="XSLVariable" name="getVariable">
				<params>
					<param fulltype="int" type="int" name="varId" />
				</params>
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IValue" type="IValue" name="getVariableValue">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.model.XSLVariable" type="XSLVariable" name="variable" />
				</params>
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="LineBreakpoint" visibility="public" superclassfulltype="LineBreakpoint" fulltype="org.eclipse.wst.xsl.launching.model.XSLLineBreakpoint" type="XSLLineBreakpoint" package="org.eclipse.wst.xsl.launching.model">
		<methods>
			<constructor visibility="public" name="XSLLineBreakpoint" />
			<constructor visibility="public" name="XSLLineBreakpoint">
				<params>
					<param fulltype="IResource" type="IResource" name="resource" />
					<param fulltype="int" type="int" name="lineNumber" />
					<param fulltype="int" type="int" name="charStart" />
					<param fulltype="int" type="int" name="charEnd" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</constructor>
			<method visibility="public" fulltype="int" type="int" name="getLineNumber">
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="register">
				<params>
					<param fulltype="boolean" type="boolean" name="register" />
				</params>
				<exceptions>
					<exception fulltype="CoreException" type="CoreException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getModelIdentifier" />
		</methods>
	</jelclass>
	<jelclass superclass="XSLDebugElement" visibility="public" superclassfulltype="org.eclipse.wst.xsl.launching.model.XSLDebugElement" fulltype="org.eclipse.wst.xsl.launching.model.XSLStackFrame" type="XSLStackFrame" package="org.eclipse.wst.xsl.launching.model">
		<comment>
			<description>XSL stack frame.</description>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLStackFrame">
				<params>
					<param fulltype="org.eclipse.wst.xsl.launching.model.XSLThread" type="XSLThread" name="thread" />
					<param fulltype="java.lang.String" type="String" name="data" />
					<param fulltype="int" type="int" name="index" />
				</params>
			</constructor>
			<method visibility="public" fulltype="IThread" type="IThread" name="getThread" />
			<method visibility="public" fulltype="IVariable[]" type="IVariable" name="getVariables">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="hasVariables">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="int" type="int" name="getLineNumber">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="int" type="int" name="getCharStart">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="int" type="int" name="getCharEnd">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IRegisterGroup[]" type="IRegisterGroup" name="getRegisterGroups">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="hasRegisterGroups">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canStepInto" />
			<method visibility="public" fulltype="boolean" type="boolean" name="canStepOver" />
			<method visibility="public" fulltype="boolean" type="boolean" name="canStepReturn" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isStepping" />
			<method visibility="public" fulltype="void" type="void" name="stepInto">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepOver">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepReturn">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canResume" />
			<method visibility="public" fulltype="boolean" type="boolean" name="canSuspend" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isSuspended" />
			<method visibility="public" fulltype="void" type="void" name="resume">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="suspend">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canTerminate" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isTerminated" />
			<method visibility="public" fulltype="void" type="void" name="terminate">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getSourceName">
				<comment>
					<description>Returns the name of the source file this stack frame is associated with.</description>
				</comment>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="equals">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="obj" />
				</params>
			</method>
			<method visibility="public" fulltype="int" type="int" name="hashCode" />
			<method visibility="protected" fulltype="int" type="int" name="getIdentifier" />
			<method visibility="public" fulltype="void" type="void" name="setLineNumber">
				<params>
					<param fulltype="int" type="int" name="lineNumber" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setVariables">
				<params>
					<param fulltype="IVariable[]" type="IVariable" name="variables" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSLDebugElement" visibility="public" superclassfulltype="org.eclipse.wst.xsl.launching.model.XSLDebugElement" fulltype="org.eclipse.wst.xsl.launching.model.XSLThread" type="XSLThread" package="org.eclipse.wst.xsl.launching.model">
		<methods>
			<constructor visibility="public" name="XSLThread">
				<comment>
					<description>Constructs a new thread for the given target</description>
				</comment>
				<params>
					<param fulltype="IDebugTarget" type="IDebugTarget" name="target" />
				</params>
			</constructor>
			<method visibility="public" fulltype="IStackFrame[]" type="IStackFrame" name="getStackFrames">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="hasStackFrames">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="int" type="int" name="getPriority">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IStackFrame" type="IStackFrame" name="getTopStackFrame">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IBreakpoint[]" type="IBreakpoint" name="getBreakpoints" />
			<method visibility="protected" fulltype="void" type="void" name="setBreakpoints">
				<comment>
					<description>Sets the breakpoints this thread is suspended at, or &lt;code&gt;null&lt;/code&gt;
 if none.</description>
					<attribute name="@param">
						<description>breakpoints
            the breakpoints this thread is suspended at, or
            &lt;code&gt;null&lt;/code&gt; if none</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IBreakpoint[]" type="IBreakpoint" comment="the breakpoints this thread is suspended at, or
            &lt;code&gt;null&lt;/code&gt; if none" name="breakpoints" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canResume" />
			<method visibility="public" fulltype="boolean" type="boolean" name="canSuspend" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isSuspended" />
			<method visibility="public" fulltype="void" type="void" name="resume">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="suspend">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canStepInto" />
			<method visibility="public" fulltype="boolean" type="boolean" name="canStepOver" />
			<method visibility="public" fulltype="boolean" type="boolean" name="canStepReturn" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isStepping" />
			<method visibility="public" fulltype="void" type="void" name="stepInto">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepOver">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stepReturn">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="canTerminate" />
			<method visibility="public" fulltype="boolean" type="boolean" name="isTerminated" />
			<method visibility="public" fulltype="void" type="void" name="terminate">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="setStepping">
				<params>
					<param fulltype="boolean" type="boolean" name="stepping" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSLDebugElement" visibility="public" superclassfulltype="org.eclipse.wst.xsl.launching.model.XSLDebugElement" fulltype="org.eclipse.wst.xsl.launching.model.XSLValue" type="XSLValue" package="org.eclipse.wst.xsl.launching.model">
		<methods>
			<constructor visibility="public" name="XSLValue">
				<params>
					<param fulltype="IDebugTarget" type="IDebugTarget" name="target" />
					<param fulltype="java.lang.String" type="String" name="type" />
					<param fulltype="java.lang.String" type="String" name="value" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getReferenceTypeName">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getValueString">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="isAllocated">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="IVariable[]" type="IVariable" name="getVariables">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="hasVariables">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XSLDebugElement" visibility="public" superclassfulltype="org.eclipse.wst.xsl.launching.model.XSLDebugElement" fulltype="org.eclipse.wst.xsl.launching.model.XSLVariable" type="XSLVariable" package="org.eclipse.wst.xsl.launching.model">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;L&quot;" const="L" name="LOCAL_SCOPE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;T&quot;" const="T" name="TUNNEL_SCOPE" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;G&quot;" const="G" name="GLOBAL_SCOPE" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="XSLVariable">
				<params>
					<param fulltype="IDebugTarget" type="IDebugTarget" name="target" />
					<param fulltype="int" type="int" name="id" />
				</params>
			</constructor>
			<method visibility="public" fulltype="int" type="int" name="getId" />
			<method visibility="public" fulltype="IValue" type="IValue" name="getValue">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setName">
				<params>
					<param fulltype="java.lang.String" type="String" name="name" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getReferenceTypeName">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="hasValueChanged">
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setValue">
				<params>
					<param fulltype="java.lang.String" type="String" name="expression" />
				</params>
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="supportsValueModification" />
			<method visibility="public" fulltype="boolean" type="boolean" name="verifyValue">
				<params>
					<param fulltype="java.lang.String" type="String" name="expression" />
				</params>
				<exceptions>
					<exception fulltype="DebugException" type="DebugException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="setScope">
				<params>
					<param fulltype="java.lang.String" type="String" name="scope" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getScope" />
		</methods>
	</jelclass>
	<jelclass superclass="StructuredTextViewerConfigurationXML" visibility="public" superclassfulltype="StructuredTextViewerConfigurationXML" fulltype="org.eclipse.wst.xsl.ui.internal.StructuredTextViewerConfigurationXSL" type="StructuredTextViewerConfigurationXSL" package="org.eclipse.wst.xsl.ui.internal">
		<comment>
			<description>StructuredTextViewerConfigurationXSL implements content assistance for
 attributes and other XPath related functionality.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="StructuredTextViewerConfigurationXSL">
				<comment>
					<description>Configuration for XSL Content Types</description>
				</comment>
			</constructor>
			<method visibility="protected" fulltype="IContentAssistProcessor[]" type="IContentAssistProcessor" name="getContentAssistProcessors">
				<comment>
					<description>Return the processors for the current content type.</description>
				</comment>
				<params>
					<param fulltype="ISourceViewer" type="ISourceViewer" name="sourceViewer" />
					<param fulltype="java.lang.String" type="String" name="partitionType" />
				</params>
			</method>
			<method visibility="public" fulltype="IHyperlinkDetector[]" type="IHyperlinkDetector" name="getHyperlinkDetectors">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>org.eclipse.ui.editors.text.TextSourceViewerConfiguration#getHyperlinkDetectors(org.eclipse.jface.text.source.ISourceViewer)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="ISourceViewer" type="ISourceViewer" name="sourceViewer" />
				</params>
			</method>
			<method visibility="public" fulltype="java.lang.String[]" type="String" name="getConfiguredContentTypes">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>org.eclipse.wst.xml.ui.StructuredTextViewerConfigurationXML#getConfiguredContentTypes(org.eclipse.jface.text.source.ISourceViewer)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="ISourceViewer" type="ISourceViewer" name="sourceViewer" />
				</params>
			</method>
			<method visibility="public" fulltype="LineStyleProvider[]" type="LineStyleProvider" name="getLineStyleProviders">
				<params>
					<param fulltype="ISourceViewer" type="ISourceViewer" name="sourceViewer" />
					<param fulltype="java.lang.String" type="String" name="partitionType" />
				</params>
			</method>
			<method visibility="protected" fulltype="LineStyleProvider" type="LineStyleProvider" name="getLineStyleProviderForXSL" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.XSLUIConstants" type="XSLUIConstants" package="org.eclipse.wst.xsl.ui.internal">
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;xsl_new&quot;" const="xsl_new" name="TEMPLATE_CONTEXT_XSL_NEW" static="true" />
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;NEW_FILE_TEMPLATE_NAME&quot;" const="NEW_FILE_TEMPLATE_NAME" name="NEW_FILE_TEMPLATE_NAME" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="XSLUIConstants" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractUIPlugin" visibility="public" superclassfulltype="AbstractUIPlugin" fulltype="org.eclipse.wst.xsl.ui.internal.XSLUIPlugin" type="XSLUIPlugin" package="org.eclipse.wst.xsl.ui.internal">
		<comment>
			<description>The activator class controls the plug-in life cycle</description>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" name="PLUGIN_ID" static="true">
				<comment>
					<description>The plugin id for this plugin.</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="XSLUIPlugin">
				<comment>
					<description>The constructor</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="start">
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="stop">
				<params>
					<param fulltype="BundleContext" type="BundleContext" name="context" />
				</params>
				<exceptions>
					<exception fulltype="java.lang.Exception" type="Exception" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.ui.internal.XSLUIPlugin" returncomment="the shared instance" type="XSLUIPlugin" name="getDefault" static="true">
				<comment>
					<description>Returns the shared instance</description>
					<attribute name="@return">
						<description>the shared instance</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="void" type="void" name="log" static="true">
				<params>
					<param fulltype="java.lang.Exception" type="Exception" name="e" />
				</params>
			</method>
			<method visibility="public" fulltype="TemplateStore" returncomment="the template store for the xsl templates" type="TemplateStore" name="getTemplateStore">
				<comment>
					<description>Returns the template store for the xsl templates.</description>
					<attribute name="@return">
						<description>the template store for the xsl templates</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="ContextTypeRegistry" returncomment="the template context type registry for the xsl plugin" type="ContextTypeRegistry" name="getTemplateContextRegistry">
				<comment>
					<description>Returns the template context type registry for the xsl plugin.</description>
					<attribute name="@return">
						<description>the template context type registry for the xsl plugin</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.actions.NewDTDFileWizardDelegate" type="NewDTDFileWizardDelegate" package="org.eclipse.wst.xsl.ui.internal.actions">
		<methods>
			<constructor visibility="public" name="NewDTDFileWizardDelegate" />
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IWorkbenchWindow" type="IWorkbenchWindow" name="window" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="run">
				<params>
					<param fulltype="IAction" type="IAction" name="action" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="selectionChanged">
				<params>
					<param fulltype="IAction" type="IAction" name="action" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.actions.NewWSDLFileWizardDelegate" type="NewWSDLFileWizardDelegate" package="org.eclipse.wst.xsl.ui.internal.actions">
		<methods>
			<constructor visibility="public" name="NewWSDLFileWizardDelegate" />
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IWorkbenchWindow" type="IWorkbenchWindow" name="window" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="run">
				<params>
					<param fulltype="IAction" type="IAction" name="action" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="selectionChanged">
				<params>
					<param fulltype="IAction" type="IAction" name="action" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="Action" visibility="public" superclassfulltype="Action" fulltype="org.eclipse.wst.xsl.ui.internal.actions.NewWizardAction" type="NewWizardAction" package="org.eclipse.wst.xsl.ui.internal.actions">
		<methods>
			<constructor visibility="public" name="NewWizardAction">
				<params>
					<param fulltype="java.lang.String" type="String" name="id" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="run" />
			<method visibility="public" fulltype="void" type="void" name="setSelection">
				<params>
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.actions.NewXMLFileWizardDelegate" type="NewXMLFileWizardDelegate" package="org.eclipse.wst.xsl.ui.internal.actions">
		<methods>
			<constructor visibility="public" name="NewXMLFileWizardDelegate" />
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IWorkbenchWindow" type="IWorkbenchWindow" name="window" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="run">
				<params>
					<param fulltype="IAction" type="IAction" name="action" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="selectionChanged">
				<params>
					<param fulltype="IAction" type="IAction" name="action" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.actions.NewXSDFileWizardDelegate" type="NewXSDFileWizardDelegate" package="org.eclipse.wst.xsl.ui.internal.actions">
		<methods>
			<constructor visibility="public" name="NewXSDFileWizardDelegate" />
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IWorkbenchWindow" type="IWorkbenchWindow" name="window" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="run">
				<params>
					<param fulltype="IAction" type="IAction" name="action" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="selectionChanged">
				<params>
					<param fulltype="IAction" type="IAction" name="action" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.actions.NewXSLFileWizardDelegate" type="NewXSLFileWizardDelegate" package="org.eclipse.wst.xsl.ui.internal.actions">
		<methods>
			<constructor visibility="public" name="NewXSLFileWizardDelegate" />
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IWorkbenchWindow" type="IWorkbenchWindow" name="window" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="run">
				<params>
					<param fulltype="IAction" type="IAction" name="action" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="selectionChanged">
				<params>
					<param fulltype="IAction" type="IAction" name="action" />
					<param fulltype="ISelection" type="ISelection" name="selection" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.contentassist.Messages" type="Messages" package="org.eclipse.wst.xsl.ui.internal.contentassist">
		<comment>
			<description>TODO: Add Javadoc</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="java.lang.String" returncomment="" type="String" name="getString" static="true">
				<comment>
					<description>TODO: Add Javadoc</description>
					<attribute name="@param">
						<description>key</description>
					</attribute>
					<attribute name="@return" />
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XMLContentAssistProcessor" visibility="public" superclassfulltype="XMLContentAssistProcessor" fulltype="org.eclipse.wst.xsl.ui.internal.contentassist.XSLContentAssistProcessor" type="XSLContentAssistProcessor" package="org.eclipse.wst.xsl.ui.internal.contentassist">
		<comment>
			<description>The XSL Content Assist Processor provides content assistance for various
 attributes values within the XSL Editor. This includes support for xpaths on
 select statements as well as on test and match attributes.</description>
			<attribute name="@author">
				<description>David Carver</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLContentAssistProcessor">
				<comment>
					<description>The XSL Content Assist Processor handles XSL specific functionality for
 content assistance. It leverages several XPath selection variables to
 help with the selection of elements and template names.</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="ICompletionProposal[]" returncomment="" type="ICompletionProposal" name="computeCompletionProposals">
				<comment>
					<description>TODO: Add Javadoc</description>
					<attribute name="@param">
						<description>textViewer</description>
					</attribute>
					<attribute name="@param">
						<description>documentPosition</description>
					</attribute>
					<attribute name="@return" />
					<attribute name="@see">
						<description>org.eclipse.wst.xml.ui.contentassist.AbstractContentAssistProcessor#
 	computeCompletionProposals(org.eclipse.jface.text.ITextViewer, int)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="ITextViewer" type="ITextViewer" comment="" name="textViewer" />
					<param fulltype="int" type="int" comment="" name="documentPosition" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="addAttributeValueProposals">
				<comment>
					<description>Adds Attribute proposals based on the element and the attribute where the
 content proposal was instantiated.</description>
					<attribute name="@param">
						<description>contentAssistRequest
 		Content Assist Request that initiated the proposal request</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="ContentAssistRequest" type="ContentAssistRequest" comment="Content Assist Request that initiated the proposal request" name="contentAssistRequest" />
				</params>
			</method>
			<method visibility="protected" fulltype="java.lang.String" returncomment="" type="String" name="getMatchString">
				<comment>
					<description>Get the Match String.  This is typically the string-before the current
 offset position.   For a standard XML Region this is calculated from the
 beginning of the region (i.e. element, attribute, attribute value, etc.
 For XSL, an additional check has to be made to determine if we are parsing
 within an XPath region and where we are in the XPath region, as different
 content assistance can be made available depending on where we are at.  This
 primarily affects TEST, and SELECT attributes.</description>
					<attribute name="@param">
						<description>parent</description>
					</attribute>
					<attribute name="@param">
						<description>aRegion</description>
					</attribute>
					<attribute name="@param">
						<description>offset</description>
					</attribute>
					<attribute name="@return" />
				</comment>
				<params>
					<param fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" comment="" name="parent" />
					<param fulltype="ITextRegion" type="ITextRegion" comment="" name="aRegion" />
					<param fulltype="int" type="int" comment="" name="offset" />
				</params>
			</method>
			<method visibility="protected" fulltype="java.lang.String" type="String" name="extractXPathMatchString">
				<params>
					<param fulltype="IDOMAttr" type="IDOMAttr" name="node" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
					<param fulltype="int" type="int" name="offset" />
				</params>
			</method>
			<method visibility="protected" fulltype="IDOMAttr" type="IDOMAttr" name="isXPathRegion">
				<params>
					<param fulltype="IDOMNode" type="IDOMNode" name="currentNode" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
					<param fulltype="int" type="int" name="offset" />
				</params>
			</method>
			<method visibility="protected" fulltype="IDOMAttr" type="IDOMAttr" name="getXPathNode">
				<params>
					<param fulltype="org.w3c.dom.Node" type="Node" name="node" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="hasAttributeAtTextRegion">
				<params>
					<param fulltype="java.lang.String" type="String" name="attrName" />
					<param fulltype="org.w3c.dom.NamedNodeMap" type="NamedNodeMap" name="nodeMap" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
				</params>
			</method>
			<method visibility="protected" fulltype="IDOMAttr" type="IDOMAttr" name="getAttributeAtTextRegion">
				<params>
					<param fulltype="java.lang.String" type="String" name="attrName" />
					<param fulltype="org.w3c.dom.NamedNodeMap" type="NamedNodeMap" name="nodeMap" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
				</params>
			</method>
			<method visibility="protected" fulltype="java.lang.String" returncomment="" type="String" name="extractXMLMatchString">
				<comment>
					<description>An XML Match string is extracted starting from the beginning of the
 region to the current offset.</description>
					<attribute name="@param">
						<description>parent</description>
					</attribute>
					<attribute name="@param">
						<description>aRegion</description>
					</attribute>
					<attribute name="@param">
						<description>offset</description>
					</attribute>
					<attribute name="@return" />
				</comment>
				<params>
					<param fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" comment="" name="parent" />
					<param fulltype="ITextRegion" type="ITextRegion" comment="" name="aRegion" />
					<param fulltype="int" type="int" comment="" name="offset" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="hasXMLMatchString">
				<params>
					<param fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" name="parent" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
					<param fulltype="int" type="int" name="offset" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="isOffsetAfterStart">
				<params>
					<param fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" name="parent" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
					<param fulltype="int" type="int" name="offset" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="regionHasData">
				<params>
					<param fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" name="parent" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="isXMLContentRegion">
				<params>
					<param fulltype="java.lang.String" type="String" name="regionType" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="isOffsetAfterEndOffset">
				<params>
					<param fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" name="parent" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
					<param fulltype="int" type="int" name="offset" />
				</params>
			</method>
			<method visibility="protected" fulltype="int" type="int" name="getRegionEndOffset">
				<params>
					<param fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" name="parent" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="isXMLTagOpen">
				<params>
					<param fulltype="java.lang.String" type="String" name="regionType" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="isAttributeEqualsRegion">
				<params>
					<param fulltype="java.lang.String" type="String" name="regionType" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="isMatchStringEmpty">
				<params>
					<param fulltype="IStructuredDocumentRegion" type="IStructuredDocumentRegion" name="parent" />
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
					<param fulltype="int" type="int" name="offset" />
				</params>
			</method>
			<method visibility="protected" fulltype="boolean" type="boolean" name="isRegionNull">
				<params>
					<param fulltype="ITextRegion" type="ITextRegion" name="aRegion" />
				</params>
			</method>
			<method visibility="protected" fulltype="ContentAssistRequest" type="ContentAssistRequest" name="computeAttributeValueProposals">
				<params>
					<param fulltype="int" type="int" name="documentPosition" />
					<param fulltype="java.lang.String" type="String" name="matchString" />
					<param fulltype="ITextRegion" type="ITextRegion" name="completionRegion" />
					<param fulltype="IDOMNode" type="IDOMNode" name="nodeAtOffset" />
					<param fulltype="IDOMNode" type="IDOMNode" name="node" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XMLDoubleClickStrategy" visibility="public" superclassfulltype="XMLDoubleClickStrategy" fulltype="org.eclipse.wst.xsl.ui.internal.doubleclick.XSLDoubleClickStrategy" type="XSLDoubleClickStrategy" package="org.eclipse.wst.xsl.ui.internal.doubleclick">
		<comment>
			<description>XSLDoubleClickStrategy extends the XMLDoubleclickStrategy to take into
 account those areas that may be involved in XPath Expressions.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<fields>
			<field visibility="protected" fulltype="char[]" type="char" final="true" name="XML_DELIMITERS" static="true" />
			<field visibility="protected" fulltype="char[]" type="char" final="true" name="XML_PARENTHESIS" static="true" />
		</fields>
		<methods>
			<constructor visibility="public" name="XSLDoubleClickStrategy" />
			<method visibility="protected" fulltype="org.eclipse.swt.graphics.Point" type="Point" name="getWord">
				<params>
					<param fulltype="java.lang.String" type="String" name="string" />
					<param fulltype="int" type="int" name="cursor" />
				</params>
			</method>
			<method visibility="protected" fulltype="int" type="int" name="startOfWord">
				<params>
					<param fulltype="java.lang.String" type="String" name="string" />
					<param fulltype="int" type="int" name="cursor" />
					<param fulltype="int" type="int" name="wordStart" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.editor.SourceFileHyperlink" type="SourceFileHyperlink" package="org.eclipse.wst.xsl.ui.internal.editor">
		<methods>
			<constructor visibility="public" name="SourceFileHyperlink">
				<params>
					<param fulltype="IRegion" type="IRegion" name="hyperLinkRegion" />
					<param fulltype="IFile" type="IFile" name="linkedFile" />
				</params>
			</constructor>
			<constructor visibility="public" name="SourceFileHyperlink">
				<params>
					<param fulltype="IRegion" type="IRegion" name="hyperLinkRegion" />
					<param fulltype="IFile" type="IFile" name="linkedFile" />
					<param fulltype="org.eclipse.wst.xsl.core.internal.model.XSLNode" type="XSLNode" name="node" />
				</params>
			</constructor>
			<method visibility="public" fulltype="IRegion" type="IRegion" name="getHyperlinkRegion" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getTypeLabel" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getHyperlinkText" />
			<method visibility="public" fulltype="void" type="void" name="open" />
		</methods>
	</jelclass>
	<jelclass superclass="AbstractHyperlinkDetector" visibility="public" superclassfulltype="AbstractHyperlinkDetector" fulltype="org.eclipse.wst.xsl.ui.internal.editor.XSLHyperlinkDetector" type="XSLHyperlinkDetector" package="org.eclipse.wst.xsl.ui.internal.editor">
		<comment>
			<description>A hyperlink detector for XSL files.
 
 The detector makes use of the model built by SSE validation (found in &lt;code&gt;XSLCore&lt;/code&gt;).
 
 Currently supports hyperlinking for includes, imports or called templates.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLHyperlinkDetector" />
			<method visibility="public" fulltype="IHyperlink[]" returncomment="array of hyperlinks for current region" type="IHyperlink" name="detectHyperlinks">
				<comment>
					<description>Try to create hyperlinks for viewer and region</description>
					<attribute name="@see">
						<description>AbstractHyperlinkDetector</description>
					</attribute>
					<attribute name="@param">
						<description>textViewer</description>
					</attribute>
					<attribute name="@param">
						<description>region</description>
					</attribute>
					<attribute name="@param">
						<description>canShowMultipleHyperlinks</description>
					</attribute>
					<attribute name="@return">
						<description>array of hyperlinks for current region</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="ITextViewer" type="ITextViewer" comment="" name="textViewer" />
					<param fulltype="IRegion" type="IRegion" comment="" name="region" />
					<param fulltype="boolean" type="boolean" comment="" name="canShowMultipleHyperlinks" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractHandler" visibility="public" superclassfulltype="AbstractHandler" fulltype="org.eclipse.wst.xsl.ui.internal.handlers.OpenDeclarationHandler" type="OpenDeclarationHandler" package="org.eclipse.wst.xsl.ui.internal.handlers">
		<methods>
			<constructor visibility="public" name="OpenDeclarationHandler" />
			<method visibility="public" fulltype="java.lang.Object" type="Object" name="execute">
				<params>
					<param fulltype="ExecutionEvent" type="ExecutionEvent" name="event" />
				</params>
				<exceptions>
					<exception fulltype="ExecutionException" type="ExecutionException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.perspective.XMLPerspectiveFactory" type="XMLPerspectiveFactory" package="org.eclipse.wst.xsl.ui.internal.perspective">
		<comment>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XMLPerspectiveFactory" />
			<method visibility="public" fulltype="void" type="void" name="createInitialLayout">
				<comment>
					<description>Creates the initial layout.  This is what the layout is reset to
 when the Reset Perspective is selected.   It takes as input a
 IPageLayout object.</description>
					<attribute name="@param">
						<description>layout</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IPageLayout" type="IPageLayout" comment="" name="layout" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractPreferencePage" visibility="public" superclassfulltype="AbstractPreferencePage" fulltype="org.eclipse.wst.xsl.ui.internal.preferences.AbstractXSLPreferencePage" type="AbstractXSLPreferencePage" abstract="true" package="org.eclipse.wst.xsl.ui.internal.preferences">
		<comment>
			<description>Augments the SSE &lt;code&gt;AbstractPreferencePage&lt;/code&gt; with support for expandable composites (twisties) and combos.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
			<attribute name="@see">
				<description>org.eclipse.wst.sse.ui.internal.preferences.ui.AbstractPreferencePage</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="AbstractXSLPreferencePage" />
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" final="true" name="createContents">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Composite" returncomment="the composite" type="Composite" abstract="true" name="createCommonContents">
				<comment>
					<description>Called by createContents and must be implemented.</description>
					<attribute name="@param">
						<description>parent</description>
					</attribute>
					<attribute name="@return">
						<description>the composite</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" comment="" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="createTwistie">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
					<param fulltype="java.lang.String" type="String" name="label" />
					<param fulltype="int" type="int" name="cols" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Combo" type="Combo" name="createCombo">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
					<param fulltype="java.lang.String" type="String" name="label" />
					<param fulltype="java.lang.String" type="String" name="prefKey" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="dispose">
				<comment>
					<description>Saves the expansion states before calling super.</description>
					<attribute name="@see">
						<description>org.eclipse.jface.dialogs.DialogPage#dispose()</description>
					</attribute>
				</comment>
			</method>
			<method visibility="protected" fulltype="Preferences" type="Preferences" name="getModelPreferences" />
			<method visibility="public" fulltype="boolean" type="boolean" name="performOk">
				<comment>
					<description>Save the preferences.</description>
					<attribute name="@see">
						<description>org.eclipse.wst.sse.ui.internal.preferences.ui.AbstractPreferencePage#performOk()</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="PreferencePage" visibility="public" superclassfulltype="PreferencePage" fulltype="org.eclipse.wst.xsl.ui.internal.preferences.MainPreferencePage" type="MainPreferencePage" package="org.eclipse.wst.xsl.ui.internal.preferences">
		<methods>
			<constructor visibility="public" name="MainPreferencePage">
				<comment>
					<description>MainPreferncePage is the constructor for the XSL Preference Page</description>
				</comment>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="init">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>org.eclipse.ui.IWorkbenchPreferencePage#init(org.eclipse.ui.IWorkbench)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IWorkbench" type="IWorkbench" name="workbench" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Control" type="Control" name="createContents">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="ancestor" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="performOk">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>org.eclipse.jface.preference.PreferencePage#performOk()</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.preferences.Messages" type="Messages" package="org.eclipse.wst.xsl.ui.internal.preferences">
		<comment>
			<description>TODO: Add Javadoc</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<method visibility="public" fulltype="java.lang.String" returncomment="" type="String" name="getString" static="true">
				<comment>
					<description>TODO: Add Javadoc</description>
					<attribute name="@param">
						<description>key</description>
					</attribute>
					<attribute name="@return" />
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="" name="key" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractXSLPreferencePage" visibility="public" superclassfulltype="org.eclipse.wst.xsl.ui.internal.preferences.AbstractXSLPreferencePage" fulltype="org.eclipse.wst.xsl.ui.internal.preferences.ValidationPreferencePage" type="ValidationPreferencePage" package="org.eclipse.wst.xsl.ui.internal.preferences">
		<comment>
			<description>Preference page for XSL validator preferences.</description>
			<attribute name="@author">
				<description>Doug Satchwell</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="ValidationPreferencePage">
				<comment>
					<description>Create a new instance of this.</description>
				</comment>
			</constructor>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="createCommonContents">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
				</params>
			</method>
			<method visibility="protected" fulltype="org.eclipse.swt.widgets.Combo" type="Combo" name="createCombo">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="parent" />
					<param fulltype="java.lang.String" type="String" name="label" />
					<param fulltype="java.lang.String" type="String" name="prefKey" />
				</params>
			</method>
			<method visibility="protected" fulltype="void" type="void" name="initializeValues" />
			<method visibility="protected" fulltype="void" type="void" name="storeValues" />
			<method visibility="protected" fulltype="void" type="void" name="validateValues" />
			<method visibility="protected" fulltype="void" type="void" name="performDefaults" />
		</methods>
	</jelclass>
	<jelclass superclass="XMLTemplatePreferencePage" visibility="public" superclassfulltype="XMLTemplatePreferencePage" fulltype="org.eclipse.wst.xsl.ui.internal.preferences.XSLTemplatePreferencePage" type="XSLTemplatePreferencePage" package="org.eclipse.wst.xsl.ui.internal.preferences">
		<comment>
			<description>XSLTemplatePreferencePage sets up the template preference page that
 contains the templates for xpath, xpath 2.0, axis, operators, and 
 exslt functions.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLTemplatePreferencePage" />
			<method visibility="public" fulltype="boolean" type="boolean" name="performOk">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>org.eclipse.jface.preference.IPreferencePage#performOk()</description>
					</attribute>
				</comment>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="LineStyleProviderForXML" visibility="public" superclassfulltype="LineStyleProviderForXML" fulltype="org.eclipse.wst.xsl.ui.internal.style.LineStyleProviderForXSL" type="LineStyleProviderForXSL" package="org.eclipse.wst.xsl.ui.internal.style">
		<methods>
			<constructor visibility="public" name="LineStyleProviderForXSL" />
			<method visibility="protected" fulltype="IPreferenceStore" type="IPreferenceStore" name="getColorPreferences" />
		</methods>
	</jelclass>
	<jelclass superclass="TemplateContextType" visibility="public" superclassfulltype="TemplateContextType" fulltype="org.eclipse.wst.xsl.ui.internal.templates.TemplateContextTypeXSL" type="TemplateContextTypeXSL" package="org.eclipse.wst.xsl.ui.internal.templates">
		<methods>
			<constructor visibility="public" name="TemplateContextTypeXSL" />
		</methods>
	</jelclass>
	<jelclass superclass="SimpleTemplateVariableResolver" visibility="public" superclassfulltype="SimpleTemplateVariableResolver" fulltype="org.eclipse.wst.xsl.ui.internal.templates.VersionTemplateVariableResolverXSL" type="VersionTemplateVariableResolverXSL" package="org.eclipse.wst.xsl.ui.internal.templates">
		<methods>
			<constructor visibility="public" name="VersionTemplateVariableResolverXSL" />
			<method visibility="protected" fulltype="java.lang.String" type="String" name="resolve">
				<params>
					<param fulltype="TemplateContext" type="TemplateContext" name="context" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.util.XSLPluginImageHelper" type="XSLPluginImageHelper" package="org.eclipse.wst.xsl.ui.internal.util">
		<comment>
			<description>Helper class to handle images provided by this plug-in.
 
 NOTE: For internal use only. For images used externally, please use the
 Shared***ImageHelper class instead.</description>
			<attribute name="@author">
				<description>david carver based on work by amywu</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLPluginImageHelper" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.ui.internal.util.XSLPluginImageHelper" returncomment="Returns a XMLEditorPluginImageHelper" type="XSLPluginImageHelper" synchronized="true" name="getInstance" static="true">
				<comment>
					<description>Gets the instance.</description>
					<attribute name="@return">
						<description>Returns a XMLEditorPluginImageHelper</description>
					</attribute>
				</comment>
			</method>
			<method visibility="public" fulltype="org.eclipse.swt.graphics.Image" returncomment="Image the image associated with resource or null if one could
         not be found" type="Image" name="getImage">
				<comment>
					<description>Retrieves the image associated with resource from the image registry.
 If the image cannot be retrieved, attempt to find and load the image at
 the location specified in resource.</description>
					<attribute name="@param">
						<description>resource
            the image to retrieve</description>
					</attribute>
					<attribute name="@return">
						<description>Image the image associated with resource or null if one could
         not be found</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the image to retrieve" name="resource" />
				</params>
			</method>
			<method visibility="public" fulltype="ImageDescriptor" returncomment="ImageDescriptor the image descriptor assocated with resource or
         the default &quot;missing&quot; image descriptor if one could not be
         found" type="ImageDescriptor" name="getImageDescriptor">
				<comment>
					<description>Retrieves the image descriptor associated with resource from the image
 descriptor registry. If the image descriptor cannot be retrieved,
 attempt to find and load the image descriptor at the location specified
 in resource.</description>
					<attribute name="@param">
						<description>resource
            the image descriptor to retrieve</description>
					</attribute>
					<attribute name="@return">
						<description>ImageDescriptor the image descriptor assocated with resource or
         the default &quot;missing&quot; image descriptor if one could not be
         found</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.lang.String" type="String" comment="the image descriptor to retrieve" name="resource" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.util.XSLPluginImages" type="XSLPluginImages" package="org.eclipse.wst.xsl.ui.internal.util">
		<comment>
			<description>Bundle of most images used by the XSL Plugins</description>
		</comment>
		<fields>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/full/function.gif&quot;" const="icons/full/function.gif" name="IMG_XPATH_FUNCTION" static="true">
				<comment>
					<description>Path to the XPATH Images used for Content Assist</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/full/directional.gif&quot;" const="icons/full/directional.gif" name="IMG_XPATH_AXIS" static="true">
				<comment>
					<description>Path to the XPATH Images used for Content Assist</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/full/variable.gif&quot;" const="icons/full/variable.gif" name="IMG_VARIABLES" static="true">
				<comment>
					<description>Path to the XPATH Images used for Content Assist</description>
				</comment>
			</field>
			<field visibility="public" fulltype="java.lang.String" type="String" final="true" constexpr="&quot;icons/full/operation.gif&quot;" const="icons/full/operation.gif" name="IMG_OPERATOR" static="true">
				<comment>
					<description>Path to the XPATH Images used for Content Assist</description>
				</comment>
			</field>
		</fields>
		<methods>
			<constructor visibility="public" name="XSLPluginImages" />
		</methods>
	</jelclass>
	<jelclass superclass="DelegatingSourceValidator" visibility="public" superclassfulltype="DelegatingSourceValidator" fulltype="org.eclipse.wst.xsl.ui.internal.validation.DelegatingSourceValidatorForXSL" type="DelegatingSourceValidatorForXSL" package="org.eclipse.wst.xsl.ui.internal.validation">
		<comment>
			<description>This performs the as-you-type validation for xsl files</description>
		</comment>
		<methods>
			<constructor visibility="public" name="DelegatingSourceValidatorForXSL">
				<comment>
					<description>Constructor</description>
				</comment>
			</constructor>
			<method visibility="protected" fulltype="IValidator" type="IValidator" name="getDelegateValidator" />
		</methods>
	</jelclass>
	<jelclass superclass="DelegatingSourceValidator" visibility="public" superclassfulltype="DelegatingSourceValidator" fulltype="org.eclipse.wst.xsl.ui.internal.validation.DelegatingSourceValidatorForXalanXSL" type="DelegatingSourceValidatorForXalanXSL" package="org.eclipse.wst.xsl.ui.internal.validation">
		<comment>
			<description>This performs the as-you-type validation for xsl files</description>
		</comment>
		<methods>
			<constructor visibility="public" name="DelegatingSourceValidatorForXalanXSL">
				<comment>
					<description>Constructor</description>
				</comment>
			</constructor>
			<method visibility="protected" fulltype="IValidator" type="IValidator" name="getDelegateValidator" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.ui.internal.validation.XSLErrorListener" type="XSLErrorListener" package="org.eclipse.wst.xsl.ui.internal.validation">
		<implements>
			<interface fulltype="javax.xml.transform.ErrorListener" type="ErrorListener" />
		</implements>
		<comment>
			<description>This class listens for Errors tossed by a XSL Processor.</description>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLErrorListener">
				<comment>
					<description>TODO: Add Javadoc</description>
					<attribute name="@param">
						<description>logger</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="java.util.logging.Logger" type="Logger" comment="" name="logger" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="warning">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>javax.xml.transform.ErrorListener#warning(javax.xml.transform.TransformerException)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="javax.xml.transform.TransformerException" type="TransformerException" name="exception" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="error">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>javax.xml.transform.ErrorListener#error(javax.xml.transform.TransformerException)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="javax.xml.transform.TransformerException" type="TransformerException" name="exception" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="fatalError">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>javax.xml.transform.ErrorListener#fatalError(javax.xml.transform.TransformerException)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="javax.xml.transform.TransformerException" type="TransformerException" name="exception" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="MarkupValidator" visibility="public" superclassfulltype="MarkupValidator" fulltype="org.eclipse.wst.xsl.ui.internal.validation.XSLMarkupValidator" type="XSLMarkupValidator" package="org.eclipse.wst.xsl.ui.internal.validation">
		<comment>
			<attribute name="@author">
				<description>dcarver</description>
			</attribute>
		</comment>
		<methods>
			<constructor visibility="public" name="XSLMarkupValidator" />
			<method visibility="public" fulltype="void" type="void" name="cleanup">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>org.eclipse.wst.validation.internal.provisional.core.IValidator#cleanup(org.eclipse.wst.validation.internal.provisional.core.IReporter)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IReporter" type="IReporter" name="reporter" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="validate">
				<comment>
					<attribute name="@param">
						<description>helper</description>
					</attribute>
					<attribute name="@param">
						<description>reporter</description>
					</attribute>
					<attribute name="@throws">
						<description>ValidationException</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IValidationContext" type="IValidationContext" comment="" name="helper" />
					<param fulltype="IReporter" type="IReporter" comment="" name="reporter" />
				</params>
				<exceptions>
					<exception fulltype="ValidationException" type="ValidationException" comment="" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="connect">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>org.eclipse.wst.xml.ui.internal.validation.MarkupValidator#connect(org.eclipse.jface.text.IDocument)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IDocument" type="IDocument" name="document" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="disconnect">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>org.eclipse.wst.xml.ui.internal.validation.MarkupValidator#disconnect(org.eclipse.jface.text.IDocument)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IDocument" type="IDocument" name="document" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="validate">
				<comment>
					<description>(non-Javadoc)</description>
					<attribute name="@see">
						<description>org.eclipse.wst.xml.ui.internal.validation.MarkupValidator#validate(org.eclipse.jface.text.IRegion, org.eclipse.wst.validation.internal.provisional.core.IValidationContext, org.eclipse.wst.validation.internal.provisional.core.IReporter)</description>
					</attribute>
				</comment>
				<params>
					<param fulltype="IRegion" type="IRegion" name="dirtyRegion" />
					<param fulltype="IValidationContext" type="IValidationContext" name="helper" />
					<param fulltype="IReporter" type="IReporter" name="reporter" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="WizardPage" visibility="public" superclassfulltype="WizardPage" fulltype="org.eclipse.wst.xsl.ui.internal.wizards.NewXSLFileTemplatesWizardPage" type="NewXSLFileTemplatesWizardPage" package="org.eclipse.wst.xsl.ui.internal.wizards">
		<methods>
			<constructor visibility="public" name="NewXSLFileTemplatesWizardPage" />
			<method visibility="public" fulltype="void" type="void" name="createControl">
				<params>
					<param fulltype="org.eclipse.swt.widgets.Composite" type="Composite" name="ancestor" />
				</params>
			</method>
			<method visibility="package-private" fulltype="void" type="void" name="enableTemplates" />
			<method visibility="package-private" fulltype="java.lang.String" type="String" name="getTemplateString" />
			<method visibility="package-private" fulltype="void" type="void" name="linkClicked" />
			<method visibility="package-private" fulltype="void" type="void" name="saveLastSavedPreferences" />
			<method visibility="package-private" fulltype="void" type="void" name="updateViewerInput" />
		</methods>
	</jelclass>
	<jelclass superclass="Wizard" visibility="public" superclassfulltype="Wizard" fulltype="org.eclipse.wst.xsl.ui.internal.wizards.NewXSLFileWizard" type="NewXSLFileWizard" package="org.eclipse.wst.xsl.ui.internal.wizards">
		<methods>
			<constructor visibility="public" name="NewXSLFileWizard" />
			<method visibility="public" fulltype="void" type="void" name="addPages" />
			<method visibility="public" fulltype="void" type="void" name="init">
				<params>
					<param fulltype="IWorkbench" type="IWorkbench" name="aWorkbench" />
					<param fulltype="IStructuredSelection" type="IStructuredSelection" name="aSelection" />
				</params>
			</method>
			<method visibility="public" fulltype="boolean" type="boolean" name="performFinish" />
		</methods>
	</jelclass>
	<jelclass superclass="WizardNewFileCreationPage" visibility="package-private" superclassfulltype="WizardNewFileCreationPage" fulltype="org.eclipse.wst.xsl.ui.internal.wizards.NewXSLFileWizardPage" type="NewXSLFileWizardPage" package="org.eclipse.wst.xsl.ui.internal.wizards">
		<methods>
			<constructor visibility="public" name="NewXSLFileWizardPage">
				<params>
					<param fulltype="java.lang.String" type="String" name="pageName" />
					<param fulltype="IStructuredSelection" type="IStructuredSelection" name="selection" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="boolean" type="boolean" name="validatePage" />
			<method visibility="package-private" fulltype="java.lang.String" type="String" name="addDefaultExtension">
				<params>
					<param fulltype="java.lang.String" type="String" name="filename" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="AbstractDebugger" visibility="public" superclassfulltype="org.eclipse.wst.xsl.debugger.AbstractDebugger" fulltype="org.eclipse.wst.xsl.xalan.debugger.XalanDebugger" type="XalanDebugger" package="org.eclipse.wst.xsl.xalan.debugger">
		<methods>
			<constructor visibility="public" name="XalanDebugger" />
			<method visibility="public" fulltype="void" type="void" name="setTransformerFactory">
				<params>
					<param fulltype="javax.xml.transform.TransformerFactory" type="TransformerFactory" name="factory" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addTransformer">
				<params>
					<param fulltype="javax.xml.transform.Transformer" type="Transformer" name="transformer" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.debugger.Variable" type="Variable" name="getVariable">
				<params>
					<param fulltype="int" type="int" name="id" />
				</params>
			</method>
			<method visibility="package-private" fulltype="void" type="void" name="setCurrentTraceListener">
				<params>
					<param fulltype="org.eclipse.wst.xsl.xalan.debugger.XalanTraceListener" type="XalanTraceListener" name="currentTraceListener" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="PrintTraceListener" visibility="public" superclassfulltype="PrintTraceListener" fulltype="org.eclipse.wst.xsl.xalan.debugger.XalanPrintTraceListener" type="XalanPrintTraceListener" package="org.eclipse.wst.xsl.xalan.debugger">
		<methods>
			<constructor visibility="public" name="XalanPrintTraceListener">
				<params>
					<param fulltype="java.io.PrintWriter" type="PrintWriter" name="pw" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="_trace">
				<params>
					<param fulltype="TracerEvent" type="TracerEvent" name="ev" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="selected">
				<params>
					<param fulltype="SelectionEvent" type="SelectionEvent" name="ev" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="selectEnd">
				<params>
					<param fulltype="EndSelectionEvent" type="EndSelectionEvent" name="ev" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="trace">
				<params>
					<param fulltype="TracerEvent" type="TracerEvent" name="ev" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="traceEnd">
				<params>
					<param fulltype="TracerEvent" type="TracerEvent" name="ev" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="XalanStyleFrame" visibility="public" superclassfulltype="org.eclipse.wst.xsl.xalan.debugger.XalanStyleFrame" fulltype="org.eclipse.wst.xsl.xalan.debugger.XalanRootStyleFrame" type="XalanRootStyleFrame" package="org.eclipse.wst.xsl.xalan.debugger">
		<methods>
			<constructor visibility="public" name="XalanRootStyleFrame">
				<params>
					<param fulltype="TracerEvent" type="TracerEvent" name="event" />
				</params>
			</constructor>
			<method visibility="protected" fulltype="java.util.List" type="List" name="getGlobals" />
			<method visibility="public" fulltype="org.eclipse.wst.xsl.debugger.Variable" type="Variable" name="getVariable">
				<params>
					<param fulltype="int" type="int" name="id" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="addVariable">
				<params>
					<param fulltype="org.eclipse.wst.xsl.xalan.debugger.XalanVariable" type="XalanVariable" name="xvar" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="StyleFrame" visibility="public" superclassfulltype="org.eclipse.wst.xsl.debugger.StyleFrame" fulltype="org.eclipse.wst.xsl.xalan.debugger.XalanStyleFrame" type="XalanStyleFrame" package="org.eclipse.wst.xsl.xalan.debugger">
		<fields>
			<field visibility="package-private" fulltype="TracerEvent" type="TracerEvent" final="true" name="event" />
		</fields>
		<methods>
			<constructor visibility="public" name="XalanStyleFrame">
				<params>
					<param fulltype="org.eclipse.wst.xsl.debugger.StyleFrame" type="StyleFrame" name="parent" />
					<param fulltype="TracerEvent" type="TracerEvent" name="event" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getFilename" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getName" />
			<method visibility="public" fulltype="java.util.List" type="List" name="getVariableStack" />
			<method visibility="public" fulltype="int" type="int" name="getCurrentLine" />
			<method visibility="public" fulltype="void" type="void" name="pushElement">
				<params>
					<param fulltype="TracerEvent" type="TracerEvent" name="e" />
				</params>
			</method>
			<method visibility="public" fulltype="TracerEvent" type="TracerEvent" name="popElement" />
			<method visibility="public" fulltype="TracerEvent" type="TracerEvent" name="peekElement" />
			<method visibility="protected" fulltype="java.util.List" type="List" name="getGlobals" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getSourceFilename" />
			<method visibility="public" fulltype="int" type="int" name="getSourceCurrentLine" />
		</methods>
	</jelclass>
	<jelclass superclass="Object" visibility="public" superclassfulltype="java.lang.Object" fulltype="org.eclipse.wst.xsl.xalan.debugger.XalanTraceListener" type="XalanTraceListener" package="org.eclipse.wst.xsl.xalan.debugger">
		<methods>
			<constructor visibility="public" name="XalanTraceListener">
				<params>
					<param fulltype="org.eclipse.wst.xsl.xalan.debugger.XalanDebugger" type="XalanDebugger" name="debugger" />
				</params>
			</constructor>
			<method visibility="public" fulltype="void" type="void" name="trace">
				<params>
					<param fulltype="TracerEvent" type="TracerEvent" name="ev" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="traceEnd">
				<params>
					<param fulltype="TracerEvent" type="TracerEvent" name="ev" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="selected">
				<params>
					<param fulltype="SelectionEvent" type="SelectionEvent" name="ev" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="selectEnd">
				<params>
					<param fulltype="EndSelectionEvent" type="EndSelectionEvent" name="ev" />
				</params>
				<exceptions>
					<exception fulltype="javax.xml.transform.TransformerException" type="TransformerException" />
				</exceptions>
			</method>
			<method visibility="public" fulltype="void" type="void" name="generated">
				<params>
					<param fulltype="GenerateEvent" type="GenerateEvent" name="ev" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="extension">
				<params>
					<param fulltype="ExtensionEvent" type="ExtensionEvent" name="ee" />
				</params>
			</method>
			<method visibility="public" fulltype="void" type="void" name="extensionEnd">
				<params>
					<param fulltype="ExtensionEvent" type="ExtensionEvent" name="ee" />
				</params>
			</method>
			<method visibility="public" fulltype="org.eclipse.wst.xsl.debugger.Variable" type="Variable" name="getVariable">
				<params>
					<param fulltype="int" type="int" name="id" />
				</params>
			</method>
		</methods>
	</jelclass>
	<jelclass superclass="Variable" visibility="public" superclassfulltype="org.eclipse.wst.xsl.debugger.Variable" fulltype="org.eclipse.wst.xsl.xalan.debugger.XalanVariable" type="XalanVariable" package="org.eclipse.wst.xsl.xalan.debugger">
		<implements>
			<interface fulltype="java.lang.Comparable" type="Comparable" />
		</implements>
		<methods>
			<constructor visibility="public" name="XalanVariable">
				<params>
					<param fulltype="org.eclipse.wst.xsl.xalan.debugger.XalanStyleFrame" type="XalanStyleFrame" name="xalanStyleFrame" />
					<param fulltype="VariableStack" type="VariableStack" name="varStack" />
					<param fulltype="java.lang.String" type="String" name="scope" />
					<param fulltype="int" type="int" name="slotNumber" />
					<param fulltype="ElemVariable" type="ElemVariable" name="elemVariable" />
				</params>
			</constructor>
			<method visibility="public" fulltype="java.lang.String" type="String" name="getType" />
			<method visibility="public" fulltype="java.lang.String" type="String" name="getValue" />
			<method visibility="public" fulltype="int" type="int" name="compareTo">
				<params>
					<param fulltype="java.lang.Object" type="Object" name="arg0" />
				</params>
			</method>
		</methods>
	</jelclass>
</jel>
