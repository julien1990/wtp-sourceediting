/*******************************************************************************
 * Copyright (c) 2000, 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.eclipse.wst.jsdt.internal.compiler.parser;

/**
 * IMPORTANT NOTE: These constants are dedicated to the internal Scanner implementation. 
 * It is mirrored in org.eclipse.wst.jsdt.core.compiler public package where it is API. 
 * The mirror implementation is using the backward compatible ITerminalSymbols constant 
 * definitions (stable with 2.0), whereas the internal implementation uses TerminalTokens 
 * which constant values reflect the latest parser generation state.
 */
/**
 * Maps each terminal symbol in the java-grammar into a unique integer. 
 * This integer is used to represent the terminal when computing a parsing action. 
 * 
 * Disclaimer : These constant values are generated automatically using a Java 
 * grammar, therefore their actual values are subject to change if new keywords 
 * were added to the language (for instance, 'assert' is a keyword in 1.4).
 */ 
public interface TerminalTokens {

	// special tokens not part of grammar - not autogenerated
	int TokenNameWHITESPACE = 1000,
		TokenNameCOMMENT_LINE = 1001,
		TokenNameCOMMENT_BLOCK = 1002,
		TokenNameCOMMENT_JAVADOC = 1003,
		TokenNameUNKNOWN=1004;

	int
    TokenNameIdentifier = 32,
    TokenNameabstract = 87,
    TokenNameboolean = 88,
    TokenNamebreak = 60,
    TokenNamebyte = 89,
    TokenNamecase = 82,
    TokenNamecatch = 84,
    TokenNamechar = 90,
    TokenNameclass = 91,
    TokenNamecontinue = 61,
    TokenNameconst = 92,
    TokenNamedefault = 83,
    TokenNamedelete = 48,
    TokenNamedebugger = 93,
    TokenNamedo = 62,
    TokenNamedouble = 94,
    TokenNameelse = 85,
    TokenNameenum = 95,
    TokenNameexport = 96,
    TokenNameextends = 97,
    TokenNamefalse = 36,
    TokenNamefinal = 98,
    TokenNamefinally = 86,
    TokenNamefloat = 99,
    TokenNamefor = 63,
    TokenNamefunction = 56,
    TokenNamegoto = 100,
    TokenNameif = 64,
    TokenNamein = 25,
    TokenNameinfinity = 101,
    TokenNameimplements = 102,
    TokenNameimport = 103,
    TokenNameinstanceof = 13,
    TokenNameint = 104,
    TokenNameinterface = 105,
    TokenNamelong = 106,
    TokenNamenative = 107,
    TokenNamenew = 37,
    TokenNamenull = 38,
    TokenNamepackage = 108,
    TokenNameprivate = 109,
    TokenNameprotected = 110,
    TokenNamepublic = 111,
    TokenNamereturn = 65,
    TokenNameshort = 112,
    TokenNamestatic = 113,
    TokenNamestrictfp = 114,
    TokenNamesuper = 115,
    TokenNameswitch = 66,
    TokenNamesynchronized = 116,
    TokenNamethis = 39,
    TokenNamethrow = 67,
    TokenNamethrows = 117,
    TokenNametransient = 118,
    TokenNametrue = 40,
    TokenNametry = 68,
    TokenNametypeof = 49,
    TokenNameundefined = 41,
    TokenNamevar = 57,
    TokenNamevoid = 50,
    TokenNamevolatile = 119,
    TokenNamewith = 69,
    TokenNamewhile = 58,
    TokenNameIntegerLiteral = 34,
    TokenNameLongLiteral = 42,
    TokenNameFloatingPointLiteral = 43,
    TokenNameDoubleLiteral = 44,
    TokenNameCharacterLiteral = 45,
    TokenNameStringLiteral = 35,
    TokenNameRegExLiteral = 46,
    TokenNamePLUS_PLUS = 11,
    TokenNameMINUS_MINUS = 12,
    TokenNameEQUAL_EQUAL = 18,
    TokenNameEQUAL_EQUAL_EQUAL = 19,
    TokenNameNOT_EQUAL_EQUAL = 20,
    TokenNameLESS_EQUAL = 14,
    TokenNameGREATER_EQUAL = 15,
    TokenNameNOT_EQUAL = 21,
    TokenNameLEFT_SHIFT = 5,
    TokenNameRIGHT_SHIFT = 6,
    TokenNameUNSIGNED_RIGHT_SHIFT = 4,
    TokenNamePLUS_EQUAL = 71,
    TokenNameMINUS_EQUAL = 72,
    TokenNameMULTIPLY_EQUAL = 73,
    TokenNameDIVIDE_EQUAL = 74,
    TokenNameAND_EQUAL = 75,
    TokenNameOR_EQUAL = 76,
    TokenNameXOR_EQUAL = 77,
    TokenNameREMAINDER_EQUAL = 78,
    TokenNameLEFT_SHIFT_EQUAL = 79,
    TokenNameRIGHT_SHIFT_EQUAL = 80,
    TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL = 81,
    TokenNameOR_OR = 28,
    TokenNameAND_AND = 27,
    TokenNamePLUS = 1,
    TokenNameMINUS = 2,
    TokenNameNOT = 51,
    TokenNameREMAINDER = 8,
    TokenNameXOR = 24,
    TokenNameAND = 22,
    TokenNameMULTIPLY = 9,
    TokenNameOR = 26,
    TokenNameTWIDDLE = 47,
    TokenNameDIVIDE = 10,
    TokenNameGREATER = 16,
    TokenNameLESS = 17,
    TokenNameLPAREN = 3,
    TokenNameRPAREN = 33,
    TokenNameLBRACE = 52,
    TokenNameRBRACE = 59,
    TokenNameLBRACKET = 7,
    TokenNameRBRACKET = 54,
    TokenNameSEMICOLON = 30,
    TokenNameQUESTION = 29,
    TokenNameCOLON = 53,
    TokenNameCOMMA = 31,
    TokenNameDOT = 23,
    TokenNameEQUAL = 70,
    TokenNameAT = 120,
    TokenNameEOF = 55,
    TokenNameERROR = 121;
}
