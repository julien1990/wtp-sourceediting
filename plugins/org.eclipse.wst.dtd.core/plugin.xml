<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>

	<extension point="org.eclipse.wst.sse.core.modelHandler">
		<modelHandler
			class="org.eclipse.wst.dtd.core.internal.modelhandler.ModelHandlerForDTD"
			associatedContentTypeId="org.eclipse.wst.dtd.core.dtdsource"
			id="org.eclipse.wst.dtd.core.internal.modelhandler">
		</modelHandler>
	</extension>

	<extension point="org.eclipse.wst.sse.core.taskscanner">
		<scanner
			id="org.eclipse.wst.dtd.core.internal.tasks.DTDFileTaskScanner"
			class="org.eclipse.wst.dtd.core.internal.tasks.DTDFileTaskScanner"
			contentTypeIds="org.eclipse.wst.dtd.core.dtdsource" />
	</extension>

	<extension
		point="org.eclipse.core.filebuffers.documentCreation"
		id="org.eclipse.wst.dtd.core.documentfactories"
		name="%Structured_DTD_Document_Factory_Extension.name">
		<factory
			contentTypeId="org.eclipse.wst.dtd.core.dtdsource"
			class="org.eclipse.wst.sse.core.internal.filebuffers.BasicStructuredDocumentFactory" />
	</extension>

	<extension point="org.eclipse.team.core.fileTypes">
		<fileTypes
			type="text"
			extension="dtd" />
		<fileTypes
			type="text"
			extension="mod" />
		<fileTypes
			type="text"
			extension="ent" />
	</extension>

	<extension point="org.eclipse.core.runtime.contentTypes">
		<content-type
			file-extensions="dtd,mod,ent"
			priority="normal"
			name="%DTD_Content_Type_Extension_Element.name"
			id="dtdsource"
			base-type="org.eclipse.core.runtime.text"
			default-charset="UTF-8">
			<describer
				class="org.eclipse.wst.dtd.core.internal.content.ContentDescriberForDTD" />
		</content-type>
	</extension>

	<extension point="org.eclipse.emf.ecore.extension_parser">
		<parser
			type="dtd"
			class="org.eclipse.wst.dtd.core.internal.emf.util.DTDResourceFactoryImpl">
		</parser>
	</extension>

	<extension point="org.eclipse.emf.ecore.extension_parser">
		<parser
			type="ent"
			class="org.eclipse.wst.dtd.core.internal.emf.util.DTDResourceFactoryImpl">
		</parser>
	</extension>

	<extension point="org.eclipse.emf.ecore.generated_package">
		<package
			uri="DTD.xmi"
			class="org.eclipse.wst.dtd.core.internal.emf.impl.DTDPackageImpl">
		</package>
	</extension>

	<extension point="org.eclipse.wst.xml.core.documentFactories">
		<factory
			type="dtd, ent, mod, xml"
			class="org.eclipse.wst.dtd.core.internal.contentmodel.CMDocumentFactoryDTD">
		</factory>
	</extension>

	<!-- initialize dtd core preferences -->
	<extension point="org.eclipse.core.runtime.preferences">
		<initializer
			class="org.eclipse.wst.dtd.core.internal.preferences.DTDCorePreferenceInitializer" />
	</extension>
	
	<!-- ====================================================== -->
	<!-- Register the DTD validator with the validation 		-->
	<!-- framework. 										    -->
	<!-- ====================================================== -->
	<extension
		id="dtdDTDValidator"
		name="%_DTD_VALIDATOR_NAME"
		point="org.eclipse.wst.validation.validator">
		<validator>
			<filter
				objectClass="org.eclipse.core.resources.IFile"
				caseSensitive="false"
				nameFilter="*.dtd">
			</filter>
         	<contentTypeBinding contentTypeId="org.eclipse.wst.dtd.core.dtdsource"/>
			<helper class="org.eclipse.wst.xml.core.internal.validation.core.Helper"/>
			<run
				async="true"
         		class="org.eclipse.wst.dtd.core.internal.validation.eclipse.Validator"
         		enabled="true"
         		fullBuild="true"
         		incremental="true"/>
		</validator>
	</extension>

	<!-- ====================================================== -->
	<!-- DTD as you type validation								-->
	<!-- ====================================================== -->
	<extension point="org.eclipse.wst.sse.ui.sourcevalidation">
		<validator
			scope="total"
			class="org.eclipse.wst.dtd.core.internal.validation.eclipse.Validator"
			id="org.eclipse.wst.dtd.dtdsourcevalidator">
			<contentTypeIdentifier
				id="org.eclipse.wst.dtd.core.dtdsource">
				<partitionType id="org.eclipse.wst.dtd.DEFAULT">
				</partitionType>
			</contentTypeIdentifier>
		</validator>
	</extension>
	
</plugin>
